specVersion: 0.0.5
features:
  - nonFatalErrors
schema:
  file: ./src/schema.graphql
dataSources:
  - kind: ethereum/contract
    name: RegistryFactoryV0_0
    network: celo
    context:
      chainId: 
        type: Int
        data: 42220
    source:
      address: "0xA71023bc64c9711C2037ab491DE80fd74504bd55"
      abi: RegistryFactoryV0_0
      startBlock: 31270470
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - RegistryFactoryV0_0
        - RegistryCommunity
      abis:
        - name: RegistryFactoryV0_0
          file: ../contracts/out/RegistryFactoryV0_0.sol/RegistryFactoryV0_0.json
        - name: RegistryCommunityV0_0
          file: ../contracts/out/RegistryCommunityV0_0.sol/RegistryCommunityV0_0.json
      eventHandlers:
        - event: CommunityCreated(address)
          handler: handleCommunityCreated
        - event: CommunityValiditySet(address,bool)
          handler: handleCommunityValiditySet
        - event: ProtocolFeeSet(address,uint256)
          handler: handleProtocolFeeSet  
        - event: Initialized(uint8)
          handler: handleRegistryInitialized  
      file: ./src/mappings/registry-factory.ts

  - kind: ethereum/contract
    name: PassportScorer
    network: celo
    context:
      chainId: 
        type: Int
        data: 42220
    source:
      address: "0xb39dfa15f96055664179e8ecaa890f3fa26c21e9"
      abi: PassportScorer
      startBlock: 31270470
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - PassportScorer
      abis:
        - name: PassportScorer
          file: ../contracts/out/PassportScorer.sol/PassportScorer.json
      eventHandlers:
        - event: Initialized(uint8)
          handler: handleInitialized
        - event: UserScoreAdded(indexed address,uint256)
          handler: handleUserScoreAdded
        - event: UserRemoved(indexed address)
          handler: handleUserRemoved
        - event: StrategyAdded(indexed address,uint256,bool,address)
          handler: handleStrategyAdded
        - event: StrategyRemoved(indexed address)
          handler: handleStrategyRemoved
        - event: StrategyActivated(indexed address)
          handler: handleStrategyActivated
        - event: ThresholdModified(indexed address,uint256)
          handler: handleThresholdModified
      file: ./src/mappings/passport-scorer.ts

templates:
  - kind: ethereum/contract
    name: RegistryCommunityV0_0
    network: celo
    source:
      abi: RegistryCommunityV0_0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - RegistryCommunity
        - ERC20
        - CVStrategy
        - TokenGarden
        - Member
      abis:
        - name: RegistryCommunityV0_0
          file: ../contracts/out/RegistryCommunityV0_0.sol/RegistryCommunityV0_0.json
        - name: ERC20
          file: ../contracts/out/ERC20.sol/ERC20.json
        - name: CVStrategyV0_0
          file: ../contracts/out/CVStrategyV0_0.sol/CVStrategyV0_0.json
        - name: RegistryFactoryV0_0
          file: ../contracts/out/RegistryFactoryV0_0.sol/RegistryFactoryV0_0.json
     
      eventHandlers:
        - event: RegistryInitialized(bytes32,string,(uint256,string))
          handler: handleInitialized
        - event: MemberRegistered(address,uint256)
          handler: handleMemberRegistered
        - event: MemberRegisteredWithCovenant(address,uint256,string)
          handler: handleMemberRegisteredWithCovenant
        - event: MemberUnregistered(address,uint256)
          handler: handleMemberUnregistered
        - event: PoolCreated(uint256,address,address,address,(uint256,string))
          handler: handlePoolCreated
        - event: MemberKicked(address,address,uint256)
          handler: handleMemberKicked
        - event: CommunityFeeUpdated(uint256)
          handler: handleCommunityFeeUpdated
        # - event: ProtocolFeeUpdated(uint256)
        #   handler: handleProtocolFeeUpdated
        - event: StrategyAdded(address)
          handler: handleStrategyAdded
        - event: StrategyRemoved(address)
          handler: handleStrategyRemoved
        - event: MemberActivatedStrategy(address,address,uint256)
          handler: handleMemberActivatedStrategy
        - event: MemberDeactivatedStrategy(address,address)
          handler: handleMemberDeactivatedStrategy
        - event: MemberPowerDecreased(address,uint256)
          handler: handleMemberPowerDecreased
        - event: MemberPowerIncreased(address,uint256)
          handler: handleMemberPowerIncreased
        - event: BasisStakedAmountUpdated(uint256)
          handler: handleBasisStakedAmountUpdated
        - event: CouncilSafeUpdated(address)
          handler: handleCouncilSafeUpdated
        - event: CouncilSafeChangeStarted(address,address)
          handler: handleCouncilSafeChangeStarted
        - event: KickEnabledUpdated(bool)
          handler: handleKickEnabledUpdated
        - event: CovenantIpfsHashUpdated(string)
          handler: handleCovenantIpfsHashUpdated
        - event: CommunityNameUpdated(string)
          handler: handleCommunityNameUpdated
        - event: FeeReceiverChanged(address)
          handler: handleFeeReceiverChanged
        - event: PoolRejected(address)
          handler: handlePoolRejected
      file: ./src/mappings/registry-community.ts

  - kind: ethereum/contract
    name: CVStrategyV0_0
    network: celo
    source:
      abi: CVStrategyV0_0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - CVStrategy
        - CVStrategyConfig
        - CVProposal
        - Allo
      abis:
        - name: CVStrategyV0_0
          file: ../contracts/out/CVStrategyV0_0.sol/CVStrategyV0_0.json
        - name: RegistryCommunityV0_0
          file: ../contracts/out/RegistryCommunityV0_0.sol/RegistryCommunityV0_0.json
        - name: Allo
          file: ../contracts/out/Allo.sol/Allo.json
      eventHandlers:
        - event: InitializedCV(uint256,((uint256,uint256,uint256,uint256),uint8,uint8,(uint256),(address,address,uint256,uint256,uint256,uint256),address,address))
          handler: handleInitialized
        - event: InitializedCV2(uint256,((uint256,uint256,uint256,uint256),uint8,uint8,(uint256),(address,address,uint256,uint256,uint256,uint256),address,address,uint256,address[]))
          handler: handleInitializedV2
        - event: ProposalCreated(uint256,uint256)
          handler: handleProposalCreated
        - event: PoolAmountIncreased(uint256)
          handler: handlePoolAmountIncreased
        - event: SupportAdded(address,uint256,uint256,uint256,uint256)
          handler: handleSupportAdded
        - event: Distributed(uint256,address,uint256)
          handler: handleDistributed
        - event: PowerIncreased(address,uint256,uint256)
          handler: handlePowerIncreased
        - event: PowerDecreased(address,uint256,uint256)
          handler: handlePowerDecreased
        - event: PointsDeactivated(address)
          handler: handlePointsDeactivated
        - event: CVParamsUpdated((uint256,uint256,uint256,uint256))
          handler: handleCVParamsUpdated
        - event: ProposalDisputed(address,uint256,uint256,address,string,uint256)
          handler: handleProposalDisputed
        - event: Ruling(indexed address,indexed uint256,uint256)
          handler: handleDisputeRuled
        - event: ProposalCancelled(uint256)
          handler: handleProposalCancelled
        - event: ArbitrableConfigUpdated(uint256,address,address,uint256,uint256,uint256,uint256)
          handler: handleArbitrableConfigUpdated
        - event: AllowlistMembersAdded(uint256,address[])
          handler: handleAllowlistMembersAdded
        - event: AllowlistMembersRemoved(uint256,address[])
          handler: handleAllowlistMembersRemoved
        - event: SybilScorerUpdated(address)
          handler: handleSybilScorerUpdated
 
      file: ./src/mappings/cv-strategy.ts

  - kind: ethereum/contract
    name: CollateralVault
    network: celo
    source:
      abi: CollateralVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - CollateralVault
        - CollateralVaultDeposit
      abis:
        - name: CollateralVault
          file: ../contracts/out/CollateralVault.sol/CollateralVault.json
      eventHandlers:
        - event: CollateralDeposited(uint256,indexed address,uint256)
          handler: handleCollateralDeposited
        - event: CollateralWithdrawn(uint256,indexed address,indexed address,uint256,bool)
          handler: handleCollateralWithdrawnFor
        - event: CollateralWithdrawn(uint256,indexed address,uint256,bool)
          handler: handleCollateralWithdrawn
      file: ./src/mappings/cv-strategy.ts  
  
  - name: ProposalDisputeMetadata
    kind: file/ipfs
    mapping:
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/proposal-metadata.ts
      handler: handleProposalDisputeMetadata
      entities:
        - ProposalDisputeMetadata
      abis:
        - name: CVStrategyV0_0
          file: ../contracts/out/CVStrategyV0_0.sol/CVStrategyV0_0.json
  
  - name: ProposalMetadata
    kind: file/ipfs
    mapping:
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/proposal-metadata.ts
      handler: handleProposalMetadata
      entities:
        - ProposalMetadata
      abis:
        - name: CVStrategyV0_0
          file: ../contracts/out/CVStrategyV0_0.sol/CVStrategyV0_0.json