query getFactories {
  registryFactories {
    id
    registryCommunities {
      id
      chainId
      communityName
      covenantIpfsHash
      registerToken
      alloAddress
      members {
        memberAddress
      }
      strategies {
        id
        poolId
        config {
          id
          decay
          maxRatio
          weight
        }
      }
    }
  }
}

query getTokenGardens {
  tokenGardens {
    id
    chainId
    name
    symbol
    decimals
    totalBalance
    communities {
      id
      chainId
      communityFee
      members {
        id
      }
    }
  }
}

query isMember($me: ID!, $comm: String!) {
  members(where: { id: $me }) {
    id
    memberCommunity(where: { registryCommunity_contains: $comm }) {
      id
      registryCommunity {
        id
      }
    }
  }
}

query getCommunitiesByGarden($addr: ID!) {
  registryFactories {
    id
  }
  tokenGarden(id: $addr) {
    id
    name
    symbol
    decimals
    chainId
    communities {
      id
      covenantIpfsHash
      chainId
      communityName
      protocolFee
      communityFee
      registerToken
      registerStakeAmount
      alloAddress
      members(where: { stakedAmount_gt: "0" }) {
        id
        memberAddress
      }
      strategies {
        registryCommunity {
          registerStakeAmount
        }
        id
        poolId
        poolAmount
        config {
          id
          proposalType
          pointSystem
        }
        proposals {
          id
        }
      }
    }
  }
}

query getPoolData($garden: ID!, $poolId: BigInt!) {
  allos {
    id
    chainId
    tokenNative
  }
  tokenGarden(id: $garden) {
    name
    symbol
    description
    totalBalance
    ipfsCovenant
    decimals
  }
  cvstrategies(where: { poolId: $poolId }) {
    poolAmount
    metadata
    id
    poolId
    config {
      id
      proposalType
      pointSystem
      maxRatio
    }
    registryCommunity {
      id
    }
    proposals {
      id
      metadata
      beneficiary
      requestedAmount
      requestedToken
      proposalStatus
      stakedAmount
    }
  }
}

query getProposalData($garden: ID!, $proposalId: ID!) {
  tokenGarden(id: $garden) {
    name
    symbol
  }
  cvproposal(id: $proposalId) {
    beneficiary
    blockLast
    convictionLast
    createdAt
    metadata
    proposalStatus
    requestedAmount
    requestedToken
    stakedAmount
    submitter
    threshold
    updatedAt
    version
    strategy {
      id
      config {
        proposalType
        pointSystem
      }
    }
  }
}

query getAllo {
  allos {
    id
    chainId
    tokenNative
  }
}

query getStrategyByPool($poolId: BigInt!) {
  cvstrategies(where: { poolId: $poolId }) {
    id
    poolId
    config {
      id
      proposalType
      pointSystem
    }
    registryCommunity {
      id
    }
    proposals {
      id
      metadata
      beneficiary
      requestedAmount
      requestedToken
      proposalStatus
      stakedAmount
    }
  }
}
