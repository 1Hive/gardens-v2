{"abi":[{"type":"function","name":"getStorageAt","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"length","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"simulateAndRevert","inputs":[{"name":"targetContract","type":"address","internalType":"address"},{"name":"calldataPayload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getStorageAt(uint256,uint256)":"5624b25b","simulateAndRevert(address,bytes)":"b4faba09"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"getStorageAt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"calldataPayload\",\"type\":\"bytes\"}],\"name\":\"simulateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Gnosis Developers\",\"kind\":\"dev\",\"methods\":{\"getStorageAt(uint256,uint256)\":{\"params\":{\"length\":\"- the number of words (32 bytes) of data to read\",\"offset\":\"- the offset in the current contract's storage in words to start reading from\"},\"returns\":{\"_0\":\"the bytes that were read.\"}},\"simulateAndRevert(address,bytes)\":{\"details\":\"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.\",\"params\":{\"calldataPayload\":\"Calldata that should be sent to the target contract (encoded method name and arguments).\",\"targetContract\":\"Address of the contract containing the code to execute.\"}}},\"title\":\"StorageAccessible - A generic base contract that allows callers to access all internal storage.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getStorageAt(uint256,uint256)\":{\"notice\":\"Reads `length` bytes of storage in the currents contract\"}},\"notice\":\"See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol         It removes a method from the original contract not needed for the Safe contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":\"StorageAccessible\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/contracts/=lib/allo-v2/lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/allo-v2/lib/v2-core/lib/prb-math/\",\":@prb/test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/\",\":@sablier/v2-core/=lib/allo-v2/lib/v2-core/\",\":ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/\",\":allo-v2-contracts/=lib/allo-v2/contracts/\",\":allo-v2-test/=lib/allo-v2/test/\",\":allo-v2/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/allo-v2/lib/eas-contracts/contracts/\",\":eas-proxy/=lib/allo-v2/lib/eas-proxy/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/allo-v2/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hats-protocol/=lib/allo-v2/lib/hats-protocol/\",\":hedgey-vesting/=lib/allo-v2/lib/hedgey-vesting/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/allo-v2/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/allo-v2/lib/permit2/\",\":prb-math/=lib/allo-v2/lib/v2-core/lib/prb-math/src/\",\":prb-test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/\",\":solady/=lib/allo-v2/lib/solady/\",\":solarray/=lib/allo-v2/lib/v2-core/lib/solarray/src/\",\":solbase/=lib/allo-v2/lib/hats-protocol/lib/solbase/src/\",\":solmate/=lib/allo-v2/lib/permit2/lib/solmate/\",\":superfluid-protocol-monorepo/=lib/allo-v2/lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\",\":utils/=lib/allo-v2/lib/hats-protocol/lib/utils/\",\":v2-core/=lib/allo-v2/lib/v2-core/\"]},\"sources\":{\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e\",\"dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStorageAt","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"targetContract","type":"address"},{"internalType":"bytes","name":"calldataPayload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"simulateAndRevert"}],"devdoc":{"kind":"dev","methods":{"getStorageAt(uint256,uint256)":{"params":{"length":"- the number of words (32 bytes) of data to read","offset":"- the offset in the current contract's storage in words to start reading from"},"returns":{"_0":"the bytes that were read."}},"simulateAndRevert(address,bytes)":{"details":"Performs a delegatecall on a targetContract in the context of self. Internally reverts execution to avoid side effects (making it static). This method reverts with data equal to `abi.encode(bool(success), bytes(response))`. Specifically, the `returndata` after a call to this method will be: `success:bool || response.length:uint256 || response:bytes`.","params":{"calldataPayload":"Calldata that should be sent to the target contract (encoded method name and arguments).","targetContract":"Address of the contract containing the code to execute."}}},"version":1},"userdoc":{"kind":"user","methods":{"getStorageAt(uint256,uint256)":{"notice":"Reads `length` bytes of storage in the currents contract"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/allo-v2/lib/openzeppelin-contracts/contracts/","@prb/math/=lib/allo-v2/lib/v2-core/lib/prb-math/","@prb/test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/","@sablier/v2-core/=lib/allo-v2/lib/v2-core/","ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/","allo-v2-contracts/=lib/allo-v2/contracts/","allo-v2-test/=lib/allo-v2/test/","allo-v2/=lib/allo-v2/","ds-test/=lib/forge-std/lib/ds-test/src/","eas-contracts/=lib/allo-v2/lib/eas-contracts/contracts/","eas-proxy/=lib/allo-v2/lib/eas-proxy/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/allo-v2/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","hats-protocol/=lib/allo-v2/lib/hats-protocol/","hedgey-vesting/=lib/allo-v2/lib/hedgey-vesting/contracts/","openzeppelin-contracts-upgradeable/=lib/allo-v2/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","permit2/=lib/allo-v2/lib/permit2/","prb-math/=lib/allo-v2/lib/v2-core/lib/prb-math/src/","prb-test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/","safe-contracts/=lib/safe-contracts/","solady/=lib/allo-v2/lib/solady/","solarray/=lib/allo-v2/lib/v2-core/lib/solarray/src/","solbase/=lib/allo-v2/lib/hats-protocol/lib/solbase/src/","solmate/=lib/allo-v2/lib/permit2/lib/solmate/","superfluid-protocol-monorepo/=lib/allo-v2/lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/","utils/=lib/allo-v2/lib/hats-protocol/lib/utils/","v2-core/=lib/allo-v2/lib/v2-core/"],"optimizer":{"enabled":true,"runs":1000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/safe-contracts/contracts/common/StorageAccessible.sol":"StorageAccessible"},"evmVersion":"paris","libraries":{}},"sources":{"lib/safe-contracts/contracts/common/StorageAccessible.sol":{"keccak256":"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e","urls":["bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e","dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ"],"license":"LGPL-3.0-only"}},"version":1},"ast":{"absolutePath":"lib/safe-contracts/contracts/common/StorageAccessible.sol","id":58120,"exportedSymbols":{"StorageAccessible":[58119]},"nodeType":"SourceUnit","src":"42:2329:88","nodes":[{"id":58072,"nodeType":"PragmaDirective","src":"42:31:88","nodes":[],"literals":["solidity",">=","0.7",".0","<","0.9",".0"]},{"id":58119,"nodeType":"ContractDefinition","src":"445:1925:88","nodes":[{"id":58108,"nodeType":"FunctionDefinition","src":"785:464:88","nodes":[],"body":{"id":58107,"nodeType":"Block","src":"874:375:88","nodes":[],"statements":[{"assignments":[58084],"declarations":[{"constant":false,"id":58084,"mutability":"mutable","name":"result","nameLocation":"897:6:88","nodeType":"VariableDeclaration","scope":58107,"src":"884:19:88","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":58083,"name":"bytes","nodeType":"ElementaryTypeName","src":"884:5:88","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":58091,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":58089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":58087,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58078,"src":"916:6:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":58088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"925:2:88","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"916:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":58086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"906:9:88","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":58085,"name":"bytes","nodeType":"ElementaryTypeName","src":"910:5:88","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":58090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"906:22:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"884:44:88"},{"body":{"id":58103,"nodeType":"Block","src":"987:233:88","statements":[{"AST":{"nodeType":"YulBlock","src":"1070:140:88","statements":[{"nodeType":"YulVariableDeclaration","src":"1088:37:88","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1110:6:88"},{"name":"index","nodeType":"YulIdentifier","src":"1118:5:88"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1106:3:88"},"nodeType":"YulFunctionCall","src":"1106:18:88"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1100:5:88"},"nodeType":"YulFunctionCall","src":"1100:25:88"},"variables":[{"name":"word","nodeType":"YulTypedName","src":"1092:4:88","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1157:6:88"},{"kind":"number","nodeType":"YulLiteral","src":"1165:4:88","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1153:3:88"},"nodeType":"YulFunctionCall","src":"1153:17:88"},{"arguments":[{"name":"index","nodeType":"YulIdentifier","src":"1176:5:88"},{"kind":"number","nodeType":"YulLiteral","src":"1183:4:88","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1172:3:88"},"nodeType":"YulFunctionCall","src":"1172:16:88"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1149:3:88"},"nodeType":"YulFunctionCall","src":"1149:40:88"},{"name":"word","nodeType":"YulIdentifier","src":"1191:4:88"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1142:6:88"},"nodeType":"YulFunctionCall","src":"1142:54:88"},"nodeType":"YulExpressionStatement","src":"1142:54:88"}]},"evmVersion":"paris","externalReferences":[{"declaration":58093,"isOffset":false,"isSlot":false,"src":"1118:5:88","valueSize":1},{"declaration":58093,"isOffset":false,"isSlot":false,"src":"1176:5:88","valueSize":1},{"declaration":58076,"isOffset":false,"isSlot":false,"src":"1110:6:88","valueSize":1},{"declaration":58084,"isOffset":false,"isSlot":false,"src":"1157:6:88","valueSize":1}],"id":58102,"nodeType":"InlineAssembly","src":"1061:149:88"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":58098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":58096,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58093,"src":"962:5:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":58097,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58078,"src":"970:6:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"962:14:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":58104,"initializationExpression":{"assignments":[58093],"declarations":[{"constant":false,"id":58093,"mutability":"mutable","name":"index","nameLocation":"951:5:88","nodeType":"VariableDeclaration","scope":58104,"src":"943:13:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58092,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":58095,"initialValue":{"hexValue":"30","id":58094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"959:1:88","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"943:17:88"},"loopExpression":{"expression":{"id":58100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"978:7:88","subExpression":{"id":58099,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58093,"src":"978:5:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":58101,"nodeType":"ExpressionStatement","src":"978:7:88"},"nodeType":"ForStatement","src":"938:282:88"},{"expression":{"id":58105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58084,"src":"1236:6:88","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":58082,"id":58106,"nodeType":"Return","src":"1229:13:88"}]},"documentation":{"id":58074,"nodeType":"StructuredDocumentation","src":"487:293:88","text":" @notice Reads `length` bytes of storage in the currents contract\n @param offset - the offset in the current contract's storage in words to start reading from\n @param length - the number of words (32 bytes) of data to read\n @return the bytes that were read."},"functionSelector":"5624b25b","implemented":true,"kind":"function","modifiers":[],"name":"getStorageAt","nameLocation":"794:12:88","parameters":{"id":58079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58076,"mutability":"mutable","name":"offset","nameLocation":"815:6:88","nodeType":"VariableDeclaration","scope":58108,"src":"807:14:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58075,"name":"uint256","nodeType":"ElementaryTypeName","src":"807:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":58078,"mutability":"mutable","name":"length","nameLocation":"831:6:88","nodeType":"VariableDeclaration","scope":58108,"src":"823:14:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58077,"name":"uint256","nodeType":"ElementaryTypeName","src":"823:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"806:32:88"},"returnParameters":{"id":58082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58108,"src":"860:12:88","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":58080,"name":"bytes","nodeType":"ElementaryTypeName","src":"860:5:88","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:14:88"},"scope":58119,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":58118,"nodeType":"FunctionDefinition","src":"1882:486:88","nodes":[],"body":{"id":58117,"nodeType":"Block","src":"1972:396:88","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"2047:315:88","statements":[{"nodeType":"YulVariableDeclaration","src":"2061:108:88","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"2089:3:88"},"nodeType":"YulFunctionCall","src":"2089:5:88"},{"name":"targetContract","nodeType":"YulIdentifier","src":"2096:14:88"},{"arguments":[{"name":"calldataPayload","nodeType":"YulIdentifier","src":"2116:15:88"},{"kind":"number","nodeType":"YulLiteral","src":"2133:4:88","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2112:3:88"},"nodeType":"YulFunctionCall","src":"2112:26:88"},{"arguments":[{"name":"calldataPayload","nodeType":"YulIdentifier","src":"2146:15:88"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2140:5:88"},"nodeType":"YulFunctionCall","src":"2140:22:88"},{"kind":"number","nodeType":"YulLiteral","src":"2164:1:88","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2167:1:88","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"2076:12:88"},"nodeType":"YulFunctionCall","src":"2076:93:88"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"2065:7:88","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2190:4:88","type":"","value":"0x00"},{"name":"success","nodeType":"YulIdentifier","src":"2196:7:88"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2183:6:88"},"nodeType":"YulFunctionCall","src":"2183:21:88"},"nodeType":"YulExpressionStatement","src":"2183:21:88"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2224:4:88","type":"","value":"0x20"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2230:14:88"},"nodeType":"YulFunctionCall","src":"2230:16:88"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2217:6:88"},"nodeType":"YulFunctionCall","src":"2217:30:88"},"nodeType":"YulExpressionStatement","src":"2217:30:88"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2275:4:88","type":"","value":"0x40"},{"kind":"number","nodeType":"YulLiteral","src":"2281:1:88","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2284:14:88"},"nodeType":"YulFunctionCall","src":"2284:16:88"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"2260:14:88"},"nodeType":"YulFunctionCall","src":"2260:41:88"},"nodeType":"YulExpressionStatement","src":"2260:41:88"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2321:1:88","type":"","value":"0"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2328:14:88"},"nodeType":"YulFunctionCall","src":"2328:16:88"},{"kind":"number","nodeType":"YulLiteral","src":"2346:4:88","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2324:3:88"},"nodeType":"YulFunctionCall","src":"2324:27:88"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2314:6:88"},"nodeType":"YulFunctionCall","src":"2314:38:88"},"nodeType":"YulExpressionStatement","src":"2314:38:88"}]},"evmVersion":"paris","externalReferences":[{"declaration":58113,"isOffset":false,"isSlot":false,"src":"2116:15:88","valueSize":1},{"declaration":58113,"isOffset":false,"isSlot":false,"src":"2146:15:88","valueSize":1},{"declaration":58111,"isOffset":false,"isSlot":false,"src":"2096:14:88","valueSize":1}],"id":58116,"nodeType":"InlineAssembly","src":"2038:324:88"}]},"documentation":{"id":58109,"nodeType":"StructuredDocumentation","src":"1255:622:88","text":" @dev Performs a delegatecall on a targetContract in the context of self.\n Internally reverts execution to avoid side effects (making it static).\n This method reverts with data equal to `abi.encode(bool(success), bytes(response))`.\n Specifically, the `returndata` after a call to this method will be:\n `success:bool || response.length:uint256 || response:bytes`.\n @param targetContract Address of the contract containing the code to execute.\n @param calldataPayload Calldata that should be sent to the target contract (encoded method name and arguments)."},"functionSelector":"b4faba09","implemented":true,"kind":"function","modifiers":[],"name":"simulateAndRevert","nameLocation":"1891:17:88","parameters":{"id":58114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58111,"mutability":"mutable","name":"targetContract","nameLocation":"1917:14:88","nodeType":"VariableDeclaration","scope":58118,"src":"1909:22:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58110,"name":"address","nodeType":"ElementaryTypeName","src":"1909:7:88","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58113,"mutability":"mutable","name":"calldataPayload","nameLocation":"1946:15:88","nodeType":"VariableDeclaration","scope":58118,"src":"1933:28:88","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":58112,"name":"bytes","nodeType":"ElementaryTypeName","src":"1933:5:88","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1908:54:88"},"returnParameters":{"id":58115,"nodeType":"ParameterList","parameters":[],"src":"1972:0:88"},"scope":58119,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":true,"baseContracts":[],"canonicalName":"StorageAccessible","contractDependencies":[],"contractKind":"contract","documentation":{"id":58073,"nodeType":"StructuredDocumentation","src":"75:369:88","text":" @title StorageAccessible - A generic base contract that allows callers to access all internal storage.\n @notice See https://github.com/gnosis/util-contracts/blob/bb5fe5fb5df6d8400998094fb1b32a178a47c3a1/contracts/StorageAccessible.sol\n         It removes a method from the original contract not needed for the Safe contracts.\n @author Gnosis Developers"},"fullyImplemented":true,"linearizedBaseContracts":[58119],"name":"StorageAccessible","nameLocation":"463:17:88","scope":58120,"usedErrors":[]}],"license":"LGPL-3.0-only"},"id":88}