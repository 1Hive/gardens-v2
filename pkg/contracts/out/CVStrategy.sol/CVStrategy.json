{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_allo",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "fallback",
      "stateMutability": "payable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "D",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_STAKED_PROPOSALS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "NATIVE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "_minThresholdPoints",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "activatePoints",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allocate",
      "inputs": [
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "calculateConviction",
      "inputs": [
        {
          "name": "_timePassed",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_lastConv",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_oldAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateThreshold",
      "inputs": [
        {
          "name": "_requestedAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "_threshold",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "canExecuteProposal",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "canBeExecuted",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deactivatePoints",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deactivatePoints",
      "inputs": [
        {
          "name": "_member",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "decay",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decreasePower",
      "inputs": [
        {
          "name": "_member",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amountToUnstake",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "distribute",
      "inputs": [
        {
          "name": "_recipientIds",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getAllo",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAllo"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxAmount",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxConviction",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMetadata",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Metadata",
          "components": [
            {
              "name": "protocol",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "pointer",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPayouts",
      "inputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "",
          "type": "bytes[]",
          "internalType": "bytes[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IStrategy.PayoutSummary[]",
          "components": [
            {
              "name": "recipientAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getPointSystem",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum StrategyStruct.PointSystem"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolAmount",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolId",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getProposal",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "submitter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "beneficiary",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "requestedToken",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "requestedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "stakedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "proposalStatus",
          "type": "uint8",
          "internalType": "enum StrategyStruct.ProposalStatus"
        },
        {
          "name": "blockLast",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "convictionLast",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "threshold",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "voterStakedPoints",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getProposalStakedAmount",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getProposalVoterStake",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_voter",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRecipientStatus",
      "inputs": [
        {
          "name": "_recipientId",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum IStrategy.Status"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategyId",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTotalVoterStakePct",
      "inputs": [
        {
          "name": "_voter",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "increasePoolAmount",
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "increasePower",
      "inputs": [
        {
          "name": "_member",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amountToStake",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "_poolId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isPoolActive",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isValidAllocator",
      "inputs": [
        {
          "name": "_allocator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxRatio",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pointConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "maxAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pointSystem",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum StrategyStruct.PointSystem"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposalCounter",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposalType",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum StrategyStruct.ProposalType"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposals",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "requestedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "stakedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "convictionLast",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "beneficiary",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "submitter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "requestedToken",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "blockLast",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "proposalStatus",
          "type": "uint8",
          "internalType": "enum StrategyStruct.ProposalStatus"
        },
        {
          "name": "metadata",
          "type": "tuple",
          "internalType": "struct Metadata",
          "components": [
            {
              "name": "protocol",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "pointer",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerRecipient",
      "inputs": [
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "recipientId",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "registryCommunity",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract RegistryCommunity"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setDecay",
      "inputs": [
        {
          "name": "_decay",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMaxRatio",
      "inputs": [
        {
          "name": "_maxRatio",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMinThresholdPoints",
      "inputs": [
        {
          "name": "minThresholdPoints_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setPoolActive",
      "inputs": [
        {
          "name": "_active",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRegistryCommunity",
      "inputs": [
        {
          "name": "_registryCommunity",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setWeight",
      "inputs": [
        {
          "name": "_weight",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportProposal",
      "inputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct StrategyStruct.ProposalSupport[]",
          "components": [
            {
              "name": "proposalId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deltaSupport",
              "type": "int256",
              "internalType": "int256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalEffectiveActivePoints",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalPointsActivated",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalStaked",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalVoterStakePct",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "updateProposalConviction",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "voterStakedProposals",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "weight",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "Allocated",
      "inputs": [
        {
          "name": "recipientId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DecayUpdated",
      "inputs": [
        {
          "name": "decay",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Distributed",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "beneficiary",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Distributed",
      "inputs": [
        {
          "name": "recipientId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipientAddress",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "InitializedCV",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct StrategyStruct.InitializeParams",
          "components": [
            {
              "name": "registryCommunity",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "decay",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxRatio",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "weight",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minThresholdPoints",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "proposalType",
              "type": "uint8",
              "internalType": "enum StrategyStruct.ProposalType"
            },
            {
              "name": "pointSystem",
              "type": "uint8",
              "internalType": "enum StrategyStruct.PointSystem"
            },
            {
              "name": "pointConfig",
              "type": "tuple",
              "internalType": "struct StrategyStruct.PointSystemConfig",
              "components": [
                {
                  "name": "maxAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxRatioUpdated",
      "inputs": [
        {
          "name": "maxRatio",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MinThresholdPointsUpdated",
      "inputs": [
        {
          "name": "before",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "minThresholdPoints",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PointsDeactivated",
      "inputs": [
        {
          "name": "member",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolActive",
      "inputs": [
        {
          "name": "active",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolAmountIncreased",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PowerDecreased",
      "inputs": [
        {
          "name": "member",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "tokensUnStaked",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "pointsToDecrease",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PowerIncreased",
      "inputs": [
        {
          "name": "member",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "tokensStaked",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "pointsToIncrease",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalCreated",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Registered",
      "inputs": [
        {
          "name": "recipientId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RegistryUpdated",
      "inputs": [
        {
          "name": "registryCommunity",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SupportAdded",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "totalStakedAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "convictionLast",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WeightUpdated",
      "inputs": [
        {
          "name": "weight",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ALLOCATION_ACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ALLOCATION_NOT_ACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ALLOCATION_NOT_ENDED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ALREADY_INITIALIZED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AMOUNT_MISMATCH",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ANCHOR_ERROR",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ARRAY_MISMATCH",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AddressCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AmountOverMaxRatio",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CantIncreaseFixedSystem",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ConvictionUnderMinimumThreshold",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID_ADDRESS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID_FEE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID_METADATA",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID_REGISTRATION",
      "inputs": []
    },
    {
      "type": "error",
      "name": "IS_APPROVED_STRATEGY",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MISMATCH",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MaxPointsReached",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NONCE_NOT_AVAILABLE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_APPROVED_STRATEGY",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_ENOUGH_FUNDS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_IMPLEMENTED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_INITIALIZED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_PENDING_OWNER",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotEnoughPointsToSupport",
      "inputs": [
        {
          "name": "pointsSupport",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "pointsBalance",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "NotImplemented",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyCommunityAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "POOL_ACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "POOL_INACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PoolAmountNotEnough",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_requestedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_poolAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "PoolIdCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PoolIsEmpty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProposalDataIsEmpty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProposalIdCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProposalNotActive",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ProposalNotInList",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ProposalSupportDuplicated",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "RECIPIENT_ALREADY_ACCEPTED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RECIPIENT_ERROR",
      "inputs": [
        {
          "name": "recipientId",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "RECIPIENT_NOT_ACCEPTED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "REGISTRATION_NOT_ACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RegistryCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SupportUnderflow",
      "inputs": [
        {
          "name": "_support",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_delta",
          "type": "int256",
          "internalType": "int256"
        },
        {
          "name": "_result",
          "type": "int256",
          "internalType": "int256"
        }
      ]
    },
    {
      "type": "error",
      "name": "TokenCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "TokenNotAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UNAUTHORIZED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UserCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UserIsInactive",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UserNotInRegistry",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZERO_ADDRESS",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "2695:37282:109:-:0;;;6260:1;6227:34;;6377:1;6340:38;;7369:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5210:135:11;;;;;;;;;;;-1:-1:-1;;;5210:135:11;;;;;;;;-1:-1:-1;;;;;5268:19:11;;;;5320:17;;7417:5:109;;5320:17:11;;5210:135;;5320:17;;:::i;:::-;;;;-1:-1:-1;;5320:17:11;;;;;;;;;5310:28;;5320:17;5310:28;;;;5297:41;;-1:-1:-1;2695:37282:109;;-1:-1:-1;;2695:37282:109;14:290:120;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:120;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:120:o;309:548::-;421:4;450:2;479;468:9;461:21;511:6;505:13;554:6;549:2;538:9;534:18;527:34;579:1;589:140;603:6;600:1;597:13;589:140;;;698:14;;;694:23;;688:30;664:17;;;683:2;660:26;653:66;618:10;;589:140;;;593:3;778:1;773:2;764:6;753:9;749:22;745:31;738:42;848:2;841;837:7;832:2;824:6;820:15;816:29;805:9;801:45;797:54;789:62;;;;309:548;;;;:::o;:::-;2695:37282:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061033f5760003560e01c806376365af7116101ae578063b5f620ce116100eb578063e0dd2c381161008f578063edd146cc1161006c578063edd146cc14610a09578063ef2920fc14610a29578063f5b0dfb714610a3c578063fc1711f214610a5c57005b8063e0dd2c381461099c578063e33add93146109bc578063eb11af93146109dc57005b8063c7f758a8116100c8578063c7f758a814610909578063d1e362321461093f578063dc96ff2d14610954578063df868ed31461098457005b8063b5f620ce14610896578063bcc5b93b146108b6578063c3292171146108ec57005b8063950559d711610152578063a47ff7e51161012f578063a47ff7e51461080f578063a574cea414610826578063aba9ffee14610853578063b2b878d01461086957005b8063950559d7146107b1578063a0cf0aea146107d1578063a1aab33f146107f957005b8063814516ad1161018b578063814516ad14610746578063817b1cd21461075b578063824ea8ed14610771578063868c57b81461079157005b806376365af7146106fa578063782aadff146107105780637c6570ba1461073057005b80632ed04b2b1161027c5780634d31d087116102205780635db64b99116101fd5780635db64b991461066d5780636003e4141461069a5780636453d9c4146106ba57806369fa25c4146106da57005b80634d31d0871461061757806354fac9191461063757806359a5db8b1461064d57005b806338fff2d01161025957806338fff2d0146105a5578063406244d8146105ba57806342fda9c7146105cf5780634ab4ba421461060257005b80632ed04b2b1461053e578063346db8cb1461055e578063351d9f961461057e57005b806311f22ae3116102e35780631ddf1e23116102c05780631ddf1e23146104ca5780632bbe0cae146104df5780632cefadbb146104f25780632dbd6fdd1461051257005b806311f22ae31461044357806315cc481e146104635780631aa91a9e146104aa57005b80630a6f0ee91161031c5780630a6f0ee9146103d75780630ba95909146103f75780630c0512e9146104165780630f529ba21461042c57005b8063013cf08b1461034857806301ffc9a714610387578063058aca44146103b757005b3661034657005b005b34801561035457600080fd5b506103686103633660046138e1565b610a7c565b60405161037e9a9998979695949392919061399b565b60405180910390f35b34801561039357600080fd5b506103a76103a2366004613a0e565b610b8a565b604051901515815260200161037e565b3480156103c357600080fd5b506103466103d2366004613a65565b610c23565b3480156103e357600080fd5b506103466103f2366004613c49565b610c90565b34801561040357600080fd5b50600c545b60405190815260200161037e565b34801561042257600080fd5b5061040860065481565b34801561043857600080fd5b506104086298968081565b34801561044f57600080fd5b5061034661045e3660046138e1565b610cb0565b34801561046f57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161037e565b3480156104b657600080fd5b506104086104c53660046138e1565b610cef565b3480156104d657600080fd5b50610346610d7a565b6104926104ed366004613cc1565b610d85565b3480156104fe57600080fd5b5061034661050d3660046138e1565b610da8565b34801561051e57600080fd5b50600b5461053190610100900460ff1681565b60405161037e9190613d23565b34801561054a57600080fd5b50610408610559366004613d31565b610df4565b34801561056a57600080fd5b50610408610579366004613d5d565b610ec6565b34801561058a57600080fd5b50600b546105989060ff1681565b60405161037e9190613d99565b3480156105b157600080fd5b50600154610408565b3480156105c657600080fd5b50610408600a81565b3480156105db57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610408565b34801561060e57600080fd5b50600254610408565b34801561062357600080fd5b506103a7610632366004613a65565b610f6b565b34801561064357600080fd5b5061040860035481565b34801561065957600080fd5b506104086106683660046138e1565b610f76565b34801561067957600080fd5b50610408610688366004613a65565b600f6020526000908152604090205481565b3480156106a657600080fd5b50600d54610492906001600160a01b031681565b3480156106c657600080fd5b506103466106d5366004613a65565b6110b3565b3480156106e657600080fd5b506103466106f53660046138e1565b6110c7565b34801561070657600080fd5b5061040860045481565b34801561071c57600080fd5b5061040861072b366004613d31565b611106565b34801561073c57600080fd5b5061040860095481565b34801561075257600080fd5b50610346611282565b34801561076757600080fd5b5061040860075481565b34801561077d57600080fd5b506103a761078c3660046138e1565b61138c565b34801561079d57600080fd5b506104086107ac366004613d31565b6113e9565b3480156107bd57600080fd5b506104086107cc3660046138e1565b61141a565b3480156107dd57600080fd5b5061049273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561080557600080fd5b5061040860055481565b34801561081b57600080fd5b50600c546104089081565b34801561083257600080fd5b506108466108413660046138e1565b611444565b60405161037e9190613da7565b34801561085f57600080fd5b5061040860085481565b34801561087557600080fd5b50610889610884366004613dba565b611523565b60405161037e9190613e8f565b3480156108a257600080fd5b506103466108b1366004613ef5565b61153e565b3480156108c257600080fd5b506104086108d1366004613a65565b6001600160a01b03166000908152600f602052604090205490565b3480156108f857600080fd5b50600b54610100900460ff16610531565b34801561091557600080fd5b506109296109243660046138e1565b611547565b60405161037e9a99989796959493929190613f12565b34801561094b57600080fd5b50600854610408565b34801561096057600080fd5b5061040861096f3660046138e1565b6000908152600e602052604090206002015490565b34801561099057600080fd5b5060005460ff166103a7565b3480156109a857600080fd5b506104086109b7366004613f77565b611649565b3480156109c857600080fd5b506103466109d7366004613f9c565b611674565b3480156109e857600080fd5b506109fc6109f7366004613a65565b61168d565b60405161037e9190614047565b348015610a1557600080fd5b50610346610a24366004614061565b611698565b610346610a37366004613cc1565b6117c6565b348015610a4857600080fd5b50610346610a573660046138e1565b6117e4565b348015610a6857600080fd5b50610346610a773660046138e1565b61180d565b600e602090815260009182526040918290208054600182015460028301546003840154600485015460058601546006870154600788015460088901548b51808d01909c52600a8a0180548d52600b8b0180549a9d999c989b979a6001600160a01b039788169a968816999790951697939660ff9093169593949192840191610b03906140a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2f906140a8565b8015610b7c5780601f10610b5157610100808354040283529160200191610b7c565b820191906000526020600020905b815481529060010190602001808311610b5f57829003601f168201915b50505050508152505090508a565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167ff1801e61000000000000000000000000000000000000000000000000000000001480610c1d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b33610c2d8161184c565b600d805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091556040519081527fd6ceddf6d2a22f21c7c81675c518004eff43bc5c8a6fc32a0b748e69d58671cd906020015b60405180910390a15050565b610c98611917565b610ca0611960565b610cab83838361199c565b505050565b33610cba8161184c565b60048290556040518281527f08e39b387d1f739ce0d2553bb31822392e3f67c62c6c0a215120ab4a6841a8ab90602001610c84565b6000818152600e6020526040812080548314610d265760405163c1d17bef60e01b8152600481018490526024015b60405180910390fd5b6001600882015460ff166004811115610d4157610d416138fa565b14610d62576040516344980d8f60e01b815260048101849052602401610d1d565b610d70818260020154611cd3565b6003015492915050565b610d8333611d0e565b565b6000610d8f611917565b610d97611960565b610da18383611e5f565b9392505050565b33610db28161184c565b60095460408051918252602082018490527f056aedca4e334b6c4bea48715fb0de644811b740894de57a0380d3eb90f2805b910160405180910390a150600955565b6000610dfe612197565b60006002600b54610100900460ff166003811115610e1e57610e1e6138fa565b1480610e4557506001600b54610100900460ff166003811115610e4357610e436138fa565b145b15610e51575081610e5e565b610e5b84846121db565b90505b8060086000828254610e7091906140f2565b9091555050604080516001600160a01b0386168152602081018590529081018290527f70b752f3fadb6ac131c0ece847fcbb6994ec56ed6411595710fd9b29c6ac6cc19060600160405180910390a19392505050565b6000808490506000610eec629896806080600354901b610ee6919061411b565b8361249f565b905060806f8000000000000000000000000000000060035462989680610f1291906140f2565b610f2084600160801b6140f2565b610f2d629896808961413d565b610f37919061413d565b610f41919061411b565b610f4b888561413d565b610f559190614154565b610f5f9190614154565b901c9695505050505050565b6000610c1d82612548565b60008060025411610fb3576040517fed4421ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fbc82612568565b15610fda57604051630efd728560e21b815260040160405180910390fd5b600254600090610ff3846801000000000000000061413d565b610ffd919061411b565b6298968060045468010000000000000000611018919061413d565b611022919061411b565b61102c91906140f2565b9050604061103960085490565b60035461104990629896806140f2565b629896806040611059868061413d565b901c629896806080600554901b611070919061411b565b61107a919061411b565b611084919061413d565b61108e919061411b565b611098919061413d565b901c915060095482116110ad57600954610da1565b50919050565b6110bb612197565b6110c481611d0e565b50565b336110d18161184c565b60038290556040518281527f592dcd55d60d892e7fcb3ba105013312e99691cd59f91e15f83cb67cb5a505f290602001610c84565b6000611110612197565b60006002600b54610100900460ff166003811115611130576111306138fa565b0361113e57825b905061119b565b6001600b54610100900460ff16600381111561115c5761115c6138fa565b0361116b57611137848461258f565b6003600b54610100900460ff166003811115611189576111896138fa565b0361119b5761119884846126f5565b90505b600d5460405163011de97360e61b81526001600160a01b038681166004830152306024830152600092169063477a5cc090604401602060405180830381865afa1580156111ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112109190614167565b9050801561123057816008600082825461122a9190614154565b90915550505b604080516001600160a01b0387168152602081018690529081018390527f0b9150e1e54346ed3fa36b977cd5d65dca5a649c737c3174a26bddaadd47667a9060600160405180910390a1509392505050565b600d546040517f0d4a8b490000000000000000000000000000000000000000000000000000000081523360048201819052306024830152916001600160a01b031690630d4a8b4990604401600060405180830381600087803b1580156112e757600080fd5b505af11580156112fb573d6000803e3d6000fd5b5050600d54604051637817ee4f60e01b81526001600160a01b0385811660048301523060248301529091169250637817ee4f9150604401602060405180830381865afa15801561134f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113739190614184565b600860008282546113849190614154565b909155505050565b6000818152600e602052604081206002810154829081906113ae90849061293c565b915091508160001480156113c0575080155b156113cd57826003015491505b60006113dc8460010154610f76565b9092101595945050505050565b6010602052816000526040600020818154811061140557600080fd5b90600052602060002001600091509150505481565b60006003546298968061142d91906140f2565b61143a629896808461413d565b610c1d919061411b565b6040805180820190915260008152606060208201526000600e6000848152602001908152602001600020905080600a0160405180604001604052908160008201548152602001600182018054611499906140a8565b80601f01602080910402602001604051908101604052809291908181526020018280546114c5906140a8565b80156115125780601f106114e757610100808354040283529160200191611512565b820191906000526020600020905b8154815290600101906020018083116114f557829003601f168201915b505050505081525050915050919050565b606060405163d623472560e01b815260040160405180910390fd5b6110c481612994565b6000806000806000806000806000806000600e60008d81526020019081526020016000209050806001015460001461158b576115868160010154610f76565b61158e565b60005b92508060050160009054906101000a90046001600160a01b03168160040160009054906101000a90046001600160a01b03168260060160009054906101000a90046001600160a01b0316836001015484600201548560080160009054906101000a900460ff16866007015487600301548a896009016000336001600160a01b03166001600160a01b03168152602001908152602001600020549a509a509a509a509a509a509a509a509a509a50509193959799509193959799565b6000828152600e602090815260408083206001600160a01b0385168452600901909152812054610da1565b60405163d623472560e01b815260040160405180910390fd5b6000610c1d826129d5565b6116a1826129f5565b6000818060200190518101906116b79190614202565b80519091506001600160a01b03166116e257604051635df4b1ef60e01b815260040160405180910390fd5b8051600d805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390921691909117905560208101516003556040810151600455606081015160055560a0810151600b805460ff19166001836002811115611749576117496138fa565b021790555060c0810151600b805461ff001916610100836003811115611771576117716138fa565b021790555060e081015151600c5560808101516009556040517f11335eebb216b93f04c63826742eacbf3548a7df48a922f8bbd9e205f57807c3906117b990859084906142b1565b60405180910390a1505050565b6117ce611917565b6117d6611960565b6117e08282612a76565b5050565b6117ec611917565b80600260008282546117fe9190614154565b909155506110c4905081612b5f565b336118178161184c565b60058290556040518281527f30ee8206062f283e56a0af2b02138016bf7442ded26ad68a92a18a9dd246fb4990602001610c84565b6001546040517f29e40d4b00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b0382811660248301527f000000000000000000000000000000000000000000000000000000000000000016906329e40d4b90604401602060405180830381865afa1580156118d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fa9190614167565b6110c45760405163075fd2b160e01b815260040160405180910390fd5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d835760405163075fd2b160e01b815260040160405180910390fd5b600154600003610d83576040517f3da3f98c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008251116119d7576040517fc5f7c4c000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828060200190518101906119ed9190614184565b905080600003611a29576040517ff881a10d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000818152600e602052604090206001600b5460ff166002811115611a5057611a506138fa565b03611ccc5780548214611a795760405163c1d17bef60e01b815260048101839052602401610d1d565b60025481600101541115611ad15760018101546002546040517f5863b0b60000000000000000000000000000000000000000000000000000000081526004810185905260248101929092526044820152606401610d1d565b6001600882015460ff166004811115611aec57611aec6138fa565b14611b0d576040516344980d8f60e01b815260048101839052602401610d1d565b6000611b1883610cef565b90506000611b298360010154610f76565b90508082108015611b3e575060008360010154115b15611b75576040517fcce7930800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517f068bcd8d0000000000000000000000000000000000000000000000000000000081526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163068bcd8d91611be29160040190815260200190565b600060405180830381865afa158015611bff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c2791908101906143bb565b9050836001015460026000828254611c3f91906140f2565b9091555050604081015160048501546001860154611c6792916001600160a01b031690612b8f565b60088401805460ff191660049081179091558401546001850154604080518881526001600160a01b0390931660208401528201527fa7932e9c92f31e1ed56b29d00bbe669a97484dc24de28dd9c8c0429df7f358479060600160405180910390a15050505b5050505050565b600080611ce0848461293c565b91509150816000148015611cf2575080155b15611cfd5750505050565b600784015560039092019190915550565b600d54604051637817ee4f60e01b81526001600160a01b03838116600483015230602483015290911690637817ee4f90604401602060405180830381865afa158015611d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d829190614184565b60086000828254611d9391906140f2565b9091555050600d546040517f22bcf9990000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152306024830152909116906322bcf99990604401600060405180830381600087803b158015611dfe57600080fd5b505af1158015611e12573d6000803e3d6000fd5b50505050611e1f81612bd4565b6040516001600160a01b03821681527f1468da654b37bb3631011c1917d02e0db437d519918858d40b38b5e980ca033b906020015b60405180910390a150565b60008083806020019051810190611e76919061446f565b8051909150600003611eb4576040517f4e79178600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600b5460ff166002811115611ecd57611ecd6138fa565b0361207d57611edf8160200151612cff565b60608101516001600160a01b0316611f23576040517f596a094c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000306001600160a01b03166315cc481e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f879190614516565b6001600160a01b031663068bcd8d6001546040518263ffffffff1660e01b8152600401611fb691815260200190565b600060405180830381865afa158015611fd3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ffb91908101906143bb565b604001519050806001600160a01b031682606001516001600160a01b031614612050576040517fa29c498600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61205d8260400151612568565b1561207b57604051630efd728560e21b815260040160405180910390fd5b505b600060066000815461208e90614533565b91829055506000818152600e602090815260408083208481556005810180546001600160a01b038b811673ffffffffffffffffffffffffffffffffffffffff19928316179092558885015160048401805491841691831691909117905560608901516006840180549190931691161790559086015160018083019190915560088201805460ff19169091179055436007820155600381019290925560808501518051600a8401908155918101519394509192600b84019061214f908261459a565b505060015460408051918252602082018590527ffcf3b1aa65a464cef2889608f99e8b8c0f680a4be6c2acb9d961c536a5a9294b92500160405180910390a150949350505050565b600d546001600160a01b03163314610d83576040517faf0916a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600d54604080516336d8759760e21b815290516000926012926001600160a01b039091169163db61d65c916004808201926020929091908290030181865afa15801561222b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061224f9190614516565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156122a8575060408051601f3d908101601f191682019092526122a59181019061465a565b60015b6122ef576122ea6040518060400160405280601581526020017f4572726f722067657474696e6720646563696d616c0000000000000000000000815250612d3f565b6122f5565b60ff1690505b6123346040518060400160405280601081526020017f5f616d6f756e74546f556e7374616b650000000000000000000000000000000081525084612db0565b600d546040516316308e2560e11b81526001600160a01b0386811660048301526000928692911690632c611c4a90602401602060405180830381865afa158015612382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a69190614184565b6123b091906140f2565b90506123f16040518060400160405280600d81526020017f6e6577546f74616c5374616b650000000000000000000000000000000000000081525082612db0565b600061241061240184600a614761565b61240b908461413d565b612e23565b600d54604051637817ee4f60e01b81526001600160a01b03898116600483015230602483015292935060009284921690637817ee4f90604401602060405180830381865afa158015612466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061248a9190614184565b61249491906140f2565b979650505050505050565b6000600160801b83106124f45760405162461bcd60e51b815260206004820152601c60248201527f5f612073686f756c64206265206c657373207468616e20325e313238000000006044820152606401610d1d565b50600160801b82825b80156125405780600116600003612522576125188283612f0b565b915060011c6124fd565b61252c8383612f0b565b92506125396001826140f2565b90506124fd565b505092915050565b60006001600160a01b03821615612560576001610c1d565b600092915050565b6000612577629896808361413d565b600254600454612587919061413d565b111592915050565b6000808290506125d46040518060400160405280601281526020017f504f494e545320544f20494e435245415345000000000000000000000000000081525082612db0565b600d54604051637817ee4f60e01b81526001600160a01b0386811660048301523060248301526000921690637817ee4f90604401602060405180830381865afa158015612625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126499190614184565b905061268a6040518060400160405280600b81526020017f4d454d424552504f57455200000000000000000000000000000000000000000081525082612db0565b600c546126978383614154565b11156126ae57600c546126ab9082906140f2565b91505b6126ed6040518060400160405280601681526020017f504f494e545320544f20494e43524541534520454e440000000000000000000081525083612db0565b509392505050565b600d546040516316308e2560e11b81526001600160a01b0384811660048301526000928392859290911690632c611c4a90602401602060405180830381865afa158015612746573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061276a9190614184565b6127749190614154565b600d54604080516336d8759760e21b815290519293506012926001600160a01b039092169163db61d65c916004808201926020929091908290030181865afa1580156127c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e89190614516565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612841575060408051601f3d908101601f1916820190925261283e9181019061465a565b60015b612888576128836040518060400160405280601581526020017f4572726f722067657474696e6720646563696d616c0000000000000000000000815250612d3f565b61288e565b60ff1690505b60006128a861289e83600a614761565b61240b908561413d565b600d54604051637817ee4f60e01b81526001600160a01b03898116600483015230602483015292935060009290911690637817ee4f90604401602060405180830381865afa1580156128fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129229190614184565b9050600061293082846140f2565b98975050505050505050565b60008043905080846007015411156129565761295661476d565b8084600701540361296c5750600090508061298d565b61298a84600701548261297f91906140f2565b856003015485610ec6565b91505b9250929050565b6000805460ff19168215159081179091556040519081527fd94c9bc4d43c51d8dc345a016d8e3d994432fac68e72832e4cf3a616bd8efae090602001611e54565b60006001600160a01b038216156129ed576002610c1d565b600392915050565b6129fd611917565b60015415612a37576040517f439a74c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003612a71576040517f7fcce2a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600155565b612a7f8161300a565b600d5460405163011de97360e61b81526001600160a01b038381166004830152306024830152600092169063477a5cc090604401602060405180830381865afa158015612ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612af49190614167565b905080612b2d576040517f5fccb67f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083806020019051810190612b439190614783565b9050612b4f8382613130565b612b5983826132f3565b50505050565b6040518181527f46aeb5d8770fc4474bc2dfa118fd2595f7fb33ce2cbce6f4e5a3dabfe0f7633990602001611e54565b7fffffffffffffffffffffffff11111111111111111111111111111111111111126001600160a01b03841601612bc957610cab8282613717565b610cab838383613733565b6001600160a01b038116600090815260106020908152604080832080548251818502810185019093528083529192909190830182828015612c3457602002820191906000526020600020905b815481526020019060010190808311612c20575b5050505050905060005b8151811015610cab576000828281518110612c5b57612c5b61482e565b602002602001015190506000600e60008381526020019081526020016000209050612c8582613782565b15612cea576001600160a01b0385166000908152600982016020526040812080549082905560028301805491928392612cbf9084906140f2565b925050819055508060076000828254612cd891906140f2565b90915550612ce890508282611cd3565b505b50508080612cf790614533565b915050612c3e565b6001600160a01b0381166110c4576040517fe622e04000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110c481604051602401612d539190614844565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac000000000000000000000000000000000000000000000000000000001790526137bb565b6117e08282604051602401612dc6929190614857565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d0000000000000000000000000000000000000000000000000000000001790526137bb565b600081600003612e3557506000919050565b60006001612e42846137dc565b901c6001901b90506001818481612e5b57612e5b614105565b048201901c90506001818481612e7357612e73614105565b048201901c90506001818481612e8b57612e8b614105565b048201901c90506001818481612ea357612ea3614105565b048201901c90506001818481612ebb57612ebb614105565b048201901c90506001818481612ed357612ed3614105565b048201901c90506001818481612eeb57612eeb614105565b048201901c9050610da181828581612f0557612f05614105565b04613870565b6000600160801b831115612f875760405162461bcd60e51b815260206004820152602860248201527f5f612073686f756c64206265206c657373207468616e206f7220657175616c2060448201527f746f20325e3132380000000000000000000000000000000000000000000000006064820152608401610d1d565b600160801b8210612fda5760405162461bcd60e51b815260206004820152601c60248201527f5f622073686f756c64206265206c657373207468616e20325e313238000000006044820152606401610d1d565b60806f80000000000000000000000000000000612ff7848661413d565b6130019190614154565b901c9392505050565b6001600160a01b03811661304a576040517fd1f2828800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600d546001600160a01b031661307357604051635df4b1ef60e01b815260040160405180910390fd5b600d546040517fa230c5240000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301529091169063a230c52490602401602060405180830381865afa1580156130d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130fa9190614167565b6110c4576040517f6a5cfb6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b82518110156131ed5782818151811061314f5761314f61482e565b602002602001015160000151600003156131db5760008382815181106131775761317761482e565b602002602001015160000151905061318e81613782565b6131ae5760405163c1d17bef60e01b815260048101829052602401610d1d565b8382815181106131c0576131c061482e565b602002602001015160200151836131d79190614879565b9250505b806131e581614533565b915050613134565b506001600160a01b0383166000908152600f60205260408120546132119083613886565b600d54604051637817ee4f60e01b81526001600160a01b03878116600483015230602483015292935060009290911690637817ee4f90604401602060405180830381865afa158015613267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061328b9190614184565b9050808211156132d1576040517fd64182fe0000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610d1d565b506001600160a01b039093166000908152600f60205260409020929092555050565b606060005b8251811015612b595760008382815181106133155761331561482e565b6020026020010151600001519050825160000361337157604080516001808252818301909252906020808301908036833701905050925080836000815181106133605761336061482e565b6020026020010181815250506134c4565b6000805b84518110156133f057828582815181106133915761339161482e565b6020026020010151036133de576040517fadebb154000000000000000000000000000000000000000000000000000000008152600481018490526024810182905260019250604401610d1d565b806133e881614533565b915050613375565b50806134c2576000845160016134069190614154565b67ffffffffffffffff81111561341e5761341e613a82565b604051908082528060200260200182016040528015613447578160200160208202803683370190505b50905060005b855181101561349f578581815181106134685761346861482e565b60200260200101518282815181106134825761348261482e565b60209081029190910101528061349781614533565b91505061344d565b5082818651815181106134b4576134b461482e565b602090810291909101015293505b505b60008483815181106134d8576134d861482e565b6020908102919091018101518101516000848152600e835260408082206001600160a01b038b168352600981019094528120549193506135188285613886565b6001600160a01b038a1660009081526009850160205260408120829055909150805b6001600160a01b038b166000908152601060205260409020548110156135b15784546001600160a01b038c1660009081526010602052604090208054839081106135865761358661482e565b90600052602060002001540361359f57600191506135b1565b806135a981614533565b91505061353a565b50806135e7576001600160a01b038a16600090815260106020908152604082208654815460018101835591845291909220909101555b818311613637576135f883836140f2565b600760008282546136099190614154565b90915550613619905083836140f2565b84600201600082825461362c9190614154565b9091555061367b9050565b61364182846140f2565b6007600082825461365291906140f2565b90915550613662905082846140f2565b84600201600082825461367591906140f2565b90915550505b8360070154600003613692574360078501556136fe565b61369c8484611cd3565b60028401546003850154604080516001600160a01b038e168152602081018a9052908101859052606081019290925260808201527f0227f642ddcf2042ceaeafadb9d540f432072c00cd4862881667168dcc14710f9060a00160405180910390a15b505050505050808061370f90614533565b9150506132f8565b60008060008084865af16117e05763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716613778576390b8ec186000526004601cfd5b6000603452505050565b6000818152600e602052604081205415801590610c1d5750506000908152600e60205260409020600501546001600160a01b0316151590565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600080608083901c156137f157608092831c92015b604083901c1561380357604092831c92015b602083901c1561381557602092831c92015b601083901c1561382757601092831c92015b600883901c1561383957600892831c92015b600483901c1561384b57600492831c92015b600283901c1561385d57600292831c92015b600183901c15610c1d5760010192915050565b600081831061387f5781610da1565b5090919050565b6000806138938385614879565b90506000811215610da1576040517f3bbc7142000000000000000000000000000000000000000000000000000000008152600481018590526024810184905260448101829052606401610d1d565b6000602082840312156138f357600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60058110613920576139206138fa565b9052565b60005b8381101561393f578181015183820152602001613927565b50506000910152565b60008151808452613960816020860160208601613924565b601f01601f19169290920160200192915050565b8051825260006020820151604060208501526139936040850182613948565b949350505050565b60006101408c83528b60208401528a60408401528960608401526001600160a01b03808a16608085015280891660a085015280881660c0850152508560e08401526139ea610100840186613910565b806101208401526139fd81840185613974565b9d9c50505050505050505050505050565b600060208284031215613a2057600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610da157600080fd5b6001600160a01b03811681146110c457600080fd5b600060208284031215613a7757600080fd5b8135610da181613a50565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715613abb57613abb613a82565b60405290565b60405160c0810167ffffffffffffffff81118282101715613abb57613abb613a82565b60405160a0810167ffffffffffffffff81118282101715613abb57613abb613a82565b604051601f8201601f1916810167ffffffffffffffff81118282101715613b3057613b30613a82565b604052919050565b600067ffffffffffffffff821115613b5257613b52613a82565b5060051b60200190565b600082601f830112613b6d57600080fd5b81356020613b82613b7d83613b38565b613b07565b82815260059290921b84018101918181019086841115613ba157600080fd5b8286015b84811015613bc5578035613bb881613a50565b8352918301918301613ba5565b509695505050505050565b600067ffffffffffffffff821115613bea57613bea613a82565b50601f01601f191660200190565b600082601f830112613c0957600080fd5b8135613c17613b7d82613bd0565b818152846020838601011115613c2c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215613c5e57600080fd5b833567ffffffffffffffff80821115613c7657600080fd5b613c8287838801613b5c565b94506020860135915080821115613c9857600080fd5b50613ca586828701613bf8565b9250506040840135613cb681613a50565b809150509250925092565b60008060408385031215613cd457600080fd5b823567ffffffffffffffff811115613ceb57600080fd5b613cf785828601613bf8565b9250506020830135613d0881613a50565b809150509250929050565b60048110613920576139206138fa565b60208101610c1d8284613d13565b60008060408385031215613d4457600080fd5b8235613d4f81613a50565b946020939093013593505050565b600080600060608486031215613d7257600080fd5b505081359360208301359350604090920135919050565b60038110613920576139206138fa565b60208101610c1d8284613d89565b602081526000610da16020830184613974565b60008060408385031215613dcd57600080fd5b823567ffffffffffffffff80821115613de557600080fd5b613df186838701613b5c565b9350602091508185013581811115613e0857600080fd5b8501601f81018713613e1957600080fd5b8035613e27613b7d82613b38565b81815260059190911b82018401908481019089831115613e4657600080fd5b8584015b83811015613e7e57803586811115613e625760008081fd5b613e708c8983890101613bf8565b845250918601918601613e4a565b508096505050505050509250929050565b602080825282518282018190526000919060409081850190868401855b82811015613eda57815180516001600160a01b03168552860151868501529284019290850190600101613eac565b5091979650505050505050565b80151581146110c457600080fd5b600060208284031215613f0757600080fd5b8135610da181613ee7565b6001600160a01b038b811682528a811660208301528916604082015260608101889052608081018790526101408101613f4e60a0830188613910565b8560c08301528460e083015283610100830152826101208301529b9a5050505050505050505050565b60008060408385031215613f8a57600080fd5b823591506020830135613d0881613a50565b60006020808385031215613faf57600080fd5b823567ffffffffffffffff811115613fc657600080fd5b8301601f81018513613fd757600080fd5b8035613fe5613b7d82613b38565b81815260069190911b8201830190838101908783111561400457600080fd5b928401925b8284101561249457604084890312156140225760008081fd5b61402a613a98565b843581528585013586820152825260409093019290840190614009565b602081016007831061405b5761405b6138fa565b91905290565b6000806040838503121561407457600080fd5b82359150602083013567ffffffffffffffff81111561409257600080fd5b61409e85828601613bf8565b9150509250929050565b600181811c908216806140bc57607f821691505b6020821081036110ad57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610c1d57610c1d6140dc565b634e487b7160e01b600052601260045260246000fd5b60008261413857634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610c1d57610c1d6140dc565b80820180821115610c1d57610c1d6140dc565b60006020828403121561417957600080fd5b8151610da181613ee7565b60006020828403121561419657600080fd5b5051919050565b8051600381106141ac57600080fd5b919050565b8051600481106141ac57600080fd5b6000602082840312156141d257600080fd5b6040516020810181811067ffffffffffffffff821117156141f5576141f5613a82565b6040529151825250919050565b600061010080838503121561421657600080fd5b6040519081019067ffffffffffffffff8211818310171561423957614239613a82565b816040528351915061424a82613a50565b8181526020840151602082015260408401516040820152606084015160608201526080840151608082015261428160a0850161419d565b60a082015261429260c085016141b1565b60c08201526142a48560e086016141c0565b60e0820152949350505050565b6000610120820190508382526001600160a01b038351166020830152602083015160408301526040830151606083015260608301516080830152608083015160a083015260a083015161430760c0840182613d89565b5060c083015161431a60e0840182613d13565b5060e0830151516101008301529392505050565b60006040828403121561434057600080fd5b614348613a98565b905081518152602082015167ffffffffffffffff81111561436857600080fd5b8201601f8101841361437957600080fd5b8051614387613b7d82613bd0565b81815285602083850101111561439c57600080fd5b6143ad826020830160208601613924565b602084015250909392505050565b6000602082840312156143cd57600080fd5b815167ffffffffffffffff808211156143e557600080fd5b9083019060c082860312156143f957600080fd5b614401613ac1565b82518152602083015161441381613a50565b6020820152604083015161442681613a50565b604082015260608301518281111561443d57600080fd5b6144498782860161432e565b6060830152506080830151608082015260a083015160a082015280935050505092915050565b60006020828403121561448157600080fd5b815167ffffffffffffffff8082111561449957600080fd5b9083019060a082860312156144ad57600080fd5b6144b5613ae4565b8251815260208301516144c781613a50565b60208201526040838101519082015260608301516144e481613a50565b60608201526080830151828111156144fb57600080fd5b6145078782860161432e565b60808301525095945050505050565b60006020828403121561452857600080fd5b8151610da181613a50565b600060018201614545576145456140dc565b5060010190565b601f821115610cab57600081815260208120601f850160051c810160208610156145735750805b601f850160051c820191505b818110156145925782815560010161457f565b505050505050565b815167ffffffffffffffff8111156145b4576145b4613a82565b6145c8816145c284546140a8565b8461454c565b602080601f8311600181146145fd57600084156145e55750858301515b600019600386901b1c1916600185901b178555614592565b600085815260208120601f198616915b8281101561462c5788860151825594840194600190910190840161460d565b508582101561464a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561466c57600080fd5b815160ff81168114610da157600080fd5b600181815b808511156146b857816000190482111561469e5761469e6140dc565b808516156146ab57918102915b93841c9390800290614682565b509250929050565b6000826146cf57506001610c1d565b816146dc57506000610c1d565b81600181146146f257600281146146fc57614718565b6001915050610c1d565b60ff84111561470d5761470d6140dc565b50506001821b610c1d565b5060208310610133831016604e8410600b841016171561473b575081810a610c1d565b614745838361467d565b8060001904821115614759576147596140dc565b029392505050565b6000610da183836146c0565b634e487b7160e01b600052600160045260246000fd5b6000602080838503121561479657600080fd5b825167ffffffffffffffff8111156147ad57600080fd5b8301601f810185136147be57600080fd5b80516147cc613b7d82613b38565b81815260069190911b820183019083810190878311156147eb57600080fd5b928401925b8284101561249457604084890312156148095760008081fd5b614811613a98565b8451815285850151868201528252604090930192908401906147f0565b634e487b7160e01b600052603260045260246000fd5b602081526000610da16020830184613948565b60408152600061486a6040830185613948565b90508260208301529392505050565b8082018281126000831280158216821582161715612540576125406140dc56fea2646970667358221220b014adc3f3ad9587434d77c0f29c2c0f8eb07cf3c8926ca9b1441f05cab989aa64736f6c63430008130033",
    "sourceMap": "2695:37282:109:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6901:60;;;;;;;;;;-1:-1:-1;6901:60:109;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;8876:202;;;;;;;;;;-1:-1:-1;8876:202:109;;;;;:::i;:::-;;:::i;:::-;;;2891:14:120;;2884:22;2866:41;;2854:2;2839:18;8876:202:109;2726:187:120;39513:219:109;;;;;;;;;;-1:-1:-1;39513:219:109;;;;;:::i;:::-;;:::i;10705:325:11:-;;;;;;;;;;-1:-1:-1;10705:325:11;;;;;:::i;:::-;;:::i;17136:99:109:-;;;;;;;;;;-1:-1:-1;17207:11:109;:21;17136:99;;;7017:25:120;;;7005:2;6990:18;17136:99:109;6871:177:120;6227:34:109;;;;;;;;;;;;;;;;5679:36;;;;;;;;;;;;5707:8;5679:36;;39203:155;;;;;;;;;;-1:-1:-1;39203:155:109;;;;;:::i;:::-;;:::i;6785:86:11:-;;;;;;;;;;-1:-1:-1;6860:4:11;6785:86;;;-1:-1:-1;;;;;7231:55:120;;;7213:74;;7201:2;7186:18;6785:86:11;7053:240:120;38404:520:109;;;;;;;;;;-1:-1:-1;38404:520:109;;;;;:::i;:::-;;:::i;12468:81::-;;;;;;;;;;;;;:::i;9429:344:11:-;;;;;;:::i;:::-;;:::i;39738:237:109:-;;;;;;;;;;-1:-1:-1;39738:237:109;;;;;:::i;:::-;;:::i;6657:45::-;;;;;;;;;;-1:-1:-1;6657:45:109;;;;;;;;;;;;;;;;;;:::i;14010:681::-;;;;;;;;;;-1:-1:-1;14010:681:109;;;;;:::i;:::-;;:::i;32562:1145::-;;;;;;;;;;-1:-1:-1;32562:1145:109;;;;;:::i;:::-;;:::i;6551:47::-;;;;;;;;;;-1:-1:-1;6551:47:109;;;;;;;;;;;;;;;:::i;6953:92:11:-;;;;;;;;;;-1:-1:-1;7032:6:11;;6953:92;;5968:49:109;;;;;;;;;;;;6015:2;5968:49;;7135:100:11;;;;;;;;;;-1:-1:-1;7218:10:11;7135:100;;7326:108;;;;;;;;;;-1:-1:-1;7417:10:11;;7326:108;;12395:145;;;;;;;;;;-1:-1:-1;12395:145:11;;;;;:::i;:::-;;:::i;6145:20:109:-;;;;;;;;;;;;;;;;34288:1482;;;;;;;;;;-1:-1:-1;34288:1482:109;;;;;:::i;:::-;;:::i;7017:53::-;;;;;;;;;;-1:-1:-1;7017:53:109;;;;;:::i;:::-;;;;;;;;;;;;;;6792:42;;;;;;;;;;-1:-1:-1;6792:42:109;;;;-1:-1:-1;;;;;6792:42:109;;;12555:128;;;;;;;;;;-1:-1:-1;12555:128:109;;;;;:::i;:::-;;:::i;39060:137::-;;;;;;;;;;-1:-1:-1;39060:137:109;;;;;:::i;:::-;;:::i;6171:23::-;;;;;;;;;;;;;;;;13046:958;;;;;;;;;;-1:-1:-1;13046:958:109;;;;;:::i;:::-;;:::i;6340:38::-;;;;;;;;;;;;;;;;12209:253;;;;;;;;;;;;;:::i;6267:26::-;;;;;;;;;;;;;;;;20408:735;;;;;;;;;;-1:-1:-1;20408:735:109;;;;;:::i;:::-;;:::i;7108:57::-;;;;;;;;;;-1:-1:-1;7108:57:109;;;;;:::i;:::-;;:::i;38930:124::-;;;;;;;;;;-1:-1:-1;38930:124:109;;;;;:::i;:::-;;:::i;4412:75:9:-;;;;;;;;;;;;4445:42;4412:75;;6200:21:109;;;;;;;;;;;;;;;;6708:51;;;;;;;;;;-1:-1:-1;6708:51:109;;;;;;25192:198;;;;;;;;;;-1:-1:-1;25192:198:109;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6299:35::-;;;;;;;;;;;;;;;;21782:288;;;;;;;;;;-1:-1:-1;21782:288:109;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;22765:86::-;;;;;;;;;;-1:-1:-1;22765:86:109;;;;;:::i;:::-;;:::i;25987:127::-;;;;;;;;;;-1:-1:-1;25987:127:109;;;;;:::i;:::-;-1:-1:-1;;;;;26081:26:109;26055:7;26081:26;;;:18;:26;;;;;;;25987:127;17241:110;;;;;;;;;;-1:-1:-1;17333:11:109;;;;;;;17241:110;;24148:1038;;;;;;;;;;-1:-1:-1;24148:1038:109;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;36975:112::-;;;;;;;;;;-1:-1:-1;37060:20:109;;36975:112;;25773:145;;;;;;;;;;-1:-1:-1;25773:145:109;;;;;:::i;:::-;25850:7;25876:22;;;:9;:22;;;;;:35;;;;25773:145;7566:101:11;;;;;;;;;;-1:-1:-1;7622:4:11;14479:10;;;7566:101;;25591:176:109;;;;;;;;;;-1:-1:-1;25591:176:109;;;;;:::i;:::-;;:::i;17467:226::-;;;;;;;;;;-1:-1:-1;17467:226:109;;;;;:::i;:::-;;:::i;7823:146:11:-;;;;;;;;;;-1:-1:-1;7823:146:11;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7447:1028:109:-;;;;;;;;;;-1:-1:-1;7447:1028:109;;;;;:::i;:::-;;:::i;10092:220:11:-;;;;;;:::i;:::-;;:::i;8816:197::-;;;;;;;;;;-1:-1:-1;8816:197:11;;;;;:::i;:::-;;:::i;39364:143:109:-;;;;;;;;;;-1:-1:-1;39364:143:109;;;;;:::i;:::-;;:::i;6901:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6901:60:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8876:202::-;8961:4;8984:47;;;8999:32;8984:47;;:87;;-1:-1:-1;952:25:37;937:40;;;;9035:36:109;8977:94;8876:202;-1:-1:-1;;8876:202:109:o;39513:219::-;39596:10;5954:30:11;5976:7;5954:21;:30::i;:::-;39618:17:109::1;:57:::0;;-1:-1:-1;;39618:57:109::1;-1:-1:-1::0;;;;;39618:57:109;::::1;::::0;;::::1;::::0;;;39690:35:::1;::::0;7213:74:120;;;39690:35:109::1;::::0;7201:2:120;7186:18;39690:35:109::1;;;;;;;;39513:219:::0;;:::o;10705:325:11:-;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;10924:42:::2;10936:13;10951:5;10958:7;10924:11;:42::i;:::-;10705:325:::0;;;:::o;39203:155:109:-;39268:10;5954:30:11;5976:7;5954:21;:30::i;:::-;39290:8:109::1;:20:::0;;;39325:26:::1;::::0;7017:25:120;;;39325:26:109::1;::::0;7005:2:120;6990:18;39325:26:109::1;6871:177:120::0;38404:520:109;38474:7;38536:21;;;:9;:21;;;;;38572:19;;:33;;38568:100;;38628:29;;-1:-1:-1;;;38628:29:109;;;;;7017:25:120;;;6990:18;;38628:29:109;;;;;;;;38568:100;38709:36;38682:23;;;;;;:63;;;;;;;;:::i;:::-;;38678:130;;38768:29;;-1:-1:-1;;;38768:29:109;;;;;7017:25:120;;;6990:18;;38768:29:109;6871:177:120;38678:130:109;38818:59;38845:8;38855;:21;;;38818:26;:59::i;:::-;38894:23;;;;38404:520;-1:-1:-1;;38404:520:109:o;12468:81::-;12513:29;12531:10;12513:17;:29::i;:::-;12468:81::o;9429:344:11:-;9584:19;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;9683:34:::2;9702:5;9709:7;9683:18;:34::i;:::-;9669:48:::0;9429:344;-1:-1:-1;;;9429:344:11:o;39738:237:109:-;39823:10;5954:30:11;5976:7;5954:21;:30::i;:::-;39876:19:109::1;::::0;39850:67:::1;::::0;;16395:25:120;;;16451:2;16436:18;;16429:34;;;39850:67:109::1;::::0;16368:18:120;39850:67:109::1;;;;;;;-1:-1:-1::0;39927:19:109::1;:41:::0;39738:237::o;14010:681::-;14094:7;14113:23;:21;:23::i;:::-;14192:24;14249:36;14234:11;;;;;;;:51;;;;;;;;:::i;:::-;;:103;;;-1:-1:-1;14304:33:109;14289:11;;;;;;;:48;;;;;;;;:::i;:::-;;14234:103;14230:298;;;-1:-1:-1;14401:16:109;14230:298;;;14468:49;14491:7;14500:16;14468:22;:49::i;:::-;14449:68;;14230:298;14561:16;14537:20;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;14592:59:109;;;-1:-1:-1;;;;;17016:55:120;;16998:74;;17103:2;17088:18;;17081:34;;;17131:18;;;17124:34;;;14592:59:109;;16986:2:120;16971:18;14592:59:109;;;;;;;14668:16;14010:681;-1:-1:-1;;;14010:681:109:o;32562:1145::-;32696:7;32719:9;32731:11;32719:23;;33057:17;33077:27;5707:8;33092:3;33083:5;;:12;;33082:18;;;;:::i;:::-;33102:1;33077:4;:27::i;:::-;33057:47;;33697:3;5850:34;33674:5;;5707:8;33670:9;;;;:::i;:::-;33645:19;33655:9;-1:-1:-1;;;33645:19:109;:::i;:::-;33627:14;5707:8;33627:10;:14;:::i;:::-;:38;;;;:::i;:::-;33626:54;;;;:::i;:::-;33600:21;33612:9;33600;:21;:::i;:::-;33599:82;;;;:::i;:::-;33598:94;;;;:::i;:::-;33597:103;;;32562:1145;-1:-1:-1;;;;;;32562:1145:109:o;12395:145:11:-;12481:4;12504:29;12522:10;12504:17;:29::i;34288:1482:109:-;34363:18;34531:1;34517:10;;:15;34513:66;;34555:13;;;;;;;;;;;;;;34513:66;35019:33;35035:16;35019:15;:33::i;:::-;35015:91;;;35075:20;;-1:-1:-1;;;35075:20:109;;;;;;;;;;;35015:91;35328:10;;35254:13;;35298:26;:16;35317:7;35298:26;:::i;:::-;35297:41;;;;:::i;:::-;5707:8;35271;;35282:7;35271:18;;;;:::i;:::-;35270:24;;;;:::i;:::-;:68;;;;:::i;:::-;35254:84;;35491:2;35449:28;37060:20;;;36975:112;35449:28;35439:5;;35435:9;;5707:8;35435:9;:::i;:::-;5707:8;35422:2;35404:13;35412:5;;35404:13;:::i;:::-;35403:21;;5707:8;35390:3;35380:6;;:13;;35379:19;;;;:::i;:::-;35378:47;;;;:::i;:::-;35377:53;;;;:::i;:::-;35376:69;;;;:::i;:::-;35375:102;;;;:::i;:::-;35361:132;;35348:145;;35709:19;;35696:10;:32;:67;;35744:19;;35696:67;;;-1:-1:-1;35731:10:109;35683:80;-1:-1:-1;34288:1482:109:o;12555:128::-;12617:23;:21;:23::i;:::-;12650:26;12668:7;12650:17;:26::i;:::-;12555:128;:::o;39060:137::-;39119:10;5954:30:11;5976:7;5954:21;:30::i;:::-;39141:5:109::1;:14:::0;;;39170:20:::1;::::0;7017:25:120;;;39170:20:109::1;::::0;7005:2:120;6990:18;39170:20:109::1;6871:177:120::0;13046:958:109;13128:7;13192:23;:21;:23::i;:::-;13225:24;13282:36;13267:11;;;;;;;:51;;;;;;;;:::i;:::-;;13263:441;;13376:14;13353:38;13334:57;;13263:441;;;13427:33;13412:11;;;;;;;:48;;;;;;;;:::i;:::-;;13408:296;;13495:44;13515:7;13524:14;13495:19;:44::i;13408:296::-;13575:36;13560:11;;;;;;;:51;;;;;;;;:::i;:::-;;13556:148;;13646:47;13669:7;13678:14;13646:22;:47::i;:::-;13627:66;;13556:148;13732:17;;:69;;-1:-1:-1;;;13732:69:109;;-1:-1:-1;;;;;18193:15:120;;;13732:69:109;;;18175:34:120;13795:4:109;18225:18:120;;;18218:43;13713:16:109;;13732:17;;:45;;18087:18:120;;13732:69:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13713:88;;13815:11;13811:82;;;13866:16;13842:20;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;13811:82:109;13907:57;;;-1:-1:-1;;;;;17016:55:120;;16998:74;;17103:2;17088:18;;17081:34;;;17131:18;;;17124:34;;;13907:57:109;;16986:2:120;16971:18;13907:57:109;;;;;;;-1:-1:-1;13981:16:109;13046:958;-1:-1:-1;;;13046:958:109:o;12209:253::-;12291:17;;:65;;;;;12271:10;12291:65;;;18175:34:120;;;12350:4:109;18225:18:120;;;18218:43;12271:10:109;-1:-1:-1;;;;;12291:17:109;;:42;;18087:18:120;;12291:65:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12390:17:109;;:65;;-1:-1:-1;;;12390:65:109;;-1:-1:-1;;;;;18193:15:120;;;12390:65:109;;;18175:34:120;12449:4:109;18225:18:120;;;18218:43;12390:17:109;;;;-1:-1:-1;12390:42:109;;-1:-1:-1;18087:18:120;;12390:65:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12366:20;;:89;;;;;;;:::i;:::-;;;;-1:-1:-1;;;12209:253:109:o;20408:735::-;20477:18;20550:21;;;:9;:21;;;;;20760;;;;20477:18;;;;20716:66;;20550:21;;20716:33;:66::i;:::-;20656:126;;;;20797:14;20815:1;20797:19;:39;;;;-1:-1:-1;20820:16:109;;20797:39;20793:110;;;20869:8;:23;;;20852:40;;20793:110;20912:17;20932:44;20951:8;:24;;;20932:18;:44::i;:::-;21109:27;;;;;20408:735;-1:-1:-1;;;;;20408:735:109:o;7108:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;38930:124::-;38993:7;39040:5;;5707:8;39036:9;;;;:::i;:::-;39021:10;5707:8;39021:6;:10;:::i;:::-;39020:26;;;;:::i;25192:198::-;-1:-1:-1;;;;;;;;;;;;;;;;;25284:40:109;25327:9;:22;25337:11;25327:22;;;;;;;;;;;25284:65;;25366:8;:17;;25359:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25192:198;;;:::o;21782:288::-;21868:22;21952:16;;-1:-1:-1;;;21952:16:109;;;;;;;;;;;22765:86;22821:23;22836:7;22821:14;:23::i;24148:1038::-;24250:17;24281:19;24314:22;24350:23;24387:20;24421:44;24479:17;24510:22;24546:17;24577:25;24627:40;24670:9;:22;24680:11;24670:22;;;;;;;;;;;24627:65;;24715:8;:24;;;24743:1;24715:29;:80;;24751:44;24770:8;:24;;;24751:18;:44::i;:::-;24715:80;;;24747:1;24715:80;24703:92;;24826:8;:18;;;;;;;;;;-1:-1:-1;;;;;24826:18:109;24858:8;:20;;;;;;;;;;-1:-1:-1;;;;;24858:20:109;24892:8;:23;;;;;;;;;;-1:-1:-1;;;;;24892:23:109;24929:8;:24;;;24967:8;:21;;;25002:8;:23;;;;;;;;;;;;25039:8;:18;;;25071:8;:23;;;25108:9;25131:8;:26;;:38;25158:10;-1:-1:-1;;;;;25131:38:109;-1:-1:-1;;;;;25131:38:109;;;;;;;;;;;;;24805:374;;;;;;;;;;;;;;;;;;;;;24148:1038;;;;;;;;;;;:::o;25591:176::-;25682:7;26247:22;;;:9;:22;;;;;;;;-1:-1:-1;;;;;26247:48:109;;;;:40;;:48;;;;;;25708:52;26120:182;17467:226;17610:16;;-1:-1:-1;;;17610:16:109;;;;;;;;;;;7823:146:11;7904:6;7929:33;7949:12;7929:19;:33::i;7447:1028:109:-;7523:28;7543:7;7523:19;:28::i;:::-;7561:41;7616:5;7605:52;;;;;;;;;;;;:::i;:::-;8012:20;;7561:96;;-1:-1:-1;;;;;;8012:34:109;8008:94;;8069:22;;-1:-1:-1;;;8069:22:109;;;;;;;;;;;8008:94;8150:20;;8112:17;:59;;-1:-1:-1;;8112:59:109;-1:-1:-1;;;;;8112:59:109;;;;;;;;;8189:8;;;;8181:5;:16;8218:11;;;;8207:8;:22;8248:9;;;;8239:6;:18;8282:15;;;;8267:12;:30;;-1:-1:-1;;8267:30:109;-1:-1:-1;8282:15:109;8267:30;;;;;;;;:::i;:::-;;;;;-1:-1:-1;8321:14:109;;;;8307:11;:28;;-1:-1:-1;;8307:28:109;;8321:14;8307:28;;;;;;;;:::i;:::-;;;;;-1:-1:-1;8359:14:109;;;;8345:28;:11;:28;8405:21;;;;8383:19;:43;8442:26;;;;;;8456:7;;8359:2;;8442:26;:::i;:::-;;;;;;;;7513:962;7447:1028;;:::o;10092:220:11:-;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;10240:25:::2;10250:5;10257:7;10240:9;:25::i;:::-;10092:220:::0;;:::o;8816:197::-;5660:16;:14;:16::i;:::-;8956:7:::1;8942:10;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;8973:33:11::1;::::0;-1:-1:-1;8998:7:11;8973:24:::1;:33::i;39364:143:109:-:0;39425:10;5954:30:11;5976:7;5954:21;:30::i;:::-;39447:6:109::1;:16:::0;;;39478:22:::1;::::0;7017:25:120;;;39478:22:109::1;::::0;7005:2:120;6990:18;39478:22:109::1;6871:177:120::0;13122:142:11;13218:6;;13199:35;;;;;;;;21655:25:120;;;;-1:-1:-1;;;;;21716:55:120;;;21696:18;;;21689:83;13199:4:11;:18;;;;21628::120;;13199:35:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13194:63;;13243:14;;-1:-1:-1;;;13243:14:11;;;;;;;;;;;12814:111;12868:10;-1:-1:-1;;;;;12890:4:11;12868:27;;12864:54;;12904:14;;-1:-1:-1;;;12904:14:11;;;;;;;;;;;13771:105;13832:6;;13842:1;13832:11;13828:41;;13852:17;;;;;;;;;;;;;;18646:1756:109;18841:1;18825:5;:12;:17;18821:76;;18865:21;;;;;;;;;;;;;;18821:76;18907:18;18939:5;18928:28;;;;;;;;;;;;:::i;:::-;18907:49;;18971:10;18985:1;18971:15;18967:77;;19009:24;;;;;;;;;;;;;;18967:77;19053:40;19096:21;;;:9;:21;;;;;19148:35;19132:12;;;;:51;;;;;;;;:::i;:::-;;19128:1208;;19203:19;;:33;;19199:108;;19263:29;;-1:-1:-1;;;19263:29:109;;;;;7017:25:120;;;6990:18;;19263:29:109;6871:177:120;19199:108:109;19352:10;;19325:8;:24;;;:37;19321:152;;;19421:24;;;;19447:10;;19389:69;;;;;;;;21985:25:120;;;22026:18;;;22019:34;;;;22069:18;;;22062:34;21958:18;;19389:69:109;21783:319:120;19321:152:109;19518:36;19491:23;;;;;;:63;;;;;;;;:::i;:::-;;19487:138;;19581:29;;-1:-1:-1;;;19581:29:109;;;;;7017:25:120;;;6990:18;;19581:29:109;6871:177:120;19487:138:109;19639:22;19664:36;19689:10;19664:24;:36::i;:::-;19639:61;;19714:17;19734:44;19753:8;:24;;;19734:18;:44::i;:::-;19714:64;;19814:9;19797:14;:26;:58;;;;;19854:1;19827:8;:24;;;:28;19797:58;19793:137;;;19882:33;;;;;;;;;;;;;;19793:137;19982:6;;19969:20;;;;;19944:22;;-1:-1:-1;;;;;19969:4:109;:12;;;;:20;;;;7017:25:120;;;7005:2;6990:18;;6871:177;19969:20:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19969:20:109;;;;;;;;;;;;:::i;:::-;19944:45;;20018:8;:24;;;20004:10;;:38;;;;;;;:::i;:::-;;;;-1:-1:-1;;20080:10:109;;;;20092:20;;;;;20114:24;;;20064:75;;20080:10;-1:-1:-1;;;;;20092:20:109;;20064:15;:75::i;:::-;20170:23;;;:64;;-1:-1:-1;;20170:64:109;20196:38;20170:64;;;;;;20278:20;;;20170:64;20300:24;;;20254:71;;;24073:25:120;;;-1:-1:-1;;;;;20278:20:109;;;24129:2:120;24114:18;;24107:83;24206:18;;24199:34;20254:71:109;;24061:2:120;24046:18;20254:71:109;;;;;;;19185:1151;;;19128:1208;18732:1670;;18646:1756;;;:::o;37277:396::-;37396:18;37416:19;37439:56;37473:9;37484:10;37439:33;:56::i;:::-;37395:100;;;;37509:10;37523:1;37509:15;:35;;;;-1:-1:-1;37528:16:109;;37509:35;37505:72;;;37560:7;;37277:396;;:::o;37505:72::-;37586:19;;;:33;37629:24;;;;:37;;;;-1:-1:-1;37277:396:109:o;12689:351::-;12776:17;;:66;;-1:-1:-1;;;12776:66:109;;-1:-1:-1;;;;;18193:15:120;;;12776:66:109;;;18175:34:120;12836:4:109;18225:18:120;;;18218:43;12776:17:109;;;;:42;;18087:18:120;;12776:66:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12752:20;;:90;;;;;;;:::i;:::-;;;;-1:-1:-1;;12852:17:109;;:68;;;;;-1:-1:-1;;;;;18193:15:120;;;12852:68:109;;;18175:34:120;12914:4:109;18225:18:120;;;18218:43;12852:17:109;;;;:44;;18087:18:120;;12852:68:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12975:17;12984:7;12975:8;:17::i;:::-;13007:26;;-1:-1:-1;;;;;7231:55:120;;7213:74;;13007:26:109;;7201:2:120;7186:18;13007:26:109;;;;;;;;12689:351;:::o;10258:1945::-;10350:7;10429:45;10488:5;10477:50;;;;;;;;;;;;:::i;:::-;10642:15;;10429:98;;-1:-1:-1;10642:15:109;:20;10638:78;;10685:20;;;;;;;;;;;;;;10638:78;10808:35;10792:12;;;;:51;;;;;;;;:::i;:::-;;10788:721;;10859:39;10877:8;:20;;;10859:17;:39::i;:::-;10964:23;;;;-1:-1:-1;;;;;10964:37:109;10960:102;;11028:19;;;;;;;;;;;;;;10960:102;11075:17;11095:4;-1:-1:-1;;;;;11095:12:109;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11095:22:109;;11118:6;;11095:30;;;;;;;;;;;;;7017:25:120;;7005:2;6990:18;;6871:177;11095:30:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11095:30:109;;;;;;;;;;;;:::i;:::-;:36;;;11075:56;;11176:9;-1:-1:-1;;;;;11149:36:109;:8;:23;;;-1:-1:-1;;;;;11149:36:109;;11145:234;;11347:17;;;;;;;;;;;;;;11145:234;11396:41;11412:8;:24;;;11396:15;:41::i;:::-;11392:107;;;11464:20;;-1:-1:-1;;;11464:20:109;;;;;;;;;;;11392:107;10845:664;10788:721;11518:18;11541:15;;11539:17;;;;;:::i;:::-;;;;;-1:-1:-1;11566:33:109;11602:21;;;:9;:21;;;;;;;;11634:25;;;11669:11;;;:21;;-1:-1:-1;;;;;11669:21:109;;;-1:-1:-1;;11669:21:109;;;;;;;11716:20;;;;11700:13;;;:36;;;;;;;;;;;;;;11765:23;;;;11746:16;;;:42;;;;;;;;;;;11818:24;;;;-1:-1:-1;11798:17:109;;;:44;;;;11903:16;;;:55;;-1:-1:-1;;11903:55:109;;;;;;11982:12;11968:11;;;:26;-1:-1:-1;12004:16:109;;:20;;;;12083:17;;;;12070:30;;:10;;;:30;;;;;;;11539:17;;-1:-1:-1;11602:21:109;;12070:30;;;;;;;;:::i;:::-;-1:-1:-1;;12132:6:109;;12116:35;;;16395:25:120;;;16451:2;16436:18;;16429:34;;;12116:35:109;;-1:-1:-1;16368:18:120;12116:35:109;;;;;;;-1:-1:-1;12184:10:109;10258:1945;-1:-1:-1;;;;10258:1945:109:o;9632:162::-;9714:17;;-1:-1:-1;;;;;9714:17:109;9692:10;:40;9688:100;;9755:22;;;;;;;;;;;;;;16328:802;16493:17;;:31;;;-1:-1:-1;;;16493:31:109;;;;16426:7;;16463:2;;-1:-1:-1;;;;;16493:17:109;;;;:29;;:31;;;;;;;;;;;;;;;:17;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16479:56:109;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16479:58:109;;;;;;;;-1:-1:-1;;16479:58:109;;;;;;;;;;;;:::i;:::-;;;16475:208;;16636:36;;;;;;;;;;;;;;;;;;:11;:36::i;:::-;16475:208;;;16587:17;;;-1:-1:-1;16475:208:109;16692:49;;;;;;;;;;;;;;;;;;16724:16;16692:11;:49::i;:::-;16775:17;;:48;;-1:-1:-1;;;16775:48:109;;-1:-1:-1;;;;;7231:55:120;;;16775:48:109;;;7213:74:120;16751:21:109;;16826:16;;16775:17;;;:39;;7186:18:120;;16775:48:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;;;:::i;:::-;16751:91;;16852:43;;;;;;;;;;;;;;;;;;16881:13;16852:11;:43::i;:::-;16905:22;16930:40;16956:13;16962:7;16956:2;:13;:::i;:::-;16940:29;;:13;:29;:::i;:::-;16930:9;:40::i;:::-;17007:17;;:66;;-1:-1:-1;;;17007:66:109;;-1:-1:-1;;;;;18193:15:120;;;17007:66:109;;;18175:34:120;17067:4:109;18225:18:120;;;18218:43;16905:65:109;;-1:-1:-1;16980:24:109;;16905:65;;17007:17;;:42;;18087:18:120;;17007:66:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:83;;;;:::i;:::-;16980:110;16328:802;-1:-1:-1;;;;;;;16328:802:109:o;36522:447::-;36583:15;-1:-1:-1;;;36618:2:109;:12;36610:53;;;;-1:-1:-1;;;36610:53:109;;29974:2:120;36610:53:109;;;29956:21:120;30013:2;29993:18;;;29986:30;30052;30032:18;;;30025:58;30100:18;;36610:53:109;29772:352:120;36610:53:109;-1:-1:-1;;;;36685:2:109;36709;36748:215;36755:5;;36748:215;;36780:1;36784;36780:5;36789:1;36780:10;36776:177;;36814:10;36819:1;36822;36814:4;:10::i;:::-;36810:14;-1:-1:-1;36848:1:109;36842:7;36748:215;;36776:177;36898:16;36903:7;36912:1;36898:4;:16::i;:::-;36888:26;-1:-1:-1;36932:6:109;36937:1;36932:6;;:::i;:::-;;;36748:215;;;36600:369;;36522:447;;;;:::o;22568:191::-;22647:4;-1:-1:-1;;;;;22713:24:109;;;:39;;22748:4;22713:39;;;22740:5;22706:46;22568:191;-1:-1:-1;;22568:191:109:o;26650:174::-;26724:19;26797:20;5707:8;26797:16;:20;:::i;:::-;26783:10;;26772:8;;:21;;;;:::i;:::-;:45;;;26650:174;-1:-1:-1;;26650:174:109:o;14829:615::-;14922:7;14941:24;14968:14;14941:41;;14992:51;;;;;;;;;;;;;;;;;;15026:16;14992:11;:51::i;:::-;15075:17;;:66;;-1:-1:-1;;;15075:66:109;;-1:-1:-1;;;;;18193:15:120;;;15075:66:109;;;18175:34:120;15135:4:109;18225:18:120;;;18218:43;15053:19:109;;15075:17;;:42;;18087:18:120;;15075:66:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15053:88;;15151:39;;;;;;;;;;;;;;;;;;15178:11;15151;:39::i;:::-;15237:11;:21;15204:30;15218:16;15204:11;:30;:::i;:::-;:54;15200:139;;;15293:11;:21;:35;;15317:11;;15293:35;:::i;:::-;15274:54;;15200:139;15348:55;;;;;;;;;;;;;;;;;;15386:16;15348:11;:55::i;:::-;-1:-1:-1;15421:16:109;14829:615;-1:-1:-1;;;14829:615:109:o;15450:730::-;15586:17;;:48;;-1:-1:-1;;;15586:48:109;;-1:-1:-1;;;;;7231:55:120;;;15586:48:109;;;7213:74:120;15546:7:109;;;;15637:14;;15586:17;;;;:39;;7186:18:120;;15586:48:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;;:::i;:::-;15710:17;;:31;;;-1:-1:-1;;;15710:31:109;;;;15565:86;;-1:-1:-1;15680:2:109;;-1:-1:-1;;;;;15710:17:109;;;;:29;;:31;;;;;;;;;;;;;;;:17;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15696:56:109;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15696:58:109;;;;;;;;-1:-1:-1;;15696:58:109;;;;;;;;;;;;:::i;:::-;;;15692:208;;15853:36;;;;;;;;;;;;;;;;;;:11;:36::i;:::-;15692:208;;;15804:17;;;-1:-1:-1;15692:208:109;15909:22;15934:37;15957:13;15963:7;15957:2;:13;:::i;:::-;15944:26;;:10;:26;:::i;15934:37::-;16005:17;;:66;;-1:-1:-1;;;16005:66:109;;-1:-1:-1;;;;;18193:15:120;;;16005:66:109;;;18175:34:120;16065:4:109;18225:18:120;;;18218:43;15909:62:109;;-1:-1:-1;15981:21:109;;16005:17;;;;:42;;18087:18:120;;16005:66:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15981:90;-1:-1:-1;16082:24:109;16109:30;15981:90;16109:14;:30;:::i;:::-;16082:57;15450:730;-1:-1:-1;;;;;;;;15450:730:109:o;37679:719::-;37832:18;37852:19;37901:12;37887:26;;37953:11;37930:9;:19;;;:34;;37923:42;;;;:::i;:::-;38002:11;37979:9;:19;;;:34;37975:173;;-1:-1:-1;38103:1:109;;-1:-1:-1;38103:1:109;38095:13;;37975:173;38214:177;38261:9;:19;;;38247:11;:33;;;;:::i;:::-;38333:9;:24;;;38371:10;38214:19;:177::i;:::-;38201:190;;37679:719;;;;;;:::o;14116:118:11:-;14173:10;:20;;-1:-1:-1;;14173:20:11;;;;;;;;;;14208:19;;2866:41:120;;;14208:19:11;;2854:2:120;2839:18;14208:19:11;2726:187:120;21433:220:109;21516:6;-1:-1:-1;;;;;21584:26:109;;;:62;;21631:15;21584:62;;;21613:15;21577:69;21433:220;-1:-1:-1;;21433:220:109:o;8269:350:11:-;5660:16;:14;:16::i;:::-;8428:6:::1;::::0;:11;8424:45:::1;;8448:21;;;;;;;;;;;;;;8424:45;8556:7;8567:1;8556:12:::0;8552:34:::1;;8577:9;;;;;;;;;;;;;;8552:34;8596:6;:16:::0;8269:350::o;17839:551:109:-;17923:28;17943:7;17923:19;:28::i;:::-;18038:17;;:69;;-1:-1:-1;;;18038:69:109;;-1:-1:-1;;;;;18193:15:120;;;18038:69:109;;;18175:34:120;18101:4:109;18225:18:120;;;18218:43;18007:28:109;;18038:17;;:45;;18087:18:120;;18038:69:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18007:100;;18122:23;18117:78;;18168:16;;;;;;;;;;;;;;18117:78;18204:42;18260:5;18249:53;;;;;;;;;;;;:::i;:::-;18204:98;;18312:37;18337:7;18346:2;18312:24;:37::i;:::-;18359:24;18371:7;18380:2;18359:11;:24::i;:::-;17913:477;;17839:551;;:::o;22346:127::-;22438:28;;7017:25:120;;;22438:28:109;;7005:2:120;6990:18;22438:28:109;6871:177:120;6721:269:10;6815:16;-1:-1:-1;;;;;6815:16:10;;;6811:173;;6847:45;6879:3;6884:7;6847:31;:45::i;6811:173::-;6923:50;6952:6;6960:3;6965:7;6923:28;:50::i;22857:729:109:-;-1:-1:-1;;;;;22991:29:109;;22959;22991;;;:20;:29;;;;;;;;22959:61;;;;;;;;;;;;;;;;;;;22991:29;;22959:61;;;22991:29;22959:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23035:9;23030:550;23054:12;:19;23050:1;:23;23030:550;;;23094:18;23115:12;23128:1;23115:15;;;;;;;;:::i;:::-;;;;;;;23094:36;;23144:40;23187:9;:21;23197:10;23187:21;;;;;;;;;;;23144:64;;23226:26;23241:10;23226:14;:26::i;:::-;23222:348;;;-1:-1:-1;;;;;23295:35:109;;23272:20;23295:35;;;:26;;;:35;;;;;;;23348:39;;;;23405:21;;;:37;;23295:35;;;;23405:37;;23295:35;;23405:37;:::i;:::-;;;;;;;;23475:12;23460:11;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;23505:50:109;;-1:-1:-1;23532:8:109;23542:12;23505:26;:50::i;:::-;23254:316;23222:348;23080:500;;23075:3;;;;;:::i;:::-;;;;23030:550;;9800:132;-1:-1:-1;;;;;9873:22:109;;9869:56;;9904:21;;;;;;;;;;;;;;5630:121:66;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:66;;;;;;;;;;;;;;;;;;;;5685:15;:59::i;6548:139::-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:66;;;;;;;;;;;;;;;;;;;;6612:15;:68::i;6530:1642:40:-;6578:7;6601:1;6606;6601:6;6597:45;;-1:-1:-1;6630:1:40;;6530:1642;-1:-1:-1;6530:1642:40:o;6597:45::-;7321:14;7355:1;7344:7;7349:1;7344:4;:7::i;:::-;:12;;7338:1;:19;;7321:36;;7816:1;7805:6;7801:1;:10;;;;;:::i;:::-;;7792:6;:19;7791:26;;7782:35;;7865:1;7854:6;7850:1;:10;;;;;:::i;:::-;;7841:6;:19;7840:26;;7831:35;;7914:1;7903:6;7899:1;:10;;;;;:::i;:::-;;7890:6;:19;7889:26;;7880:35;;7963:1;7952:6;7948:1;:10;;;;;:::i;:::-;;7939:6;:19;7938:26;;7929:35;;8012:1;8001:6;7997:1;:10;;;;;:::i;:::-;;7988:6;:19;7987:26;;7978:35;;8061:1;8050:6;8046:1;:10;;;;;:::i;:::-;;8037:6;:19;8036:26;;8027:35;;8110:1;8099:6;8095:1;:10;;;;;:::i;:::-;;8086:6;:19;8085:26;;8076:35;;8132:23;8136:6;8148;8144:1;:10;;;;;:::i;:::-;;8132:3;:23::i;36031:269:109:-;36092:15;-1:-1:-1;;;36127:2:109;:13;;36119:66;;;;-1:-1:-1;;;36119:66:109;;32420:2:120;36119:66:109;;;32402:21:120;32459:2;32439:18;;;32432:30;32498:34;32478:18;;;32471:62;32569:10;32549:18;;;32542:38;32597:19;;36119:66:109;32218:404:120;36119:66:109;-1:-1:-1;;;36203:2:109;:12;36195:53;;;;-1:-1:-1;;;36195:53:109;;32829:2:120;36195:53:109;;;32811:21:120;32868:2;32848:18;;;32841:30;32907;32887:18;;;32880:58;32955:18;;36195:53:109;32627:352:120;36195:53:109;36290:3;5850:34;36267:7;36272:2;36267;:7;:::i;:::-;36266:19;;;;:::i;:::-;36265:28;;;36031:269;-1:-1:-1;;;36031:269:109:o;9249:377::-;-1:-1:-1;;;;;9322:21:109;;9318:77;;9366:18;;;;;;;;;;;;;;9318:77;9416:17;;-1:-1:-1;;;;;9416:17:109;9404:100;;9471:22;;-1:-1:-1;;;9471:22:109;;;;;;;;;;;9404:100;9518:17;;:35;;;;;-1:-1:-1;;;;;7231:55:120;;;9518:35:109;;;7213:74:120;9518:17:109;;;;:26;;7186:18:120;;9518:35:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9513:93;;9576:19;;;;;;;;;;;;;;26830:1548;26970:22;27011:9;27006:630;27030:16;:23;27026:1;:27;27006:630;;;27133:16;27150:1;27133:19;;;;;;;;:::i;:::-;;;;;;;:30;;;27167:1;27133:35;27129:187;27293:8;27129:187;27329:18;27350:16;27367:1;27350:19;;;;;;;;:::i;:::-;;;;;;;:30;;;27329:51;;27399:26;27414:10;27399:14;:26::i;:::-;27394:167;;27452:29;;-1:-1:-1;;;27452:29:109;;;;;7017:25:120;;;6990:18;;27452:29:109;6871:177:120;27394:167:109;27593:16;27610:1;27593:19;;;;;;;;:::i;:::-;;;;;;;:32;;;27574:51;;;;;:::i;:::-;;;27060:576;27006:630;27055:3;;;;:::i;:::-;;;;27006:630;;;-1:-1:-1;;;;;;26081:26:109;;27732:29;26081:26;;;:18;:26;;;;;;27764:60;;27808:15;27764:11;:60::i;:::-;27935:17;;:66;;-1:-1:-1;;;27935:66:109;;-1:-1:-1;;;;;18193:15:120;;;27935:66:109;;;18175:34:120;27995:4:109;18225:18:120;;;18218:43;27732:92:109;;-1:-1:-1;27906:26:109;;27935:17;;;;:42;;18087:18:120;;27935:66:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27906:95;;28191:18;28167:21;:42;28163:147;;;28232:67;;;;;;;;16395:25:120;;;16436:18;;;16429:34;;;16368:18;;28232:67:109;16221:248:120;28163:147:109;-1:-1:-1;;;;;;28320:27:109;;;;;;;:18;:27;;;;;:51;;;;-1:-1:-1;;26830:1548:109:o;28384:3479::-;28499:29;28543:9;28538:3319;28562:16;:23;28558:1;:27;28538:3319;;;28606:18;28627:16;28644:1;28627:19;;;;;;;;:::i;:::-;;;;;;;:30;;;28606:51;;28730:12;:19;28753:1;28730:24;28726:920;;28789:16;;;28803:1;28789:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28789:16:109;28774:31;;28841:10;28823:12;28836:1;28823:15;;;;;;;;:::i;:::-;;;;;;:28;;;;;28726:920;;;28900:10;28941:9;28936:318;28960:12;:19;28956:1;:23;28936:318;;;29056:10;29037:12;29050:1;29037:15;;;;;;;;:::i;:::-;;;;;;;:29;29033:203;;29139:40;;;;;;;;16395:25:120;;;16436:18;;;16429:34;;;29102:4:109;;-1:-1:-1;16368:18:120;;29139:40:109;16221:248:120;29033:203:109;28981:3;;;;:::i;:::-;;;;28936:318;;;;29276:5;29271:361;;29305:21;29343:12;:19;29365:1;29343:23;;;;:::i;:::-;29329:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29329:38:109;;29305:62;;29394:9;29389:124;29413:12;:19;29409:1;:23;29389:124;;;29475:12;29488:1;29475:15;;;;;;;;:::i;:::-;;;;;;;29465:4;29470:1;29465:7;;;;;;;;:::i;:::-;;;;;;;;;;:25;29434:3;;;;:::i;:::-;;;;29389:124;;;;29562:10;29534:4;29539:12;:19;29534:25;;;;;;;;:::i;:::-;;;;;;;;;;:38;29609:4;-1:-1:-1;29271:361:109;28882:764;28726:920;29659:12;29674:16;29691:1;29674:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:32;;;29721:40;29764:21;;;:9;:21;;;;;;-1:-1:-1;;;;;29918:35:109;;;;:26;;;:35;;;;;;29674:32;;-1:-1:-1;30141:40:109;29918:35;29674:32;30141:11;:40::i;:::-;-1:-1:-1;;;;;30316:35:109;;;;;;:26;;;:35;;;;;:50;;;30118:63;;-1:-1:-1;30316:35:109;30638:246;-1:-1:-1;;;;;30662:29:109;;;;;;:20;:29;;;;;:36;30658:40;;30638:246;;;30763:19;;-1:-1:-1;;;;;30727:29:109;;30763:19;30727:29;;;:20;:29;;;;;:32;;30757:1;;30727:32;;;;;;:::i;:::-;;;;;;;;;:55;30723:147;;30820:4;30806:18;;30846:5;;30723:147;30700:3;;;;:::i;:::-;;;;30638:246;;;;30902:11;30897:106;;-1:-1:-1;;;;;30933:29:109;;;;;;:20;:29;;;;;;;30968:19;;30933:55;;;;;;;;;;;;;;;;;;30897:106;31182:12;31158:20;:36;31154:370;;31229:35;31244:20;31229:12;:35;:::i;:::-;31214:11;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;31307:35:109;;-1:-1:-1;31322:20:109;31307:12;:35;:::i;:::-;31282:8;:21;;;:60;;;;;;;:::i;:::-;;;;-1:-1:-1;31154:370:109;;-1:-1:-1;31154:370:109;;31396:35;31419:12;31396:20;:35;:::i;:::-;31381:11;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;31474:35:109;;-1:-1:-1;31497:12:109;31474:20;:35;:::i;:::-;31449:8;:21;;;:60;;;;;;;:::i;:::-;;;;-1:-1:-1;;31154:370:109;31541:8;:18;;;31563:1;31541:23;31537:310;;31605:12;31584:18;;;:33;31537:310;;;31656:58;31683:8;31693:20;31656:26;:58::i;:::-;31785:21;;;;31808:23;;;;31737:95;;;-1:-1:-1;;;;;33482:55:120;;33464:74;;33569:2;33554:18;;33547:34;;;33597:18;;;33590:34;;;33655:2;33640:18;;33633:34;;;;33698:3;33683:19;;33676:35;31737:95:109;;33451:3:120;33436:19;31737:95:109;;;;;;;31537:310;28592:3265;;;;;;28587:3;;;;;:::i;:::-;;;;28538:3319;;2455:490:44;2711:4;2705;2699;2693;2685:6;2681:2;2674:5;2669:47;2659:270;;2822:10;2816:4;2809:24;2910:4;2904;2897:18;11454:1189;11617:2;11611:4;11604:16;11674:6;11668:4;11661:20;11814:34;11808:4;11801:48;12272:4;12266;12260;12254;12251:1;12244:5;12237;12232:45;12192:16;12185:24;12181:1;12174:4;12168:11;12165:18;12162:48;11890:405;11863:655;;12411:10;12405:4;12398:24;12499:4;12493;12486:18;11863:655;12625:1;12619:4;12612:15;11454:1189;;;:::o;26459:185:109:-;26527:4;26550:22;;;:9;:22;;;;;:33;:37;;;;:87;;-1:-1:-1;;26635:1:109;26591:22;;;:9;:22;;;;;:32;;;-1:-1:-1;;;;;26591:32:109;:46;;;26459:185::o;181:376:66:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;8633:983:40:-;8685:7;;8769:3;8760:12;;;:16;8756:99;;8806:3;8796:13;;;;8827;8756:99;8881:2;8872:11;;;:15;8868:96;;8917:2;8907:12;;;;8937;8868:96;8990:2;8981:11;;;:15;8977:96;;9026:2;9016:12;;;;9046;8977:96;9099:2;9090:11;;;:15;9086:96;;9135:2;9125:12;;;;9155;9086:96;9208:1;9199:10;;;:14;9195:93;;9243:1;9233:11;;;;9262;9195:93;9314:1;9305:10;;;:14;9301:93;;9349:1;9339:11;;;;9368;9301:93;9420:1;9411:10;;;:14;9407:93;;9455:1;9445:11;;;;9474;9407:93;9526:1;9517:10;;;:14;9513:64;;9561:1;9551:11;9603:6;8633:983;-1:-1:-1;;8633:983:40:o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;-1:-1:-1;680:1:40;;588:104;-1:-1:-1;588:104:40:o;31869:276:109:-;31946:7;;31981:25;32000:6;31988:8;31981:25;:::i;:::-;31965:41;;32030:1;32021:6;:10;32017:90;;;32054:42;;;;;;;;21985:25:120;;;22026:18;;;22019:34;;;22069:18;;;22062:34;;;21958:18;;32054:42:109;21783:319:120;14:180;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:120;;14:180;-1:-1:-1;14:180:120:o;199:184::-;-1:-1:-1;;;248:1:120;241:88;348:4;345:1;338:15;372:4;369:1;362:15;388:145;474:1;467:5;464:12;454:46;;480:18;;:::i;:::-;509;;388:145::o;538:250::-;623:1;633:113;647:6;644:1;641:13;633:113;;;723:11;;;717:18;704:11;;;697:39;669:2;662:10;633:113;;;-1:-1:-1;;780:1:120;762:16;;755:27;538:250::o;793:271::-;835:3;873:5;867:12;900:6;895:3;888:19;916:76;985:6;978:4;973:3;969:14;962:4;955:5;951:16;916:76;:::i;:::-;1046:2;1025:15;-1:-1:-1;;1021:29:120;1012:39;;;;1053:4;1008:50;;793:271;-1:-1:-1;;793:271:120:o;1069:252::-;1156:5;1150:12;1145:3;1138:25;1120:3;1209:4;1202:5;1198:16;1192:23;1247:4;1240;1235:3;1231:14;1224:28;1268:47;1309:4;1304:3;1300:14;1286:12;1268:47;:::i;:::-;1261:54;1069:252;-1:-1:-1;;;;1069:252:120:o;1326:1058::-;1740:4;1769:3;1799:6;1788:9;1781:25;1842:6;1837:2;1826:9;1822:18;1815:34;1885:6;1880:2;1869:9;1865:18;1858:34;1928:6;1923:2;1912:9;1908:18;1901:34;-1:-1:-1;;;;;2045:2:120;2037:6;2033:15;2027:3;2016:9;2012:19;2005:44;2098:2;2090:6;2086:15;2080:3;2069:9;2065:19;2058:44;2151:2;2143:6;2139:15;2133:3;2122:9;2118:19;2111:44;;2192:6;2186:3;2175:9;2171:19;2164:35;2208:59;2262:3;2251:9;2247:19;2239:6;2208:59;:::i;:::-;2304:2;2298:3;2287:9;2283:19;2276:31;2324:54;2374:2;2363:9;2359:18;2351:6;2324:54;:::i;:::-;2316:62;1326:1058;-1:-1:-1;;;;;;;;;;;;;1326:1058:120:o;2389:332::-;2447:6;2500:2;2488:9;2479:7;2475:23;2471:32;2468:52;;;2516:1;2513;2506:12;2468:52;2555:9;2542:23;2605:66;2598:5;2594:78;2587:5;2584:89;2574:117;;2687:1;2684;2677:12;2918:154;-1:-1:-1;;;;;2997:5:120;2993:54;2986:5;2983:65;2973:93;;3062:1;3059;3052:12;3077:247;3136:6;3189:2;3177:9;3168:7;3164:23;3160:32;3157:52;;;3205:1;3202;3195:12;3157:52;3244:9;3231:23;3263:31;3288:5;3263:31;:::i;3329:184::-;-1:-1:-1;;;3378:1:120;3371:88;3478:4;3475:1;3468:15;3502:4;3499:1;3492:15;3518:257;3590:4;3584:11;;;3622:17;;3669:18;3654:34;;3690:22;;;3651:62;3648:88;;;3716:18;;:::i;:::-;3752:4;3745:24;3518:257;:::o;3780:253::-;3852:2;3846:9;3894:4;3882:17;;3929:18;3914:34;;3950:22;;;3911:62;3908:88;;;3976:18;;:::i;4038:253::-;4110:2;4104:9;4152:4;4140:17;;4187:18;4172:34;;4208:22;;;4169:62;4166:88;;;4234:18;;:::i;4296:275::-;4367:2;4361:9;4432:2;4413:13;;-1:-1:-1;;4409:27:120;4397:40;;4467:18;4452:34;;4488:22;;;4449:62;4446:88;;;4514:18;;:::i;:::-;4550:2;4543:22;4296:275;;-1:-1:-1;4296:275:120:o;4576:183::-;4636:4;4669:18;4661:6;4658:30;4655:56;;;4691:18;;:::i;:::-;-1:-1:-1;4736:1:120;4732:14;4748:4;4728:25;;4576:183::o;4764:737::-;4818:5;4871:3;4864:4;4856:6;4852:17;4848:27;4838:55;;4889:1;4886;4879:12;4838:55;4925:6;4912:20;4951:4;4975:60;4991:43;5031:2;4991:43;:::i;:::-;4975:60;:::i;:::-;5069:15;;;5155:1;5151:10;;;;5139:23;;5135:32;;;5100:12;;;;5179:15;;;5176:35;;;5207:1;5204;5197:12;5176:35;5243:2;5235:6;5231:15;5255:217;5271:6;5266:3;5263:15;5255:217;;;5351:3;5338:17;5368:31;5393:5;5368:31;:::i;:::-;5412:18;;5450:12;;;;5288;;5255:217;;;-1:-1:-1;5490:5:120;4764:737;-1:-1:-1;;;;;;4764:737:120:o;5506:186::-;5554:4;5587:18;5579:6;5576:30;5573:56;;;5609:18;;:::i;:::-;-1:-1:-1;5675:2:120;5654:15;-1:-1:-1;;5650:29:120;5681:4;5646:40;;5506:186::o;5697:462::-;5739:5;5792:3;5785:4;5777:6;5773:17;5769:27;5759:55;;5810:1;5807;5800:12;5759:55;5846:6;5833:20;5877:48;5893:31;5921:2;5893:31;:::i;5877:48::-;5950:2;5941:7;5934:19;5996:3;5989:4;5984:2;5976:6;5972:15;5968:26;5965:35;5962:55;;;6013:1;6010;6003:12;5962:55;6078:2;6071:4;6063:6;6059:17;6052:4;6043:7;6039:18;6026:55;6126:1;6101:16;;;6119:4;6097:27;6090:38;;;;6105:7;5697:462;-1:-1:-1;;;5697:462:120:o;6164:702::-;6275:6;6283;6291;6344:2;6332:9;6323:7;6319:23;6315:32;6312:52;;;6360:1;6357;6350:12;6312:52;6400:9;6387:23;6429:18;6470:2;6462:6;6459:14;6456:34;;;6486:1;6483;6476:12;6456:34;6509:61;6562:7;6553:6;6542:9;6538:22;6509:61;:::i;:::-;6499:71;;6623:2;6612:9;6608:18;6595:32;6579:48;;6652:2;6642:8;6639:16;6636:36;;;6668:1;6665;6658:12;6636:36;;6691:51;6734:7;6723:8;6712:9;6708:24;6691:51;:::i;:::-;6681:61;;;6792:2;6781:9;6777:18;6764:32;6805:31;6830:5;6805:31;:::i;:::-;6855:5;6845:15;;;6164:702;;;;;:::o;7298:455::-;7375:6;7383;7436:2;7424:9;7415:7;7411:23;7407:32;7404:52;;;7452:1;7449;7442:12;7404:52;7492:9;7479:23;7525:18;7517:6;7514:30;7511:50;;;7557:1;7554;7547:12;7511:50;7580:49;7621:7;7612:6;7601:9;7597:22;7580:49;:::i;:::-;7570:59;;;7679:2;7668:9;7664:18;7651:32;7692:31;7717:5;7692:31;:::i;:::-;7742:5;7732:15;;;7298:455;;;;;:::o;7989:142::-;8072:1;8065:5;8062:12;8052:46;;8078:18;;:::i;8136:213::-;8285:2;8270:18;;8297:46;8274:9;8325:6;8297:46;:::i;8354:315::-;8422:6;8430;8483:2;8471:9;8462:7;8458:23;8454:32;8451:52;;;8499:1;8496;8489:12;8451:52;8538:9;8525:23;8557:31;8582:5;8557:31;:::i;:::-;8607:5;8659:2;8644:18;;;;8631:32;;-1:-1:-1;;;8354:315:120:o;8674:316::-;8751:6;8759;8767;8820:2;8808:9;8799:7;8795:23;8791:32;8788:52;;;8836:1;8833;8826:12;8788:52;-1:-1:-1;;8859:23:120;;;8929:2;8914:18;;8901:32;;-1:-1:-1;8980:2:120;8965:18;;;8952:32;;8674:316;-1:-1:-1;8674:316:120:o;8995:143::-;9079:1;9072:5;9069:12;9059:46;;9085:18;;:::i;9143:215::-;9293:2;9278:18;;9305:47;9282:9;9334:6;9305:47;:::i;9803:261::-;9984:2;9973:9;9966:21;9947:4;10004:54;10054:2;10043:9;10039:18;10031:6;10004:54;:::i;10069:1357::-;10196:6;10204;10257:2;10245:9;10236:7;10232:23;10228:32;10225:52;;;10273:1;10270;10263:12;10225:52;10313:9;10300:23;10342:18;10383:2;10375:6;10372:14;10369:34;;;10399:1;10396;10389:12;10369:34;10422:61;10475:7;10466:6;10455:9;10451:22;10422:61;:::i;:::-;10412:71;;10502:2;10492:12;;10557:2;10546:9;10542:18;10529:32;10586:2;10576:8;10573:16;10570:36;;;10602:1;10599;10592:12;10570:36;10625:24;;10680:4;10672:13;;10668:27;-1:-1:-1;10658:55:120;;10709:1;10706;10699:12;10658:55;10745:2;10732:16;10768:60;10784:43;10824:2;10784:43;:::i;10768:60::-;10862:15;;;10944:1;10940:10;;;;10932:19;;10928:28;;;10893:12;;;;10968:19;;;10965:39;;;11000:1;10997;10990:12;10965:39;11032:2;11028;11024:11;11044:352;11060:6;11055:3;11052:15;11044:352;;;11146:3;11133:17;11182:2;11169:11;11166:19;11163:109;;;11226:1;11255:2;11251;11244:14;11163:109;11297:56;11345:7;11340:2;11326:11;11322:2;11318:20;11314:29;11297:56;:::i;:::-;11285:69;;-1:-1:-1;11374:12:120;;;;11077;;11044:352;;;11048:3;11415:5;11405:15;;;;;;;;10069:1357;;;;;:::o;11431:849::-;11664:2;11716:21;;;11786:13;;11689:18;;;11808:22;;;11635:4;;11664:2;11849;;11867:18;;;;11908:15;;;11635:4;11951:303;11965:6;11962:1;11959:13;11951:303;;;12024:13;;12066:9;;-1:-1:-1;;;;;12062:58:120;12050:71;;12161:11;;12155:18;12141:12;;;12134:40;12194:12;;;;12229:15;;;;11987:1;11980:9;11951:303;;;-1:-1:-1;12271:3:120;;11431:849;-1:-1:-1;;;;;;;11431:849:120:o;12285:118::-;12371:5;12364:13;12357:21;12350:5;12347:32;12337:60;;12393:1;12390;12383:12;12408:241;12464:6;12517:2;12505:9;12496:7;12492:23;12488:32;12485:52;;;12533:1;12530;12523:12;12485:52;12572:9;12559:23;12591:28;12613:5;12591:28;:::i;12654:953::-;-1:-1:-1;;;;;13150:15:120;;;13132:34;;13202:15;;;13197:2;13182:18;;13175:43;13254:15;;13249:2;13234:18;;13227:43;13301:2;13286:18;;13279:34;;;13344:3;13329:19;;13322:35;;;13058:3;13043:19;;13366:59;13420:3;13405:19;;13397:6;13366:59;:::i;:::-;13462:6;13456:3;13445:9;13441:19;13434:35;13506:6;13500:3;13489:9;13485:19;13478:35;13550:6;13544:3;13533:9;13529:19;13522:35;13594:6;13588:3;13577:9;13573:19;13566:35;12654:953;;;;;;;;;;;;;:::o;13612:315::-;13680:6;13688;13741:2;13729:9;13720:7;13716:23;13712:32;13709:52;;;13757:1;13754;13747:12;13709:52;13793:9;13780:23;13770:33;;13853:2;13842:9;13838:18;13825:32;13866:31;13891:5;13866:31;:::i;13932:1202::-;14050:6;14081:2;14124;14112:9;14103:7;14099:23;14095:32;14092:52;;;14140:1;14137;14130:12;14092:52;14180:9;14167:23;14213:18;14205:6;14202:30;14199:50;;;14245:1;14242;14235:12;14199:50;14268:22;;14321:4;14313:13;;14309:27;-1:-1:-1;14299:55:120;;14350:1;14347;14340:12;14299:55;14386:2;14373:16;14409:60;14425:43;14465:2;14425:43;:::i;14409:60::-;14503:15;;;14585:1;14581:10;;;;14573:19;;14569:28;;;14534:12;;;;14609:19;;;14606:39;;;14641:1;14638;14631:12;14606:39;14665:11;;;;14685:419;14701:6;14696:3;14693:15;14685:419;;;14783:4;14777:3;14768:7;14764:17;14760:28;14757:118;;;14829:1;14858:2;14854;14847:14;14757:118;14901:22;;:::i;:::-;14950:17;;14936:32;;15017:12;;;15004:26;14988:14;;;14981:50;15044:18;;14727:4;14718:14;;;;15082:12;;;;14685:419;;15139:242;15282:2;15267:18;;15315:1;15304:13;;15294:47;;15321:18;;:::i;:::-;15350:25;;;15139:242;:::o;15386:388::-;15463:6;15471;15524:2;15512:9;15503:7;15499:23;15495:32;15492:52;;;15540:1;15537;15530:12;15492:52;15576:9;15563:23;15553:33;;15637:2;15626:9;15622:18;15609:32;15664:18;15656:6;15653:30;15650:50;;;15696:1;15693;15686:12;15650:50;15719:49;15760:7;15751:6;15740:9;15736:22;15719:49;:::i;:::-;15709:59;;;15386:388;;;;;:::o;15779:437::-;15858:1;15854:12;;;;15901;;;15922:61;;15976:4;15968:6;15964:17;15954:27;;15922:61;16029:2;16021:6;16018:14;15998:18;15995:38;15992:218;;-1:-1:-1;;;16063:1:120;16056:88;16167:4;16164:1;16157:15;16195:4;16192:1;16185:15;16474:184;-1:-1:-1;;;16523:1:120;16516:88;16623:4;16620:1;16613:15;16647:4;16644:1;16637:15;16663:128;16730:9;;;16751:11;;;16748:37;;;16765:18;;:::i;17169:184::-;-1:-1:-1;;;17218:1:120;17211:88;17318:4;17315:1;17308:15;17342:4;17339:1;17332:15;17358:274;17398:1;17424;17414:189;;-1:-1:-1;;;17456:1:120;17449:88;17560:4;17557:1;17550:15;17588:4;17585:1;17578:15;17414:189;-1:-1:-1;17617:9:120;;17358:274::o;17637:168::-;17710:9;;;17741;;17758:15;;;17752:22;;17738:37;17728:71;;17779:18;;:::i;17810:125::-;17875:9;;;17896:10;;;17893:36;;;17909:18;;:::i;18272:245::-;18339:6;18392:2;18380:9;18371:7;18367:23;18363:32;18360:52;;;18408:1;18405;18398:12;18360:52;18440:9;18434:16;18459:28;18481:5;18459:28;:::i;18522:184::-;18592:6;18645:2;18633:9;18624:7;18620:23;18616:32;18613:52;;;18661:1;18658;18651:12;18613:52;-1:-1:-1;18684:16:120;;18522:184;-1:-1:-1;18522:184:120:o;18711:157::-;18800:13;;18842:1;18832:12;;18822:40;;18858:1;18855;18848:12;18822:40;18711:157;;;:::o;18873:156::-;18961:13;;19003:1;18993:12;;18983:40;;19019:1;19016;19009:12;19034:420;19109:5;19157:4;19145:9;19140:3;19136:19;19132:30;19129:50;;;19175:1;19172;19165:12;19129:50;19208:2;19202:9;19250:4;19242:6;19238:17;19321:6;19309:10;19306:22;19285:18;19273:10;19270:34;19267:62;19264:88;;;19332:18;;:::i;:::-;19368:2;19361:22;19431:16;;19416:32;;-1:-1:-1;19401:6:120;19034:420;-1:-1:-1;19034:420:120:o;19459:1079::-;19564:6;19595:3;19639:2;19627:9;19618:7;19614:23;19610:32;19607:52;;;19655:1;19652;19645:12;19607:52;19688:2;19682:9;19718:15;;;;19763:18;19748:34;;19784:22;;;19745:62;19742:88;;;19810:18;;:::i;:::-;19850:10;19846:2;19839:22;19889:9;19883:16;19870:29;;19908:31;19933:5;19908:31;:::i;:::-;19963:5;19955:6;19948:21;20023:2;20012:9;20008:18;20002:25;19997:2;19989:6;19985:15;19978:50;20082:2;20071:9;20067:18;20061:25;20056:2;20048:6;20044:15;20037:50;20141:2;20130:9;20126:18;20120:25;20115:2;20107:6;20103:15;20096:50;20201:3;20190:9;20186:19;20180:26;20174:3;20166:6;20162:16;20155:52;20241:60;20296:3;20285:9;20281:19;20241:60;:::i;:::-;20235:3;20227:6;20223:16;20216:86;20336:59;20390:3;20379:9;20375:19;20336:59;:::i;:::-;20330:3;20322:6;20318:16;20311:85;20430:76;20498:7;20492:3;20481:9;20477:19;20430:76;:::i;:::-;20424:3;20412:16;;20405:102;20416:6;19459:1079;-1:-1:-1;;;;19459:1079:120:o;20543:933::-;20733:4;20775:3;20764:9;20760:19;20752:27;;20806:6;20795:9;20788:25;-1:-1:-1;;;;;20859:6:120;20853:13;20849:62;20844:2;20833:9;20829:18;20822:90;20966:2;20958:6;20954:15;20948:22;20943:2;20932:9;20928:18;20921:50;21025:2;21017:6;21013:15;21007:22;21002:2;20991:9;20987:18;20980:50;21085:2;21077:6;21073:15;21067:22;21061:3;21050:9;21046:19;21039:51;21145:3;21137:6;21133:16;21127:23;21121:3;21110:9;21106:19;21099:52;21198:3;21190:6;21186:16;21180:23;21212:63;21270:3;21259:9;21255:19;21241:12;21212:63;:::i;:::-;;21324:3;21316:6;21312:16;21306:23;21338:64;21397:3;21386:9;21382:19;21366:14;21338:64;:::i;:::-;;21463:3;21455:6;21451:16;21445:23;21439:30;21433:3;21422:9;21418:19;21411:59;20543:933;;;;;:::o;22107:726::-;22173:5;22221:4;22209:9;22204:3;22200:19;22196:30;22193:50;;;22239:1;22236;22229:12;22193:50;22261:22;;:::i;:::-;22252:31;;22312:9;22306:16;22299:5;22292:31;22367:2;22356:9;22352:18;22346:25;22394:18;22386:6;22383:30;22380:50;;;22426:1;22423;22416:12;22380:50;22449:22;;22502:4;22494:13;;22490:23;-1:-1:-1;22480:51:120;;22527:1;22524;22517:12;22480:51;22556:2;22550:9;22581:48;22597:31;22625:2;22597:31;:::i;22581:48::-;22652:2;22645:5;22638:17;22692:3;22687:2;22682;22678;22674:11;22670:20;22667:29;22664:49;;;22709:1;22706;22699:12;22664:49;22722:67;22786:2;22781;22774:5;22770:14;22765:2;22761;22757:11;22722:67;:::i;:::-;22816:2;22805:14;;22798:29;-1:-1:-1;22809:5:120;;22107:726;-1:-1:-1;;;22107:726:120:o;22838:1028::-;22930:6;22983:2;22971:9;22962:7;22958:23;22954:32;22951:52;;;22999:1;22996;22989:12;22951:52;23032:9;23026:16;23061:18;23102:2;23094:6;23091:14;23088:34;;;23118:1;23115;23108:12;23088:34;23141:22;;;;23197:4;23179:16;;;23175:27;23172:47;;;23215:1;23212;23205:12;23172:47;23241:22;;:::i;:::-;23292:2;23286:9;23279:5;23272:24;23334:2;23330;23326:11;23320:18;23347:33;23372:7;23347:33;:::i;:::-;23407:2;23396:14;;23389:31;23458:2;23450:11;;23444:18;23471:33;23444:18;23471:33;:::i;:::-;23531:2;23520:14;;23513:31;23583:2;23575:11;;23569:18;23599:16;;;23596:36;;;23628:1;23625;23618:12;23596:36;23664:65;23721:7;23710:8;23706:2;23702:17;23664:65;:::i;:::-;23659:2;23652:5;23648:14;23641:89;;23777:3;23773:2;23769:12;23763:19;23757:3;23750:5;23746:15;23739:44;23830:3;23826:2;23822:12;23816:19;23810:3;23803:5;23799:15;23792:44;23855:5;23845:15;;;;;22838:1028;;;;:::o;24244:986::-;24347:6;24400:2;24388:9;24379:7;24375:23;24371:32;24368:52;;;24416:1;24413;24406:12;24368:52;24449:9;24443:16;24478:18;24519:2;24511:6;24508:14;24505:34;;;24535:1;24532;24525:12;24505:34;24558:22;;;;24614:4;24596:16;;;24592:27;24589:47;;;24632:1;24629;24622:12;24589:47;24658:22;;:::i;:::-;24709:2;24703:9;24696:5;24689:24;24751:2;24747;24743:11;24737:18;24764:33;24789:7;24764:33;:::i;:::-;24824:2;24813:14;;24806:31;24883:2;24875:11;;;24869:18;24853:14;;;24846:42;24926:2;24918:11;;24912:18;24939:33;24912:18;24939:33;:::i;:::-;24999:2;24988:14;;24981:31;25051:3;25043:12;;25037:19;25068:16;;;25065:36;;;25097:1;25094;25087:12;25065:36;25134:65;25191:7;25180:8;25176:2;25172:17;25134:65;:::i;:::-;25128:3;25117:15;;25110:90;-1:-1:-1;25121:5:120;24244:986;-1:-1:-1;;;;;24244:986:120:o;25235:265::-;25319:6;25372:2;25360:9;25351:7;25347:23;25343:32;25340:52;;;25388:1;25385;25378:12;25340:52;25420:9;25414:16;25439:31;25464:5;25439:31;:::i;25505:135::-;25544:3;25565:17;;;25562:43;;25585:18;;:::i;:::-;-1:-1:-1;25632:1:120;25621:13;;25505:135::o;25771:545::-;25873:2;25868:3;25865:11;25862:448;;;25909:1;25934:5;25930:2;25923:17;25979:4;25975:2;25965:19;26049:2;26037:10;26033:19;26030:1;26026:27;26020:4;26016:38;26085:4;26073:10;26070:20;26067:47;;;-1:-1:-1;26108:4:120;26067:47;26163:2;26158:3;26154:12;26151:1;26147:20;26141:4;26137:31;26127:41;;26218:82;26236:2;26229:5;26226:13;26218:82;;;26281:17;;;26262:1;26251:13;26218:82;;;26222:3;;;25771:545;;;:::o;26492:1352::-;26618:3;26612:10;26645:18;26637:6;26634:30;26631:56;;;26667:18;;:::i;:::-;26696:97;26786:6;26746:38;26778:4;26772:11;26746:38;:::i;:::-;26740:4;26696:97;:::i;:::-;26848:4;;26912:2;26901:14;;26929:1;26924:663;;;;27631:1;27648:6;27645:89;;;-1:-1:-1;27700:19:120;;;27694:26;27645:89;-1:-1:-1;;26449:1:120;26445:11;;;26441:24;26437:29;26427:40;26473:1;26469:11;;;26424:57;27747:81;;26894:944;;26924:663;25718:1;25711:14;;;25755:4;25742:18;;-1:-1:-1;;26960:20:120;;;27078:236;27092:7;27089:1;27086:14;27078:236;;;27181:19;;;27175:26;27160:42;;27273:27;;;;27241:1;27229:14;;;;27108:19;;27078:236;;;27082:3;27342:6;27333:7;27330:19;27327:201;;;27403:19;;;27397:26;-1:-1:-1;;27486:1:120;27482:14;;;27498:3;27478:24;27474:37;27470:42;27455:58;27440:74;;27327:201;-1:-1:-1;;;;;27574:1:120;27558:14;;;27554:22;27541:36;;-1:-1:-1;26492:1352:120:o;28120:273::-;28188:6;28241:2;28229:9;28220:7;28216:23;28212:32;28209:52;;;28257:1;28254;28247:12;28209:52;28289:9;28283:16;28339:4;28332:5;28328:16;28321:5;28318:27;28308:55;;28359:1;28356;28349:12;28398:422;28487:1;28530:5;28487:1;28544:270;28565:7;28555:8;28552:21;28544:270;;;28624:4;28620:1;28616:6;28612:17;28606:4;28603:27;28600:53;;;28633:18;;:::i;:::-;28683:7;28673:8;28669:22;28666:55;;;28703:16;;;;28666:55;28782:22;;;;28742:15;;;;28544:270;;;28548:3;28398:422;;;;;:::o;28825:806::-;28874:5;28904:8;28894:80;;-1:-1:-1;28945:1:120;28959:5;;28894:80;28993:4;28983:76;;-1:-1:-1;29030:1:120;29044:5;;28983:76;29075:4;29093:1;29088:59;;;;29161:1;29156:130;;;;29068:218;;29088:59;29118:1;29109:10;;29132:5;;;29156:130;29193:3;29183:8;29180:17;29177:43;;;29200:18;;:::i;:::-;-1:-1:-1;;29256:1:120;29242:16;;29271:5;;29068:218;;29370:2;29360:8;29357:16;29351:3;29345:4;29342:13;29338:36;29332:2;29322:8;29319:16;29314:2;29308:4;29305:12;29301:35;29298:77;29295:159;;;-1:-1:-1;29407:19:120;;;29439:5;;29295:159;29486:34;29511:8;29505:4;29486:34;:::i;:::-;29556:6;29552:1;29548:6;29544:19;29535:7;29532:32;29529:58;;;29567:18;;:::i;:::-;29605:20;;28825:806;-1:-1:-1;;;28825:806:120:o;29636:131::-;29696:5;29725:36;29752:8;29746:4;29725:36;:::i;30129:184::-;-1:-1:-1;;;30178:1:120;30171:88;30278:4;30275:1;30268:15;30302:4;30299:1;30292:15;30318:1185;30447:6;30478:2;30521;30509:9;30500:7;30496:23;30492:32;30489:52;;;30537:1;30534;30527:12;30489:52;30570:9;30564:16;30603:18;30595:6;30592:30;30589:50;;;30635:1;30632;30625:12;30589:50;30658:22;;30711:4;30703:13;;30699:27;-1:-1:-1;30689:55:120;;30740:1;30737;30730:12;30689:55;30769:2;30763:9;30792:60;30808:43;30848:2;30808:43;:::i;30792:60::-;30886:15;;;30968:1;30964:10;;;;30956:19;;30952:28;;;30917:12;;;;30992:19;;;30989:39;;;31024:1;31021;31014:12;30989:39;31048:11;;;;31068:405;31084:6;31079:3;31076:15;31068:405;;;31166:4;31160:3;31151:7;31147:17;31143:28;31140:118;;;31212:1;31241:2;31237;31230:14;31140:118;31284:22;;:::i;:::-;31333:10;;31319:25;;31386:12;;;31380:19;31364:14;;;31357:43;31413:18;;31110:4;31101:14;;;;31451:12;;;;31068:405;;31508:184;-1:-1:-1;;;31557:1:120;31550:88;31657:4;31654:1;31647:15;31681:4;31678:1;31671:15;31697:220;31846:2;31835:9;31828:21;31809:4;31866:45;31907:2;31896:9;31892:18;31884:6;31866:45;:::i;31922:291::-;32099:2;32088:9;32081:21;32062:4;32119:45;32160:2;32149:9;32145:18;32137:6;32119:45;:::i;:::-;32111:53;;32200:6;32195:2;32184:9;32180:18;32173:34;31922:291;;;;;:::o;32984:216::-;33048:9;;;33076:11;;;33023:3;33106:9;;33134:10;;33130:19;;33159:10;;33151:19;;33127:44;33124:70;;;33174:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "3335": [
        {
          "start": 1138,
          "length": 32
        },
        {
          "start": 6287,
          "length": 32
        },
        {
          "start": 6434,
          "length": 32
        },
        {
          "start": 7083,
          "length": 32
        }
      ],
      "3337": [
        {
          "start": 1502,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "D()": "0f529ba2",
    "MAX_STAKED_PROPOSALS()": "406244d8",
    "NATIVE()": "a0cf0aea",
    "_minThresholdPoints()": "7c6570ba",
    "activatePoints()": "814516ad",
    "allocate(bytes,address)": "ef2920fc",
    "calculateConviction(uint256,uint256,uint256)": "346db8cb",
    "calculateThreshold(uint256)": "59a5db8b",
    "canExecuteProposal(uint256)": "824ea8ed",
    "deactivatePoints()": "1ddf1e23",
    "deactivatePoints(address)": "6453d9c4",
    "decay()": "54fac919",
    "decreasePower(address,uint256)": "2ed04b2b",
    "distribute(address[],bytes,address)": "0a6f0ee9",
    "getAllo()": "15cc481e",
    "getMaxAmount()": "0ba95909",
    "getMaxConviction(uint256)": "950559d7",
    "getMetadata(uint256)": "a574cea4",
    "getPayouts(address[],bytes[])": "b2b878d0",
    "getPointSystem()": "c3292171",
    "getPoolAmount()": "4ab4ba42",
    "getPoolId()": "38fff2d0",
    "getProposal(uint256)": "c7f758a8",
    "getProposalStakedAmount(uint256)": "dc96ff2d",
    "getProposalVoterStake(uint256,address)": "e0dd2c38",
    "getRecipientStatus(address)": "eb11af93",
    "getStrategyId()": "42fda9c7",
    "getTotalVoterStakePct(address)": "bcc5b93b",
    "increasePoolAmount(uint256)": "f5b0dfb7",
    "increasePower(address,uint256)": "782aadff",
    "initialize(uint256,bytes)": "edd146cc",
    "isPoolActive()": "df868ed3",
    "isValidAllocator(address)": "4d31d087",
    "maxRatio()": "76365af7",
    "pointConfig()": "a47ff7e5",
    "pointSystem()": "2dbd6fdd",
    "proposalCounter()": "0c0512e9",
    "proposalType()": "351d9f96",
    "proposals(uint256)": "013cf08b",
    "registerRecipient(bytes,address)": "2bbe0cae",
    "registryCommunity()": "6003e414",
    "setDecay(uint256)": "69fa25c4",
    "setMaxRatio(uint256)": "11f22ae3",
    "setMinThresholdPoints(uint256)": "2cefadbb",
    "setPoolActive(bool)": "b5f620ce",
    "setRegistryCommunity(address)": "058aca44",
    "setWeight(uint256)": "fc1711f2",
    "supportProposal((uint256,int256)[])": "e33add93",
    "supportsInterface(bytes4)": "01ffc9a7",
    "totalEffectiveActivePoints()": "d1e36232",
    "totalPointsActivated()": "aba9ffee",
    "totalStaked()": "817b1cd2",
    "totalVoterStakePct(address)": "5db64b99",
    "updateProposalConviction(uint256)": "1aa91a9e",
    "voterStakedProposals(address,uint256)": "868c57b8",
    "weight()": "a1aab33f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALLOCATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ENDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALREADY_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AMOUNT_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ANCHOR_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ARRAY_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AddressCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountOverMaxRatio\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantIncreaseFixedSystem\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ConvictionUnderMinimumThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_FEE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_METADATA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_REGISTRATION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxPointsReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NONCE_NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IMPLEMENTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PENDING_OWNER\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pointsSupport\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointsBalance\",\"type\":\"uint256\"}],\"name\":\"NotEnoughPointsToSupport\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCommunityAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_INACTIVE\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolAmount\",\"type\":\"uint256\"}],\"name\":\"PoolAmountNotEnough\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolIdCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolIsEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposalDataIsEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposalIdCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalNotActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalNotInList\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ProposalSupportDuplicated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_ALREADY_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"name\":\"RECIPIENT_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_NOT_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RegistryCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_support\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"_result\",\"type\":\"int256\"}],\"name\":\"SupportUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserIsInactive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotInRegistry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decay\",\"type\":\"uint256\"}],\"name\":\"DecayUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"registryCommunity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minThresholdPoints\",\"type\":\"uint256\"},{\"internalType\":\"enum StrategyStruct.ProposalType\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"enum StrategyStruct.PointSystem\",\"name\":\"pointSystem\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct StrategyStruct.PointSystemConfig\",\"name\":\"pointConfig\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct StrategyStruct.InitializeParams\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"InitializedCV\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxRatio\",\"type\":\"uint256\"}],\"name\":\"MaxRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"before\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minThresholdPoints\",\"type\":\"uint256\"}],\"name\":\"MinThresholdPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"PointsDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PoolAmountIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensUnStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsToDecrease\",\"type\":\"uint256\"}],\"name\":\"PowerDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsToIncrease\",\"type\":\"uint256\"}],\"name\":\"PowerIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registryCommunity\",\"type\":\"address\"}],\"name\":\"RegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStakedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"convictionLast\",\"type\":\"uint256\"}],\"name\":\"SupportAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"WeightUpdated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"D\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STAKED_PROPOSALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_minThresholdPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activatePoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timePassed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lastConv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_oldAmount\",\"type\":\"uint256\"}],\"name\":\"calculateConviction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestedAmount\",\"type\":\"uint256\"}],\"name\":\"calculateThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"canExecuteProposal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canBeExecuted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deactivatePoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"deactivatePoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountToUnstake\",\"type\":\"uint256\"}],\"name\":\"decreasePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getMaxConviction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPointSystem\",\"outputs\":[{\"internalType\":\"enum StrategyStruct.PointSystem\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requestedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum StrategyStruct.ProposalStatus\",\"name\":\"proposalStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"blockLast\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"convictionLast\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voterStakedPoints\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getProposalVoterStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getTotalVoterStakePct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountToStake\",\"type\":\"uint256\"}],\"name\":\"increasePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pointConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pointSystem\",\"outputs\":[{\"internalType\":\"enum StrategyStruct.PointSystem\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalType\",\"outputs\":[{\"internalType\":\"enum StrategyStruct.ProposalType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"convictionLast\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requestedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockLast\",\"type\":\"uint256\"},{\"internalType\":\"enum StrategyStruct.ProposalStatus\",\"name\":\"proposalStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCommunity\",\"outputs\":[{\"internalType\":\"contract RegistryCommunity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_decay\",\"type\":\"uint256\"}],\"name\":\"setDecay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxRatio\",\"type\":\"uint256\"}],\"name\":\"setMaxRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minThresholdPoints_\",\"type\":\"uint256\"}],\"name\":\"setMinThresholdPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"setPoolActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryCommunity\",\"type\":\"address\"}],\"name\":\"setRegistryCommunity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"setWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"deltaSupport\",\"type\":\"int256\"}],\"internalType\":\"struct StrategyStruct.ProposalSupport[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"name\":\"supportProposal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalEffectiveActivePoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPointsActivated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalVoterStakePct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"updateProposalConviction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voterStakedProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ANCHOR_ERROR()\":[{\"details\":\"Thrown if the anchor creation fails\"}],\"NONCE_NOT_AVAILABLE()\":[{\"details\":\"Thrown when the nonce passed has been used or not available\"}],\"NOT_PENDING_OWNER()\":[{\"details\":\"Thrown when the 'msg.sender' is not the pending owner on ownership transfer\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"calculateConviction(uint256,uint256,uint256)\":{\"details\":\"Conviction formula: a^t * y(0) + x * (1 - a^t) / (1 - a) Solidity implementation: y = (2^128 * a^t * y0 + x * D * (2^128 - 2^128 * a^t) / (D - aD) + 2^127) / 2^128\",\"params\":{\"_lastConv\":\"Last conviction record\",\"_oldAmount\":\"Amount of tokens staked until now\",\"_timePassed\":\"Number of blocks since last conviction record\"},\"returns\":{\"_0\":\"Current conviction\"}},\"calculateThreshold(uint256)\":{\"details\":\"Formula: \\u03c1 * totalStaked / (1 - a) / (\\u03b2 - requestedAmount / total)**2 For the Solidity implementation we amplify \\u03c1 and \\u03b2 and simplify the formula: weight = \\u03c1 * D maxRatio = \\u03b2 * D decay = a * D threshold = weight * totalStaked * D ** 2 * funds ** 2 / (D - decay) / (maxRatio * funds - requestedAmount * D) ** 2\",\"params\":{\"_requestedAmount\":\"Requested amount of tokens on certain proposal\"},\"returns\":{\"_threshold\":\"Threshold a proposal's conviction should surpass in order to be able to executed it.\"}},\"distribute(address[],bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to distribute to the recipients\",\"_recipientIds\":\"The IDs of the recipients\",\"_sender\":\"The address of the sender\"}},\"getAllo()\":{\"returns\":{\"_0\":\"The Allo contract\"}},\"getPayouts(address[],bytes[])\":{\"returns\":{\"_0\":\"Input the values you would send to distribute(), get the amounts each recipient in the array would receive\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getProposal(uint256)\":{\"details\":\"Get proposal details\",\"params\":{\"_proposalId\":\"Proposal id\"},\"returns\":{\"beneficiary\":\"Proposal beneficiary\",\"blockLast\":\"Last block when conviction was calculated\",\"convictionLast\":\"Last conviction calculated\",\"proposalStatus\":\"Proposal status\",\"requestedAmount\":\"Proposal requested amount\",\"requestedToken\":\"Proposal requested token\",\"stakedAmount\":\"Proposal staked points\",\"submitter\":\"Proposal submitter\",\"threshold\":\"Proposal threshold\"}},\"getProposalVoterStake(uint256,address)\":{\"params\":{\"_proposalId\":\"Proposal id\",\"_voter\":\"Voter address\"},\"returns\":{\"_0\":\"Proposal voter stake\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"details\":\"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\",\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"'true' if the pool is active, otherwise 'false'\"}},\"isValidAllocator(address)\":{\"details\":\"How the allocator is determined is up to the strategy implementation.\",\"params\":{\"_allocator\":\"The address to check if it is a valid allocator for the strategy.\"},\"returns\":{\"_0\":\"'true' if the address is a valid allocator, 'false' otherwise\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"recipientId\":\"The recipientId\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ALLOCATION_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is active.\"}],\"ALLOCATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is not active.\"}],\"ALLOCATION_NOT_ENDED()\":[{\"notice\":\"Thrown when the allocation is not ended.\"}],\"ALREADY_INITIALIZED()\":[{\"notice\":\"Thrown when data is already intialized\"}],\"AMOUNT_MISMATCH()\":[{\"notice\":\"Thrown when the amount of tokens sent does not match the amount of tokens expected\"}],\"ARRAY_MISMATCH()\":[{\"notice\":\"Thrown when two arrays length are not equal\"}],\"INVALID()\":[{\"notice\":\"Thrown as a general error when input / data is invalid\"}],\"INVALID_ADDRESS()\":[{\"notice\":\"Thrown when an invalid address is used\"}],\"INVALID_FEE()\":[{\"notice\":\"Thrown when the fee is below 1e18 which is the fee percentage denominator\"}],\"INVALID_METADATA()\":[{\"notice\":\"Thrown when the metadata is invalid.\"}],\"INVALID_REGISTRATION()\":[{\"notice\":\"Thrown when the registration is invalid.\"}],\"IS_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is approved and should be cloned\"}],\"MISMATCH()\":[{\"notice\":\"Thrown when mismatch in decoding data\"}],\"NOT_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is not approved\"}],\"NOT_ENOUGH_FUNDS()\":[{\"notice\":\"Thrown when not enough funds are available\"}],\"NOT_IMPLEMENTED()\":[{\"notice\":\"Thrown when the function is not implemented\"}],\"NOT_INITIALIZED()\":[{\"notice\":\"Thrown when data is yet to be initialized\"}],\"POOL_ACTIVE()\":[{\"notice\":\"Thrown when a pool is already active\"}],\"POOL_INACTIVE()\":[{\"notice\":\"Thrown when a pool is inactive\"}],\"RECIPIENT_ALREADY_ACCEPTED()\":[{\"notice\":\"Thrown when recipient is already accepted.\"}],\"RECIPIENT_ERROR(address)\":[{\"notice\":\"Thrown when there is an error in recipient.\"}],\"RECIPIENT_NOT_ACCEPTED()\":[{\"notice\":\"Thrown when the recipient is not accepted.\"}],\"REGISTRATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when registration is not active.\"}],\"UNAUTHORIZED()\":[{\"notice\":\"Thrown when user is not authorized\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when address is the zero address\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"},\"allocate(bytes,address)\":{\"notice\":\"Allocates to a recipient.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"Distributes funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the 'Allo' contract.\"},\"getPoolAmount()\":{\"notice\":\"Getter for the 'poolAmount'.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId'.\"},\"getProposalVoterStake(uint256,address)\":{\"notice\":\"Get stake of voter `_voter` on proposal #`_proposalId`\"},\"getRecipientStatus(address)\":{\"notice\":\"Getter for the status of a recipient.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'strategyId'.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the pool amount.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"Getter for whether or not the pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks if the '_allocator' is a valid allocator.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"Registers a recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"pkg/contracts/src/CVStrategy.sol\":\"CVStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/contracts/=lib/allo-v2/lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/allo-v2/lib/v2-core/lib/prb-math/\",\":@prb/test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/\",\":@sablier/v2-core/=lib/allo-v2/lib/v2-core/\",\":ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/\",\":allo-v2-contracts/=lib/allo-v2/contracts/\",\":allo-v2-test/=lib/allo-v2/test/\",\":allo-v2/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/allo-v2/lib/eas-contracts/contracts/\",\":eas-proxy/=lib/allo-v2/lib/eas-proxy/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/allo-v2/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hats-protocol/=lib/allo-v2/lib/hats-protocol/\",\":hedgey-vesting/=lib/allo-v2/lib/hedgey-vesting/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/allo-v2/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/allo-v2/lib/permit2/\",\":prb-math/=lib/allo-v2/lib/v2-core/lib/prb-math/src/\",\":prb-test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/\",\":solady/=lib/allo-v2/lib/solady/\",\":solarray/=lib/allo-v2/lib/v2-core/lib/solarray/src/\",\":solbase/=lib/allo-v2/lib/hats-protocol/lib/solbase/src/\",\":solmate/=lib/allo-v2/lib/permit2/lib/solmate/\",\":superfluid-protocol-monorepo/=lib/allo-v2/lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\",\":utils/=lib/allo-v2/lib/hats-protocol/lib/utils/\",\":v2-core/=lib/allo-v2/lib/v2-core/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0x752bbf7be2275b2d0e6323063775fc5afe3c360a2dae9b879452a42e8b2280ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a41b95501d44b11718ec5df990595335d44bd6bba883e4879bdce35261ee93a7\",\"dweb:/ipfs/QmcRbrYjcibhDqsKJZM3HLceB4Kdd4tKDXqDaaVzbTkza1\"]},\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"lib/allo-v2/contracts/core/libraries/Clone.sol\":{\"keccak256\":\"0xc348b24b7d8a98c4faa5f2aa37ce9264a74f81dbdef1a9bae2eaa125585c3c7e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1335b3ec59ec7e3d12ea7c90b3aa56f4c26e0d44d342f54412933be9d4f16067\",\"dweb:/ipfs/QmXNFo2wCyq9cpvfgbdHvBUQecThFSEoUnMuZNS6WinDrr\"]},\"lib/allo-v2/contracts/core/libraries/Errors.sol\":{\"keccak256\":\"0x114aa83c98eff68576c06a073357e2ead6910e1a4195cf720eb579ef701afa15\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c92fd5843368c9d66f7d0321932c0a9dc0919b292f51bd3aefad066548c622cf\",\"dweb:/ipfs/QmZ8N4tToDEaNh9gSyR2J7JCAGPHQUSrs1iyrmzEDHkHEA\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c\",\"dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn\"]},\"lib/allo-v2/contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a\",\"dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv\"]},\"lib/allo-v2/contracts/core/libraries/Transfer.sol\":{\"keccak256\":\"0xb7b2bb9e47965ba74753f58544fe5f168a28970798720675ca7ba97fb0c79286\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://47968985fb2900f1a930fb53038971bd092a09b71c7247f9fb50253b41db1d11\",\"dweb:/ipfs/QmXYQmJ8jZpiCXKySGZqPmdkSUqvTFpi7Wfd23boTKEYQ5\"]},\"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":{\"keccak256\":\"0x3f1382dc6c35d50545e327e7ed6016f2bd752357d446bd698014073f0b812873\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://99500abcd617fa43f6dde49e2c7802821ceaf54a65a8055cbbf2695ecd107974\",\"dweb:/ipfs/QmUktZkWuu3GCMEijY1fqt7NMy7BzpTvEtcmpB1fuoa7zt\"]},\"lib/allo-v2/lib/openzeppelin-contracts-upgradeable/contracts/proxy/ClonesUpgradeable.sol\":{\"keccak256\":\"0x3d98edeb5d5be8410fca707b73dabe7544d1dd11e35b73dd907c473fe43cc3ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a3fa9fc3aec149b8ad0dd8895277ab11e9244e9d2b7adc8404b22de974fc964\",\"dweb:/ipfs/QmRggzxs1WjuvGJSAKb2Nw5r7P3VDMefCWKTbkNPKRkv2j\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"pkg/contracts/src/CVStrategy.sol\":{\"keccak256\":\"0x12f901125c0ec4cd70fe1a9da182d8b1eb69c6ae554c1e8bd076c4e2f16b9f4c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b34960f66948198d97f37d25d38e31a561874f215f82b87b036071b89f20e346\",\"dweb:/ipfs/QmUuCMdNNF6qi5Zy4pEjTKGJmEJ58Zi5rnzCkAjNMv5j5f\"]},\"pkg/contracts/src/ISafe.sol\":{\"keccak256\":\"0x878a210809bb684c42157a10f3f90350a67d0a4863f130499942b06f0f2c9143\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fa2d71bd427c3415e98a2ee15ff673f3cc61c17f14d7087c5eedc83b55f6b0ef\",\"dweb:/ipfs/QmesVSmJQQzi6ys1cvhQFCJyDXchb736mT5bXks4Yp6Cbj\"]},\"pkg/contracts/src/RegistryCommunity.sol\":{\"keccak256\":\"0x1c576e15a5543c06e92cb45f7162a2aa5dac1a276088ec323f5c0438f69c2e52\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://60cb3de95b895d81666b3899a5d73d620742a5c98558ad9799c0464da7b3ab55\",\"dweb:/ipfs/QmReM4jMH5Vc6gGeo7UtHFruHVnqY2rWaecXr1FwDmA6gE\"]},\"pkg/contracts/src/RegistryFactory.sol\":{\"keccak256\":\"0x888b7f5eb1079f90ccfa0b41d8a970bffd8d4d469f9b31917a58279b358dbda5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://af25fd783de00adf01d1c7caa572801fed0d474306a43b862535b08e65ec10c6\",\"dweb:/ipfs/Qmeb2nEaMQLV86y1CYAAV2c6BYpBDTbpLuC1SigeNjdqLo\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_allo",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALLOCATION_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALLOCATION_NOT_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALLOCATION_NOT_ENDED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALREADY_INITIALIZED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AMOUNT_MISMATCH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ANCHOR_ERROR"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ARRAY_MISMATCH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AddressCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AmountOverMaxRatio"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CantIncreaseFixedSystem"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ConvictionUnderMinimumThreshold"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_FEE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_METADATA"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_REGISTRATION"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IS_APPROVED_STRATEGY"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MISMATCH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxPointsReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NONCE_NOT_AVAILABLE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_APPROVED_STRATEGY"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_ENOUGH_FUNDS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_IMPLEMENTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_INITIALIZED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_PENDING_OWNER"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pointsSupport",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pointsBalance",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotEnoughPointsToSupport"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyCommunityAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "POOL_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "POOL_INACTIVE"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_requestedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_poolAmount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "PoolAmountNotEnough"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolIdCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolIsEmpty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProposalDataIsEmpty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProposalIdCannotBeZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ProposalNotActive"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ProposalNotInList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ProposalSupportDuplicated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RECIPIENT_ALREADY_ACCEPTED"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "RECIPIENT_ERROR"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RECIPIENT_NOT_ACCEPTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "REGISTRATION_NOT_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RegistryCannotBeZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_support",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "_delta",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "_result",
              "type": "int256"
            }
          ],
          "type": "error",
          "name": "SupportUnderflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UNAUTHORIZED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UserCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UserIsInactive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UserNotInRegistry"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZERO_ADDRESS"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Allocated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "decay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DecayUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Distributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipientAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Distributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct StrategyStruct.InitializeParams",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "registryCommunity",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "decay",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minThresholdPoints",
                  "type": "uint256"
                },
                {
                  "internalType": "enum StrategyStruct.ProposalType",
                  "name": "proposalType",
                  "type": "uint8"
                },
                {
                  "internalType": "enum StrategyStruct.PointSystem",
                  "name": "pointSystem",
                  "type": "uint8"
                },
                {
                  "internalType": "struct StrategyStruct.PointSystemConfig",
                  "name": "pointConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InitializedCV",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxRatio",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxRatioUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "before",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "minThresholdPoints",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MinThresholdPointsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PointsDeactivated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolActive",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolAmountIncreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokensUnStaked",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "pointsToDecrease",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PowerDecreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokensStaked",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "pointsToIncrease",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PowerIncreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Registered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "registryCommunity",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RegistryUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalStakedAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "convictionLast",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SupportAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WeightUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "D",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_STAKED_PROPOSALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NATIVE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_minThresholdPoints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activatePoints"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "allocate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_timePassed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_lastConv",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_oldAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateConviction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestedAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateThreshold",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canExecuteProposal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "canBeExecuted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deactivatePoints"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_member",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deactivatePoints"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_member",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amountToUnstake",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreasePower",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_recipientIds",
              "type": "address[]"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distribute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllo",
          "outputs": [
            {
              "internalType": "contract IAllo",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxConviction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMetadata",
          "outputs": [
            {
              "internalType": "struct Metadata",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocol",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "pointer",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getPayouts",
          "outputs": [
            {
              "internalType": "struct IStrategy.PayoutSummary[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipientAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPointSystem",
          "outputs": [
            {
              "internalType": "enum StrategyStruct.PointSystem",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "address",
              "name": "submitter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "requestedToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum StrategyStruct.ProposalStatus",
              "name": "proposalStatus",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "blockLast",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "convictionLast",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voterStakedPoints",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStakedAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_voter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalVoterStake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_recipientId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecipientStatus",
          "outputs": [
            {
              "internalType": "enum IStrategy.Status",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategyId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_voter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalVoterStakePct",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increasePoolAmount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_member",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amountToStake",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increasePower",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isPoolActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_allocator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidAllocator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pointConfig",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pointSystem",
          "outputs": [
            {
              "internalType": "enum StrategyStruct.PointSystem",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalType",
          "outputs": [
            {
              "internalType": "enum StrategyStruct.ProposalType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "convictionLast",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "submitter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "requestedToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockLast",
              "type": "uint256"
            },
            {
              "internalType": "enum StrategyStruct.ProposalStatus",
              "name": "proposalStatus",
              "type": "uint8"
            },
            {
              "internalType": "struct Metadata",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocol",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "pointer",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "registerRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registryCommunity",
          "outputs": [
            {
              "internalType": "contract RegistryCommunity",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_decay",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDecay"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxRatio",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxRatio"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minThresholdPoints_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinThresholdPoints"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_active",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoolActive"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_registryCommunity",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRegistryCommunity"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_weight",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWeight"
        },
        {
          "inputs": [
            {
              "internalType": "struct StrategyStruct.ProposalSupport[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "deltaSupport",
                  "type": "int256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportProposal"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalEffectiveActivePoints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalPointsActivated",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalStaked",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalVoterStakePct",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateProposalConviction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "voterStakedProposals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weight",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allocate(bytes,address)": {
            "details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
            "params": {
              "_data": "The data to use to allocate to the recipient",
              "_sender": "The address of the sender"
            }
          },
          "calculateConviction(uint256,uint256,uint256)": {
            "details": "Conviction formula: a^t * y(0) + x * (1 - a^t) / (1 - a) Solidity implementation: y = (2^128 * a^t * y0 + x * D * (2^128 - 2^128 * a^t) / (D - aD) + 2^127) / 2^128",
            "params": {
              "_lastConv": "Last conviction record",
              "_oldAmount": "Amount of tokens staked until now",
              "_timePassed": "Number of blocks since last conviction record"
            },
            "returns": {
              "_0": "Current conviction"
            }
          },
          "calculateThreshold(uint256)": {
            "details": "Formula: ρ * totalStaked / (1 - a) / (β - requestedAmount / total)**2 For the Solidity implementation we amplify ρ and β and simplify the formula: weight = ρ * D maxRatio = β * D decay = a * D threshold = weight * totalStaked * D ** 2 * funds ** 2 / (D - decay) / (maxRatio * funds - requestedAmount * D) ** 2",
            "params": {
              "_requestedAmount": "Requested amount of tokens on certain proposal"
            },
            "returns": {
              "_threshold": "Threshold a proposal's conviction should surpass in order to be able to executed it."
            }
          },
          "distribute(address[],bytes,address)": {
            "details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
            "params": {
              "_data": "The data to use to distribute to the recipients",
              "_recipientIds": "The IDs of the recipients",
              "_sender": "The address of the sender"
            }
          },
          "getAllo()": {
            "returns": {
              "_0": "The Allo contract"
            }
          },
          "getPayouts(address[],bytes[])": {
            "returns": {
              "_0": "Input the values you would send to distribute(), get the amounts each recipient in the array would receive"
            }
          },
          "getPoolAmount()": {
            "returns": {
              "_0": "The balance of the pool"
            }
          },
          "getPoolId()": {
            "returns": {
              "_0": "The ID of the pool"
            }
          },
          "getProposal(uint256)": {
            "details": "Get proposal details",
            "params": {
              "_proposalId": "Proposal id"
            },
            "returns": {
              "beneficiary": "Proposal beneficiary",
              "blockLast": "Last block when conviction was calculated",
              "convictionLast": "Last conviction calculated",
              "proposalStatus": "Proposal status",
              "requestedAmount": "Proposal requested amount",
              "requestedToken": "Proposal requested token",
              "stakedAmount": "Proposal staked points",
              "submitter": "Proposal submitter",
              "threshold": "Proposal threshold"
            }
          },
          "getProposalVoterStake(uint256,address)": {
            "params": {
              "_proposalId": "Proposal id",
              "_voter": "Voter address"
            },
            "returns": {
              "_0": "Proposal voter stake"
            }
          },
          "getRecipientStatus(address)": {
            "params": {
              "_recipientId": "The ID of the recipient"
            },
            "returns": {
              "_0": "The status of the recipient"
            }
          },
          "getStrategyId()": {
            "returns": {
              "_0": "The ID of the strategy"
            }
          },
          "increasePoolAmount(uint256)": {
            "details": "Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.",
            "params": {
              "_amount": "The amount to increase the pool by"
            }
          },
          "initialize(uint256,bytes)": {
            "params": {
              "_data": "The encoded data",
              "_poolId": "The ID of the pool"
            }
          },
          "isPoolActive()": {
            "returns": {
              "_0": "'true' if the pool is active, otherwise 'false'"
            }
          },
          "isValidAllocator(address)": {
            "details": "How the allocator is determined is up to the strategy implementation.",
            "params": {
              "_allocator": "The address to check if it is a valid allocator for the strategy."
            },
            "returns": {
              "_0": "'true' if the address is a valid allocator, 'false' otherwise"
            }
          },
          "registerRecipient(bytes,address)": {
            "details": "Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.",
            "params": {
              "_data": "The data to use to register the recipient",
              "_sender": "The address of the sender"
            },
            "returns": {
              "recipientId": "The recipientId"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "NATIVE()": {
            "notice": "Address of the native token"
          },
          "allocate(bytes,address)": {
            "notice": "Allocates to a recipient."
          },
          "distribute(address[],bytes,address)": {
            "notice": "Distributes funds (tokens) to recipients."
          },
          "getAllo()": {
            "notice": "Getter for the 'Allo' contract."
          },
          "getPoolAmount()": {
            "notice": "Getter for the 'poolAmount'."
          },
          "getPoolId()": {
            "notice": "Getter for the 'poolId'."
          },
          "getProposalVoterStake(uint256,address)": {
            "notice": "Get stake of voter `_voter` on proposal #`_proposalId`"
          },
          "getRecipientStatus(address)": {
            "notice": "Getter for the status of a recipient."
          },
          "getStrategyId()": {
            "notice": "Getter for the 'strategyId'."
          },
          "increasePoolAmount(uint256)": {
            "notice": "Increases the pool amount."
          },
          "initialize(uint256,bytes)": {
            "notice": "@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."
          },
          "isPoolActive()": {
            "notice": "Getter for whether or not the pool is active."
          },
          "isValidAllocator(address)": {
            "notice": "Checks if the '_allocator' is a valid allocator."
          },
          "registerRecipient(bytes,address)": {
            "notice": "Registers a recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/allo-v2/lib/openzeppelin-contracts/contracts/",
        "@prb/math/=lib/allo-v2/lib/v2-core/lib/prb-math/",
        "@prb/test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/",
        "@sablier/v2-core/=lib/allo-v2/lib/v2-core/",
        "ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/",
        "allo-v2-contracts/=lib/allo-v2/contracts/",
        "allo-v2-test/=lib/allo-v2/test/",
        "allo-v2/=lib/allo-v2/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eas-contracts/=lib/allo-v2/lib/eas-contracts/contracts/",
        "eas-proxy/=lib/allo-v2/lib/eas-proxy/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/allo-v2/lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "hats-protocol/=lib/allo-v2/lib/hats-protocol/",
        "hedgey-vesting/=lib/allo-v2/lib/hedgey-vesting/contracts/",
        "openzeppelin-contracts-upgradeable/=lib/allo-v2/lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/allo-v2/lib/permit2/",
        "prb-math/=lib/allo-v2/lib/v2-core/lib/prb-math/src/",
        "prb-test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/",
        "safe-contracts/=lib/safe-contracts/",
        "solady/=lib/allo-v2/lib/solady/",
        "solarray/=lib/allo-v2/lib/v2-core/lib/solarray/src/",
        "solbase/=lib/allo-v2/lib/hats-protocol/lib/solbase/src/",
        "solmate/=lib/allo-v2/lib/permit2/lib/solmate/",
        "superfluid-protocol-monorepo/=lib/allo-v2/lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/",
        "utils/=lib/allo-v2/lib/hats-protocol/lib/utils/",
        "v2-core/=lib/allo-v2/lib/v2-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "pkg/contracts/src/CVStrategy.sol": "CVStrategy"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/allo-v2/contracts/core/interfaces/IAllo.sol": {
        "keccak256": "0x752bbf7be2275b2d0e6323063775fc5afe3c360a2dae9b879452a42e8b2280ce",
        "urls": [
          "bzz-raw://a41b95501d44b11718ec5df990595335d44bd6bba883e4879bdce35261ee93a7",
          "dweb:/ipfs/QmcRbrYjcibhDqsKJZM3HLceB4Kdd4tKDXqDaaVzbTkza1"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/interfaces/IRegistry.sol": {
        "keccak256": "0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f",
        "urls": [
          "bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e",
          "dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/contracts/core/interfaces/IStrategy.sol": {
        "keccak256": "0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23",
        "urls": [
          "bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487",
          "dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Clone.sol": {
        "keccak256": "0xc348b24b7d8a98c4faa5f2aa37ce9264a74f81dbdef1a9bae2eaa125585c3c7e",
        "urls": [
          "bzz-raw://1335b3ec59ec7e3d12ea7c90b3aa56f4c26e0d44d342f54412933be9d4f16067",
          "dweb:/ipfs/QmXNFo2wCyq9cpvfgbdHvBUQecThFSEoUnMuZNS6WinDrr"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Errors.sol": {
        "keccak256": "0x114aa83c98eff68576c06a073357e2ead6910e1a4195cf720eb579ef701afa15",
        "urls": [
          "bzz-raw://c92fd5843368c9d66f7d0321932c0a9dc0919b292f51bd3aefad066548c622cf",
          "dweb:/ipfs/QmZ8N4tToDEaNh9gSyR2J7JCAGPHQUSrs1iyrmzEDHkHEA"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Metadata.sol": {
        "keccak256": "0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44",
        "urls": [
          "bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c",
          "dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Native.sol": {
        "keccak256": "0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5",
        "urls": [
          "bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a",
          "dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Transfer.sol": {
        "keccak256": "0xb7b2bb9e47965ba74753f58544fe5f168a28970798720675ca7ba97fb0c79286",
        "urls": [
          "bzz-raw://47968985fb2900f1a930fb53038971bd092a09b71c7247f9fb50253b41db1d11",
          "dweb:/ipfs/QmXYQmJ8jZpiCXKySGZqPmdkSUqvTFpi7Wfd23boTKEYQ5"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/strategies/BaseStrategy.sol": {
        "keccak256": "0x3f1382dc6c35d50545e327e7ed6016f2bd752357d446bd698014073f0b812873",
        "urls": [
          "bzz-raw://99500abcd617fa43f6dde49e2c7802821ceaf54a65a8055cbbf2695ecd107974",
          "dweb:/ipfs/QmUktZkWuu3GCMEijY1fqt7NMy7BzpTvEtcmpB1fuoa7zt"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/lib/openzeppelin-contracts-upgradeable/contracts/proxy/ClonesUpgradeable.sol": {
        "keccak256": "0x3d98edeb5d5be8410fca707b73dabe7544d1dd11e35b73dd907c473fe43cc3ae",
        "urls": [
          "bzz-raw://1a3fa9fc3aec149b8ad0dd8895277ab11e9244e9d2b7adc8404b22de974fc964",
          "dweb:/ipfs/QmRggzxs1WjuvGJSAKb2Nw5r7P3VDMefCWKTbkNPKRkv2j"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5",
        "urls": [
          "bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd",
          "dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624",
        "urls": [
          "bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298",
          "dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "pkg/contracts/src/CVStrategy.sol": {
        "keccak256": "0x12f901125c0ec4cd70fe1a9da182d8b1eb69c6ae554c1e8bd076c4e2f16b9f4c",
        "urls": [
          "bzz-raw://b34960f66948198d97f37d25d38e31a561874f215f82b87b036071b89f20e346",
          "dweb:/ipfs/QmUuCMdNNF6qi5Zy4pEjTKGJmEJ58Zi5rnzCkAjNMv5j5f"
        ],
        "license": "AGPL-3.0-only"
      },
      "pkg/contracts/src/ISafe.sol": {
        "keccak256": "0x878a210809bb684c42157a10f3f90350a67d0a4863f130499942b06f0f2c9143",
        "urls": [
          "bzz-raw://fa2d71bd427c3415e98a2ee15ff673f3cc61c17f14d7087c5eedc83b55f6b0ef",
          "dweb:/ipfs/QmesVSmJQQzi6ys1cvhQFCJyDXchb736mT5bXks4Yp6Cbj"
        ],
        "license": "LGPL-3.0-only"
      },
      "pkg/contracts/src/RegistryCommunity.sol": {
        "keccak256": "0x1c576e15a5543c06e92cb45f7162a2aa5dac1a276088ec323f5c0438f69c2e52",
        "urls": [
          "bzz-raw://60cb3de95b895d81666b3899a5d73d620742a5c98558ad9799c0464da7b3ab55",
          "dweb:/ipfs/QmReM4jMH5Vc6gGeo7UtHFruHVnqY2rWaecXr1FwDmA6gE"
        ],
        "license": "AGPL-3.0-only"
      },
      "pkg/contracts/src/RegistryFactory.sol": {
        "keccak256": "0x888b7f5eb1079f90ccfa0b41d8a970bffd8d4d469f9b31917a58279b358dbda5",
        "urls": [
          "bzz-raw://af25fd783de00adf01d1c7caa572801fed0d474306a43b862535b08e65ec10c6",
          "dweb:/ipfs/Qmeb2nEaMQLV86y1CYAAV2c6BYpBDTbpLuC1SigeNjdqLo"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "id": 109
}