{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_allo",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "fallback",
      "stateMutability": "payable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "D",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_STAKED_PROPOSALS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "NATIVE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "PRECISION_SCALE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "_minThresholdPoints",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "activatePoints",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allocate",
      "inputs": [
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "calculateConviction",
      "inputs": [
        {
          "name": "_timePassed",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_lastConv",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_oldAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateThreshold",
      "inputs": [
        {
          "name": "_requestedAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "_threshold",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "canExecuteProposal",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "canBeExecuted",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deactivatePoints",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deactivatePoints",
      "inputs": [
        {
          "name": "_member",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "decay",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decreasePower",
      "inputs": [
        {
          "name": "_member",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amountToUnstake",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "distribute",
      "inputs": [
        {
          "name": "_recipientIds",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getAllo",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAllo"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxAmount",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxConviction",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMetadata",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Metadata",
          "components": [
            {
              "name": "protocol",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "pointer",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPayouts",
      "inputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "",
          "type": "bytes[]",
          "internalType": "bytes[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IStrategy.PayoutSummary[]",
          "components": [
            {
              "name": "recipientAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getPointSystem",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum StrategyStruct.PointSystem"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolAmount",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolId",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getProposal",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "submitter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "beneficiary",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "requestedToken",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "requestedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "stakedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "proposalStatus",
          "type": "uint8",
          "internalType": "enum StrategyStruct.ProposalStatus"
        },
        {
          "name": "blockLast",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "convictionLast",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "threshold",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "voterStakedPoints",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getProposalStakedAmount",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getProposalVoterStake",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_voter",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRecipientStatus",
      "inputs": [
        {
          "name": "_recipientId",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum IStrategy.Status"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategyId",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTotalVoterStakePct",
      "inputs": [
        {
          "name": "_voter",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "increasePoolAmount",
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "increasePower",
      "inputs": [
        {
          "name": "_member",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amountToStake",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "_poolId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isPoolActive",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isValidAllocator",
      "inputs": [
        {
          "name": "_allocator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxRatio",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pointConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "maxAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pointSystem",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum StrategyStruct.PointSystem"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposalCounter",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposalType",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum StrategyStruct.ProposalType"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposals",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "requestedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "stakedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "convictionLast",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "beneficiary",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "submitter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "requestedToken",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "blockLast",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "proposalStatus",
          "type": "uint8",
          "internalType": "enum StrategyStruct.ProposalStatus"
        },
        {
          "name": "metadata",
          "type": "tuple",
          "internalType": "struct Metadata",
          "components": [
            {
              "name": "protocol",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "pointer",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerRecipient",
      "inputs": [
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "recipientId",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "registryCommunity",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract RegistryCommunity"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setDecay",
      "inputs": [
        {
          "name": "_decay",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMaxRatio",
      "inputs": [
        {
          "name": "_maxRatio",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMinThresholdPoints",
      "inputs": [
        {
          "name": "minThresholdPoints_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setPoolActive",
      "inputs": [
        {
          "name": "_active",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRegistryCommunity",
      "inputs": [
        {
          "name": "_registryCommunity",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setWeight",
      "inputs": [
        {
          "name": "_weight",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportProposal",
      "inputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct StrategyStruct.ProposalSupport[]",
          "components": [
            {
              "name": "proposalId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deltaSupport",
              "type": "int256",
              "internalType": "int256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalEffectiveActivePoints",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalPointsActivated",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalStaked",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalVoterStakePct",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "updateProposalConviction",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "voterStakedProposals",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "weight",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "Allocated",
      "inputs": [
        {
          "name": "recipientId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DecayUpdated",
      "inputs": [
        {
          "name": "decay",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Distributed",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "beneficiary",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Distributed",
      "inputs": [
        {
          "name": "recipientId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipientAddress",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "InitializedCV",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct StrategyStruct.InitializeParams",
          "components": [
            {
              "name": "registryCommunity",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "decay",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxRatio",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "weight",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minThresholdPoints",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "proposalType",
              "type": "uint8",
              "internalType": "enum StrategyStruct.ProposalType"
            },
            {
              "name": "pointSystem",
              "type": "uint8",
              "internalType": "enum StrategyStruct.PointSystem"
            },
            {
              "name": "pointConfig",
              "type": "tuple",
              "internalType": "struct StrategyStruct.PointSystemConfig",
              "components": [
                {
                  "name": "maxAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxRatioUpdated",
      "inputs": [
        {
          "name": "maxRatio",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MinThresholdPointsUpdated",
      "inputs": [
        {
          "name": "before",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "minThresholdPoints",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolActive",
      "inputs": [
        {
          "name": "active",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolAmountIncreased",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PowerDecreased",
      "inputs": [
        {
          "name": "member",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "tokensUnStaked",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "pointsToDecrease",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PowerIncreased",
      "inputs": [
        {
          "name": "member",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "tokensStaked",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "pointsToIncrease",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalCreated",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Registered",
      "inputs": [
        {
          "name": "recipientId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SupportAdded",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "totalStakedAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "convictionLast",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WeightUpdated",
      "inputs": [
        {
          "name": "weight",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ALLOCATION_ACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ALLOCATION_NOT_ACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ALLOCATION_NOT_ENDED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ALREADY_INITIALIZED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AMOUNT_MISMATCH",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ANCHOR_ERROR",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ARRAY_MISMATCH",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AddressCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AmountOverMaxRatio",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CantIncreaseFixedSystem",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ConvictionUnderMinimumThreshold",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID_ADDRESS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID_FEE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID_METADATA",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID_REGISTRATION",
      "inputs": []
    },
    {
      "type": "error",
      "name": "IS_APPROVED_STRATEGY",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MISMATCH",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MaxPointsReached",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NONCE_NOT_AVAILABLE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_APPROVED_STRATEGY",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_ENOUGH_FUNDS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_IMPLEMENTED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_INITIALIZED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_PENDING_OWNER",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotEnoughPointsToSupport",
      "inputs": [
        {
          "name": "pointsSupport",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "pointsBalance",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "NotImplemented",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyCommunityAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "POOL_ACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "POOL_INACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PoolIdCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PoolIsEmpty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProposalDataIsEmpty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProposalIdCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProposalNotActive",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ProposalNotInList",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ProposalSupportDuplicated",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "RECIPIENT_ALREADY_ACCEPTED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RECIPIENT_ERROR",
      "inputs": [
        {
          "name": "recipientId",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "RECIPIENT_NOT_ACCEPTED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "REGISTRATION_NOT_ACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RegistryCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SupportUnderflow",
      "inputs": [
        {
          "name": "_support",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_delta",
          "type": "int256",
          "internalType": "int256"
        },
        {
          "name": "_result",
          "type": "int256",
          "internalType": "int256"
        }
      ]
    },
    {
      "type": "error",
      "name": "TokenCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "TokenNotAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UNAUTHORIZED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UserCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UserIsInactive",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UserNotInRegistry",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZERO_ADDRESS",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60c06040526000600c556000600f553480156200001b57600080fd5b5060405162004970380380620049708339810160408190526200003e91620000a6565b604080518082018252600a8152694356537472617465677960b01b6020808301919091526001600160a01b038416608052915183926200008191839101620000d8565b60408051601f19818403018152919052805160209091012060a0525062000128915050565b600060208284031215620000b957600080fd5b81516001600160a01b0381168114620000d157600080fd5b9392505050565b600060208083528351808285015260005b818110156200010757858101830151858201604001528201620000e9565b506000604082860101526040601f19601f8301168501019250505092915050565b60805160a05161480d6200016360003960006105e401526000818161047d01528181611865015281816118f80152611b29015261480d6000f3fe60806040526004361061034a5760003560e01c806376365af7116101b9578063b5f620ce116100f6578063df868ed31161009a578063edd146cc1161006c578063edd146cc14610a20578063ef2920fc14610a40578063f5b0dfb714610a53578063fc1711f214610a7357005b8063df868ed31461099b578063e0dd2c38146109b3578063e33add93146109d3578063eb11af93146109f357005b8063c7f758a8116100d3578063c7f758a81461090a578063d1e3623214610940578063d7050f0714610955578063dc96ff2d1461096b57005b8063b5f620ce1461089c578063bcc5b93b146108bc578063c3292171146108f257005b8063950559d71161015d578063a47ff7e51161013a578063a47ff7e514610815578063a574cea41461082c578063aba9ffee14610859578063b2b878d01461086f57005b8063950559d7146107b7578063a0cf0aea146107d7578063a1aab33f146107ff57005b8063814516ad11610196578063814516ad1461074c578063817b1cd214610761578063824ea8ed14610777578063868c57b81461079757005b806376365af714610700578063782aadff146107165780637c6570ba1461073657005b80632ed04b2b116102875780634d31d0871161022b5780635db64b99116102085780635db64b99146106735780636003e414146106a05780636453d9c4146106c057806369fa25c4146106e057005b80634d31d0871461061d57806354fac9191461063d57806359a5db8b1461065357005b806338fff2d01161026457806338fff2d0146105ab578063406244d8146105c057806342fda9c7146105d55780634ab4ba421461060857005b80632ed04b2b14610544578063346db8cb14610564578063351d9f961461058457005b806311f22ae3116102ee5780631ddf1e23116102cb5780631ddf1e23146104d55780632bbe0cae146104ea5780632cefadbb146104fd5780632dbd6fdd1461051d57005b806311f22ae31461044e57806315cc481e1461046e5780631aa91a9e146104b557005b80630a6f0ee9116103275780630a6f0ee9146103e25780630ba95909146104025780630c0512e9146104215780630f529ba21461043757005b8063013cf08b1461035357806301ffc9a714610392578063058aca44146103c257005b3661035157005b005b34801561035f57600080fd5b5061037361036e36600461381f565b610a93565b6040516103899a999897969594939291906138d9565b60405180910390f35b34801561039e57600080fd5b506103b26103ad36600461394c565b610b9e565b6040519015158152602001610389565b3480156103ce57600080fd5b506103516103dd3660046139a3565b610c37565b3480156103ee57600080fd5b506103516103fd366004613b87565b610c71565b34801561040e57600080fd5b506011545b604051908152602001610389565b34801561042d57600080fd5b50610413600c5481565b34801561044357600080fd5b506104136298968081565b34801561045a57600080fd5b5061035161046936600461381f565b610c91565b34801561047a57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610389565b3480156104c157600080fd5b506104136104d036600461381f565b610cd8565b3480156104e157600080fd5b50610351610d63565b61049d6104f8366004613bff565b610d6e565b34801561050957600080fd5b5061035161051836600461381f565b610d91565b34801561052957600080fd5b506010546105379060ff1681565b6040516103899190613c61565b34801561055057600080fd5b5061041361055f366004613c6f565b610ddd565b34801561057057600080fd5b5061041361057f366004613c9b565b610ea5565b34801561059057600080fd5b50600b5461059e9060ff1681565b6040516103899190613cd7565b3480156105b757600080fd5b50600154610413565b3480156105cc57600080fd5b50610413600a81565b3480156105e157600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610413565b34801561061457600080fd5b50600254610413565b34801561062957600080fd5b506103b26106383660046139a3565b610f4a565b34801561064957600080fd5b5061041360085481565b34801561065f57600080fd5b5061041361066e36600461381f565b610f55565b34801561067f57600080fd5b5061041361068e3660046139a3565b60066020526000908152604090205481565b3480156106ac57600080fd5b5060045461049d906001600160a01b031681565b3480156106cc57600080fd5b506103516106db3660046139a3565b611092565b3480156106ec57600080fd5b506103516106fb36600461381f565b6110a6565b34801561070c57600080fd5b5061041360095481565b34801561072257600080fd5b50610413610731366004613c6f565b6110e5565b34801561074257600080fd5b50610413600f5481565b34801561075857600080fd5b50610351611257565b34801561076d57600080fd5b50610413600d5481565b34801561078357600080fd5b506103b261079236600461381f565b611364565b3480156107a357600080fd5b506104136107b2366004613c6f565b6113c1565b3480156107c357600080fd5b506104136107d236600461381f565b6113f2565b3480156107e357600080fd5b5061049d73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561080b57600080fd5b50610413600a5481565b34801561082157600080fd5b506011546104139081565b34801561083857600080fd5b5061084c61084736600461381f565b61141c565b6040516103899190613ce5565b34801561086557600080fd5b50610413600e5481565b34801561087b57600080fd5b5061088f61088a366004613cf8565b6114fb565b6040516103899190613dcd565b3480156108a857600080fd5b506103516108b7366004613e33565b611516565b3480156108c857600080fd5b506104136108d73660046139a3565b6001600160a01b031660009081526006602052604090205490565b3480156108fe57600080fd5b5060105460ff16610537565b34801561091657600080fd5b5061092a61092536600461381f565b61151f565b6040516103899a99989796959493929190613e50565b34801561094c57600080fd5b50600e54610413565b34801561096157600080fd5b5061041361271081565b34801561097757600080fd5b5061041361098636600461381f565b60009081526005602052604090206002015490565b3480156109a757600080fd5b5060005460ff166103b2565b3480156109bf57600080fd5b506104136109ce366004613eb5565b611621565b3480156109df57600080fd5b506103516109ee366004613eda565b61164c565b3480156109ff57600080fd5b50610a13610a0e3660046139a3565b611665565b6040516103899190613f85565b348015610a2c57600080fd5b50610351610a3b366004613f9f565b611670565b610351610a4e366004613bff565b61179c565b348015610a5f57600080fd5b50610351610a6e36600461381f565b6117ba565b348015610a7f57600080fd5b50610351610a8e36600461381f565b6117e3565b60056020818152600092835260409283902080546001820154600283015460038401546004850154968501546006860154600787015460088801548b51808d01909c52600a890180548d52600b8a018054999d989c979b969a6001600160a01b039889169a968916999890951697939660ff909316959192840191610b1790613fe6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4390613fe6565b8015610b905780601f10610b6557610100808354040283529160200191610b90565b820191906000526020600020905b815481529060010190602001808311610b7357829003601f168201915b50505050508152505090508a565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167ff1801e61000000000000000000000000000000000000000000000000000000001480610c3157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b33610c4181611822565b506004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610c796118ed565b610c81611936565b610c8c838383611972565b505050565b33610c9b81611822565b60098290556040518281527f08e39b387d1f739ce0d2553bb31822392e3f67c62c6c0a215120ab4a6841a8ab906020015b60405180910390a15050565b600081815260056020526040812080548314610d0f5760405163c1d17bef60e01b8152600481018490526024015b60405180910390fd5b6001600882015460ff166004811115610d2a57610d2a613838565b14610d4b576040516344980d8f60e01b815260048101849052602401610d06565b610d59818260020154611c38565b6003015492915050565b610d6c33611c73565b565b6000610d786118ed565b610d80611936565b610d8a8383611d88565b9392505050565b33610d9b81611822565b600f5460408051918252602082018490527f056aedca4e334b6c4bea48715fb0de644811b740894de57a0380d3eb90f2805b910160405180910390a150600f55565b6000610de76120f8565b6000600260105460ff166003811115610e0257610e02613838565b1480610e245750600160105460ff166003811115610e2257610e22613838565b145b15610e30575081610e3d565b610e3a848461213c565b90505b80600e6000828254610e4f9190614030565b9091555050604080516001600160a01b0386168152602081018590529081018290527f70b752f3fadb6ac131c0ece847fcbb6994ec56ed6411595710fd9b29c6ac6cc19060600160405180910390a19392505050565b6000808490506000610ecb629896806080600854901b610ec59190614059565b83612401565b905060806f8000000000000000000000000000000060085462989680610ef19190614030565b610eff84600160801b614030565b610f0c629896808961407b565b610f16919061407b565b610f209190614059565b610f2a888561407b565b610f349190614092565b610f3e9190614092565b901c9695505050505050565b6000610c31826124aa565b60008060025411610f92576040517fed4421ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f9b826124ca565b15610fb957604051630efd728560e21b815260040160405180910390fd5b600254600090610fd2846801000000000000000061407b565b610fdc9190614059565b6298968060095468010000000000000000610ff7919061407b565b6110019190614059565b61100b9190614030565b90506040611018600e5490565b6008546110289062989680614030565b629896806040611038868061407b565b901c629896806080600a54901b61104f9190614059565b6110599190614059565b611063919061407b565b61106d9190614059565b611077919061407b565b901c9150600f54821161108c57600f54610d8a565b50919050565b61109a6120f8565b6110a381611c73565b50565b336110b081611822565b60088290556040518281527f592dcd55d60d892e7fcb3ba105013312e99691cd59f91e15f83cb67cb5a505f290602001610ccc565b60006110ef6120f8565b6000600260105460ff16600381111561110a5761110a613838565b0361111857825b905061116b565b600160105460ff16600381111561113157611131613838565b036111405761111184846124f6565b600360105460ff16600381111561115957611159613838565b0361116b576111688484612661565b90505b6004805460405163011de97360e61b81526001600160a01b03878116938201939093523060248201526000929091169063477a5cc090604401602060405180830381865afa1580156111c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e591906140a5565b905080156112055781600e60008282546111ff9190614092565b90915550505b604080516001600160a01b0387168152602081018690529081018390527f0b9150e1e54346ed3fa36b977cd5d65dca5a649c737c3174a26bddaadd47667a9060600160405180910390a1509392505050565b600480546040517f0d4a8b49000000000000000000000000000000000000000000000000000000008152339281018390523060248201526001600160a01b0390911690630d4a8b4990604401600060405180830381600087803b1580156112bd57600080fd5b505af11580156112d1573d6000803e3d6000fd5b505060048054604051637817ee4f60e01b81526001600160a01b038681169382019390935230602482015291169250637817ee4f9150604401602060405180830381865afa158015611327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134b91906140c2565b600e600082825461135c9190614092565b909155505050565b60008181526005602052604081206002810154829081906113869084906128a9565b91509150816000148015611398575080155b156113a557826003015491505b60006113b48460010154610f55565b9092101595945050505050565b600760205281600052604060002081815481106113dd57600080fd5b90600052602060002001600091509150505481565b6000600854629896806114059190614030565b611412629896808461407b565b610c319190614059565b604080518082019091526000815260606020820152600060056000848152602001908152602001600020905080600a016040518060400160405290816000820154815260200160018201805461147190613fe6565b80601f016020809104026020016040519081016040528092919081815260200182805461149d90613fe6565b80156114ea5780601f106114bf576101008083540402835291602001916114ea565b820191906000526020600020905b8154815290600101906020018083116114cd57829003601f168201915b505050505081525050915050919050565b606060405163d623472560e01b815260040160405180910390fd5b6110a381612901565b6000806000806000806000806000806000600560008d8152602001908152602001600020905080600101546000146115635761155e8160010154610f55565b611566565b60005b92508060050160009054906101000a90046001600160a01b03168160040160009054906101000a90046001600160a01b03168260060160009054906101000a90046001600160a01b0316836001015484600201548560080160009054906101000a900460ff16866007015487600301548a896009016000336001600160a01b03166001600160a01b03168152602001908152602001600020549a509a509a509a509a509a509a509a509a509a50509193959799509193959799565b60008281526005602090815260408083206001600160a01b0385168452600901909152812054610d8a565b60405163d623472560e01b815260040160405180910390fd5b6000610c3182612949565b61167982612969565b60008180602001905181019061168f9190614140565b80519091506001600160a01b03166116ba57604051635df4b1ef60e01b815260040160405180910390fd5b80516004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055602081015160085560408101516009556060810151600a5560a0810151600b805460ff1916600183600281111561172157611721613838565b021790555060c08101516010805460ff1916600183600381111561174757611747613838565b021790555060e0810151516011556080810151600f556040517f11335eebb216b93f04c63826742eacbf3548a7df48a922f8bbd9e205f57807c39061178f90859084906141ef565b60405180910390a1505050565b6117a46118ed565b6117ac611936565b6117b682826129ea565b5050565b6117c26118ed565b80600260008282546117d49190614092565b909155506110a3905081612ad8565b336117ed81611822565b600a8290556040518281527f30ee8206062f283e56a0af2b02138016bf7442ded26ad68a92a18a9dd246fb4990602001610ccc565b6001546040517f29e40d4b00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b0382811660248301527f000000000000000000000000000000000000000000000000000000000000000016906329e40d4b90604401602060405180830381865afa1580156118ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d091906140a5565b6110a35760405163075fd2b160e01b815260040160405180910390fd5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d6c5760405163075fd2b160e01b815260040160405180910390fd5b600154600003610d6c576040517f3da3f98c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008251116119ad576040517fc5f7c4c000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828060200190518101906119c391906140c2565b9050806000036119ff576040517ff881a10d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526005602052604090206001600b5460ff166002811115611a2657611a26613838565b03611c315780548214611a4f5760405163c1d17bef60e01b815260048101839052602401610d06565b6001600882015460ff166004811115611a6a57611a6a613838565b14611a8b576040516344980d8f60e01b815260048101839052602401610d06565b6000611a9683610cd8565b90506000611aa78360010154610f55565b90508082108015611abc575060008360010154115b15611af3576040517fcce7930800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517f068bcd8d0000000000000000000000000000000000000000000000000000000081526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163068bcd8d91611b609160040190815260200190565b600060405180830381865afa158015611b7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ba591908101906142f9565b604081015160048601546001870154929350611bcc926001600160a01b0390911690612b08565b60088401805460ff191660049081179091558401546001850154604080518881526001600160a01b0390931660208401528201527fa7932e9c92f31e1ed56b29d00bbe669a97484dc24de28dd9c8c0429df7f358479060600160405180910390a15050505b5050505050565b600080611c4584846128a9565b91509150816000148015611c57575080155b15611c625750505050565b600784015560039092019190915550565b60048054604051637817ee4f60e01b81526001600160a01b0384811693820193909352306024820152911690637817ee4f90604401602060405180830381865afa158015611cc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce991906140c2565b600e6000828254611cfa9190614030565b9091555050600480546040517f22bcf9990000000000000000000000000000000000000000000000000000000081526001600160a01b03848116938201939093523060248201529116906322bcf99990604401600060405180830381600087803b158015611d6757600080fd5b505af1158015611d7b573d6000803e3d6000fd5b505050506110a381612b4d565b60008083806020019051810190611d9f91906143ad565b8051909150600003611ddd576040517f4e79178600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600b5460ff166002811115611df657611df6613838565b03611fdd5760208101516001600160a01b0316611e3f576040517fe622e04000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608101516001600160a01b0316611e83576040517f596a094c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000306001600160a01b03166315cc481e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ec3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee79190614454565b6001600160a01b031663068bcd8d6001546040518263ffffffff1660e01b8152600401611f1691815260200190565b600060405180830381865afa158015611f33573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f5b91908101906142f9565b604001519050806001600160a01b031682606001516001600160a01b031614611fb0576040517fa29c498600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611fbd82604001516124ca565b15611fdb57604051630efd728560e21b815260040160405180910390fd5b505b6000600c60008154611fee90614471565b9182905550600081815260056020818152604080842085815592830180546001600160a01b038b811673ffffffffffffffffffffffffffffffffffffffff199283161790925588840151600486018054918416918316919091179055606089015160068601805491909316911617905586015160018084019190915560088301805460ff19169091179055436007830155600382019290925560808501518051600a8301908155928101519394509092909190600b8401906120b090826144d8565b505060015460408051918252602082018590527ffcf3b1aa65a464cef2889608f99e8b8c0f680a4be6c2acb9d961c536a5a9294b92500160405180910390a150949350505050565b6004546001600160a01b03163314610d6c576040517faf0916a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048054604080516336d8759760e21b815290516000936012936001600160a01b03169263db61d65c92818301926020928290030181865afa158015612186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121aa9190614454565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612203575060408051601f3d908101601f1916820190925261220091810190614598565b60015b61224a576122456040518060400160405280601581526020017f4572726f722067657474696e6720646563696d616c0000000000000000000000815250612c78565b612250565b60ff1690505b61228f6040518060400160405280601081526020017f5f616d6f756e74546f556e7374616b650000000000000000000000000000000081525084612ce9565b600480546040516316308e2560e11b81526001600160a01b038781169382019390935260009286921690632c611c4a90602401602060405180830381865afa1580156122df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061230391906140c2565b61230d9190614030565b905061234e6040518060400160405280600d81526020017f6e6577546f74616c5374616b650000000000000000000000000000000000000081525082612ce9565b600061236d61235e84600a61469f565b612368908461407b565b612d5c565b60048054604051637817ee4f60e01b81526001600160a01b038a811693820193909352306024820152929350600092849290911690637817ee4f90604401602060405180830381865afa1580156123c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ec91906140c2565b6123f69190614030565b979650505050505050565b6000600160801b83106124565760405162461bcd60e51b815260206004820152601c60248201527f5f612073686f756c64206265206c657373207468616e20325e313238000000006044820152606401610d06565b50600160801b82825b80156124a257806001166000036124845761247a8283612e44565b915060011c61245f565b61248e8383612e44565b925061249b600182614030565b905061245f565b505092915050565b60006001600160a01b038216156124c2576001610c31565b600092915050565b60006124d9629896808361407b565b6002546009546124e9919061407b565b116124c257506001919050565b60008082905061253b6040518060400160405280601281526020017f504f494e545320544f20494e435245415345000000000000000000000000000081525082612ce9565b60048054604051637817ee4f60e01b81526001600160a01b038781169382019390935230602482015260009290911690637817ee4f90604401602060405180830381865afa158015612591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b591906140c2565b90506125f66040518060400160405280600b81526020017f4d454d424552504f57455200000000000000000000000000000000000000000081525082612ce9565b6011546126038383614092565b111561261a57601154612617908290614030565b91505b6126596040518060400160405280601681526020017f504f494e545320544f20494e43524541534520454e440000000000000000000081525083612ce9565b509392505050565b600480546040516316308e2560e11b81526001600160a01b038581169382019390935260009283928592911690632c611c4a90602401602060405180830381865afa1580156126b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126d891906140c2565b6126e29190614092565b60048054604080516336d8759760e21b815290519394506012936001600160a01b039092169263db61d65c9282820192602092908290030181865afa15801561272f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127539190614454565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156127ac575060408051601f3d908101601f191682019092526127a991810190614598565b60015b6127f3576127ee6040518060400160405280601581526020017f4572726f722067657474696e6720646563696d616c0000000000000000000000815250612c78565b6127f9565b60ff1690505b600061281361280983600a61469f565b612368908561407b565b60048054604051637817ee4f60e01b81526001600160a01b038a811693820193909352306024820152929350600092911690637817ee4f90604401602060405180830381865afa15801561286b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288f91906140c2565b9050600061289d8284614030565b98975050505050505050565b60008043905080846007015411156128c3576128c36146ab565b808460070154036128d9575060009050806128fa565b6128f78460070154826128ec9190614030565b856003015485610ea5565b91505b9250929050565b6000805460ff19168215159081179091556040519081527fd94c9bc4d43c51d8dc345a016d8e3d994432fac68e72832e4cf3a616bd8efae0906020015b60405180910390a150565b60006001600160a01b03821615612961576002610c31565b600392915050565b6129716118ed565b600154156129ab576040517f439a74c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000036129e5576040517f7fcce2a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600155565b6129f381612f43565b6004805460405163011de97360e61b81526001600160a01b03848116938201939093523060248201526000929091169063477a5cc090604401602060405180830381865afa158015612a49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a6d91906140a5565b905080612aa6576040517f5fccb67f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083806020019051810190612abc91906146c1565b9050612ac8838261306b565b612ad28382613230565b50505050565b6040518181527f46aeb5d8770fc4474bc2dfa118fd2595f7fb33ce2cbce6f4e5a3dabfe0f763399060200161293e565b7fffffffffffffffffffffffff11111111111111111111111111111111111111126001600160a01b03841601612b4257610c8c8282613654565b610c8c838383613670565b6001600160a01b038116600090815260076020908152604080832080548251818502810185019093528083529192909190830182828015612bad57602002820191906000526020600020905b815481526020019060010190808311612b99575b5050505050905060005b8151811015610c8c576000828281518110612bd457612bd461476c565b602002602001015190506000600560008381526020019081526020016000209050612bfe826136bf565b15612c63576001600160a01b0385166000908152600982016020526040812080549082905560028301805491928392612c38908490614030565b9250508190555080600d6000828254612c519190614030565b90915550612c6190508282611c38565b505b50508080612c7090614471565b915050612bb7565b6110a381604051602401612c8c9190614782565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac000000000000000000000000000000000000000000000000000000001790526136f9565b6117b68282604051602401612cff929190614795565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d0000000000000000000000000000000000000000000000000000000001790526136f9565b600081600003612d6e57506000919050565b60006001612d7b8461371a565b901c6001901b90506001818481612d9457612d94614043565b048201901c90506001818481612dac57612dac614043565b048201901c90506001818481612dc457612dc4614043565b048201901c90506001818481612ddc57612ddc614043565b048201901c90506001818481612df457612df4614043565b048201901c90506001818481612e0c57612e0c614043565b048201901c90506001818481612e2457612e24614043565b048201901c9050610d8a81828581612e3e57612e3e614043565b046137ae565b6000600160801b831115612ec05760405162461bcd60e51b815260206004820152602860248201527f5f612073686f756c64206265206c657373207468616e206f7220657175616c2060448201527f746f20325e3132380000000000000000000000000000000000000000000000006064820152608401610d06565b600160801b8210612f135760405162461bcd60e51b815260206004820152601c60248201527f5f622073686f756c64206265206c657373207468616e20325e313238000000006044820152606401610d06565b60806f80000000000000000000000000000000612f30848661407b565b612f3a9190614092565b901c9392505050565b6001600160a01b038116612f83576040517fd1f2828800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004546001600160a01b0316612fac57604051635df4b1ef60e01b815260040160405180910390fd5b600480546040517fa230c5240000000000000000000000000000000000000000000000000000000081526001600160a01b038481169382019390935291169063a230c52490602401602060405180830381865afa158015613011573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061303591906140a5565b6110a3576040517f6a5cfb6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b82518110156131285782818151811061308a5761308a61476c565b602002602001015160000151600003156131165760008382815181106130b2576130b261476c565b60200260200101516000015190506130c9816136bf565b6130e95760405163c1d17bef60e01b815260048101829052602401610d06565b8382815181106130fb576130fb61476c565b6020026020010151602001518361311291906147b7565b9250505b8061312081614471565b91505061306f565b506001600160a01b03831660009081526006602052604081205461314c90836137c4565b60048054604051637817ee4f60e01b81526001600160a01b0388811693820193909352306024820152929350600092911690637817ee4f90604401602060405180830381865afa1580156131a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131c891906140c2565b90508082111561320e576040517fd64182fe0000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610d06565b506001600160a01b039093166000908152600660205260409020929092555050565b606060005b8251811015612ad25760008382815181106132525761325261476c565b602002602001015160000151905082516000036132ae576040805160018082528183019092529060208083019080368337019050509250808360008151811061329d5761329d61476c565b602002602001018181525050613401565b6000805b845181101561332d57828582815181106132ce576132ce61476c565b60200260200101510361331b576040517fadebb154000000000000000000000000000000000000000000000000000000008152600481018490526024810182905260019250604401610d06565b8061332581614471565b9150506132b2565b50806133ff576000845160016133439190614092565b67ffffffffffffffff81111561335b5761335b6139c0565b604051908082528060200260200182016040528015613384578160200160208202803683370190505b50905060005b85518110156133dc578581815181106133a5576133a561476c565b60200260200101518282815181106133bf576133bf61476c565b6020908102919091010152806133d481614471565b91505061338a565b5082818651815181106133f1576133f161476c565b602090810291909101015293505b505b60008483815181106134155761341561476c565b60209081029190910181015181015160008481526005835260408082206001600160a01b038b1683526009810190945281205491935061345582856137c4565b6001600160a01b038a1660009081526009850160205260408120829055909150805b6001600160a01b038b166000908152600760205260409020548110156134ee5784546001600160a01b038c1660009081526007602052604090208054839081106134c3576134c361476c565b9060005260206000200154036134dc57600191506134ee565b806134e681614471565b915050613477565b5080613524576001600160a01b038a16600090815260076020908152604082208654815460018101835591845291909220909101555b818311613574576135358383614030565b600d60008282546135469190614092565b9091555061355690508383614030565b8460020160008282546135699190614092565b909155506135b89050565b61357e8284614030565b600d600082825461358f9190614030565b9091555061359f90508284614030565b8460020160008282546135b29190614030565b90915550505b83600701546000036135cf5743600785015561363b565b6135d98484611c38565b60028401546003850154604080516001600160a01b038e168152602081018a9052908101859052606081019290925260808201527f0227f642ddcf2042ceaeafadb9d540f432072c00cd4862881667168dcc14710f9060a00160405180910390a15b505050505050808061364c90614471565b915050613235565b60008060008084865af16117b65763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166136b5576390b8ec186000526004601cfd5b6000603452505050565b60008181526005602052604081205415801590610c31575050600090815260056020819052604090912001546001600160a01b0316151590565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600080608083901c1561372f57608092831c92015b604083901c1561374157604092831c92015b602083901c1561375357602092831c92015b601083901c1561376557601092831c92015b600883901c1561377757600892831c92015b600483901c1561378957600492831c92015b600283901c1561379b57600292831c92015b600183901c15610c315760010192915050565b60008183106137bd5781610d8a565b5090919050565b6000806137d183856147b7565b90506000811215610d8a576040517f3bbc7142000000000000000000000000000000000000000000000000000000008152600481018590526024810184905260448101829052606401610d06565b60006020828403121561383157600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6005811061385e5761385e613838565b9052565b60005b8381101561387d578181015183820152602001613865565b50506000910152565b6000815180845261389e816020860160208601613862565b601f01601f19169290920160200192915050565b8051825260006020820151604060208501526138d16040850182613886565b949350505050565b60006101408c83528b60208401528a60408401528960608401526001600160a01b03808a16608085015280891660a085015280881660c0850152508560e084015261392861010084018661384e565b8061012084015261393b818401856138b2565b9d9c50505050505050505050505050565b60006020828403121561395e57600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610d8a57600080fd5b6001600160a01b03811681146110a357600080fd5b6000602082840312156139b557600080fd5b8135610d8a8161398e565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156139f9576139f96139c0565b60405290565b60405160c0810167ffffffffffffffff811182821017156139f9576139f96139c0565b60405160a0810167ffffffffffffffff811182821017156139f9576139f96139c0565b604051601f8201601f1916810167ffffffffffffffff81118282101715613a6e57613a6e6139c0565b604052919050565b600067ffffffffffffffff821115613a9057613a906139c0565b5060051b60200190565b600082601f830112613aab57600080fd5b81356020613ac0613abb83613a76565b613a45565b82815260059290921b84018101918181019086841115613adf57600080fd5b8286015b84811015613b03578035613af68161398e565b8352918301918301613ae3565b509695505050505050565b600067ffffffffffffffff821115613b2857613b286139c0565b50601f01601f191660200190565b600082601f830112613b4757600080fd5b8135613b55613abb82613b0e565b818152846020838601011115613b6a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215613b9c57600080fd5b833567ffffffffffffffff80821115613bb457600080fd5b613bc087838801613a9a565b94506020860135915080821115613bd657600080fd5b50613be386828701613b36565b9250506040840135613bf48161398e565b809150509250925092565b60008060408385031215613c1257600080fd5b823567ffffffffffffffff811115613c2957600080fd5b613c3585828601613b36565b9250506020830135613c468161398e565b809150509250929050565b6004811061385e5761385e613838565b60208101610c318284613c51565b60008060408385031215613c8257600080fd5b8235613c8d8161398e565b946020939093013593505050565b600080600060608486031215613cb057600080fd5b505081359360208301359350604090920135919050565b6003811061385e5761385e613838565b60208101610c318284613cc7565b602081526000610d8a60208301846138b2565b60008060408385031215613d0b57600080fd5b823567ffffffffffffffff80821115613d2357600080fd5b613d2f86838701613a9a565b9350602091508185013581811115613d4657600080fd5b8501601f81018713613d5757600080fd5b8035613d65613abb82613a76565b81815260059190911b82018401908481019089831115613d8457600080fd5b8584015b83811015613dbc57803586811115613da05760008081fd5b613dae8c8983890101613b36565b845250918601918601613d88565b508096505050505050509250929050565b602080825282518282018190526000919060409081850190868401855b82811015613e1857815180516001600160a01b03168552860151868501529284019290850190600101613dea565b5091979650505050505050565b80151581146110a357600080fd5b600060208284031215613e4557600080fd5b8135610d8a81613e25565b6001600160a01b038b811682528a811660208301528916604082015260608101889052608081018790526101408101613e8c60a083018861384e565b8560c08301528460e083015283610100830152826101208301529b9a5050505050505050505050565b60008060408385031215613ec857600080fd5b823591506020830135613c468161398e565b60006020808385031215613eed57600080fd5b823567ffffffffffffffff811115613f0457600080fd5b8301601f81018513613f1557600080fd5b8035613f23613abb82613a76565b81815260069190911b82018301908381019087831115613f4257600080fd5b928401925b828410156123f65760408489031215613f605760008081fd5b613f686139d6565b843581528585013586820152825260409093019290840190613f47565b6020810160078310613f9957613f99613838565b91905290565b60008060408385031215613fb257600080fd5b82359150602083013567ffffffffffffffff811115613fd057600080fd5b613fdc85828601613b36565b9150509250929050565b600181811c90821680613ffa57607f821691505b60208210810361108c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610c3157610c3161401a565b634e487b7160e01b600052601260045260246000fd5b60008261407657634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610c3157610c3161401a565b80820180821115610c3157610c3161401a565b6000602082840312156140b757600080fd5b8151610d8a81613e25565b6000602082840312156140d457600080fd5b5051919050565b8051600381106140ea57600080fd5b919050565b8051600481106140ea57600080fd5b60006020828403121561411057600080fd5b6040516020810181811067ffffffffffffffff82111715614133576141336139c0565b6040529151825250919050565b600061010080838503121561415457600080fd5b6040519081019067ffffffffffffffff82118183101715614177576141776139c0565b81604052835191506141888261398e565b818152602084015160208201526040840151604082015260608401516060820152608084015160808201526141bf60a085016140db565b60a08201526141d060c085016140ef565b60c08201526141e28560e086016140fe565b60e0820152949350505050565b6000610120820190508382526001600160a01b038351166020830152602083015160408301526040830151606083015260608301516080830152608083015160a083015260a083015161424560c0840182613cc7565b5060c083015161425860e0840182613c51565b5060e0830151516101008301529392505050565b60006040828403121561427e57600080fd5b6142866139d6565b905081518152602082015167ffffffffffffffff8111156142a657600080fd5b8201601f810184136142b757600080fd5b80516142c5613abb82613b0e565b8181528560208385010111156142da57600080fd5b6142eb826020830160208601613862565b602084015250909392505050565b60006020828403121561430b57600080fd5b815167ffffffffffffffff8082111561432357600080fd5b9083019060c0828603121561433757600080fd5b61433f6139ff565b8251815260208301516143518161398e565b602082015260408301516143648161398e565b604082015260608301518281111561437b57600080fd5b6143878782860161426c565b6060830152506080830151608082015260a083015160a082015280935050505092915050565b6000602082840312156143bf57600080fd5b815167ffffffffffffffff808211156143d757600080fd5b9083019060a082860312156143eb57600080fd5b6143f3613a22565b8251815260208301516144058161398e565b60208201526040838101519082015260608301516144228161398e565b606082015260808301518281111561443957600080fd5b6144458782860161426c565b60808301525095945050505050565b60006020828403121561446657600080fd5b8151610d8a8161398e565b6000600182016144835761448361401a565b5060010190565b601f821115610c8c57600081815260208120601f850160051c810160208610156144b15750805b601f850160051c820191505b818110156144d0578281556001016144bd565b505050505050565b815167ffffffffffffffff8111156144f2576144f26139c0565b614506816145008454613fe6565b8461448a565b602080601f83116001811461453b57600084156145235750858301515b600019600386901b1c1916600185901b1785556144d0565b600085815260208120601f198616915b8281101561456a5788860151825594840194600190910190840161454b565b50858210156145885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156145aa57600080fd5b815160ff81168114610d8a57600080fd5b600181815b808511156145f65781600019048211156145dc576145dc61401a565b808516156145e957918102915b93841c93908002906145c0565b509250929050565b60008261460d57506001610c31565b8161461a57506000610c31565b8160018114614630576002811461463a57614656565b6001915050610c31565b60ff84111561464b5761464b61401a565b50506001821b610c31565b5060208310610133831016604e8410600b8410161715614679575081810a610c31565b61468383836145bb565b80600019048211156146975761469761401a565b029392505050565b6000610d8a83836145fe565b634e487b7160e01b600052600160045260246000fd5b600060208083850312156146d457600080fd5b825167ffffffffffffffff8111156146eb57600080fd5b8301601f810185136146fc57600080fd5b805161470a613abb82613a76565b81815260069190911b8201830190838101908783111561472957600080fd5b928401925b828410156123f657604084890312156147475760008081fd5b61474f6139d6565b84518152858501518682015282526040909301929084019061472e565b634e487b7160e01b600052603260045260246000fd5b602081526000610d8a6020830184613886565b6040815260006147a86040830185613886565b90508260208301529392505050565b80820182811260008312801582168215821617156124a2576124a261401a56fea26469706673582212202ad1a528fa3f0e1bf7197a1db21606f9e1dd1dd8bd09d87d89dcfb1665b73d5764736f6c63430008130033",
    "sourceMap": "2695:36619:107:-:0;;;5882:1;5849:34;;5999:1;5962:38;;6836:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5210:135:11;;;;;;;;;;;-1:-1:-1;;;5210:135:11;;;;;;;;-1:-1:-1;;;;;5268:19:11;;;;5320:17;;6884:5:107;;5320:17:11;;5210:135;;5320:17;;:::i;:::-;;;;-1:-1:-1;;5320:17:11;;;;;;;;;5310:28;;5320:17;5310:28;;;;5297:41;;-1:-1:-1;2695:36619:107;;-1:-1:-1;;2695:36619:107;14:290:118;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:118;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:118:o;309:548::-;421:4;450:2;479;468:9;461:21;511:6;505:13;554:6;549:2;538:9;534:18;527:34;579:1;589:140;603:6;600:1;597:13;589:140;;;698:14;;;694:23;;688:30;664:17;;;683:2;660:26;653:66;618:10;;589:140;;;593:3;778:1;773:2;764:6;753:9;749:22;745:31;738:42;848:2;841;837:7;832:2;824:6;820:15;816:29;805:9;801:45;797:54;789:62;;;;309:548;;;;:::o;:::-;2695:36619:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061034a5760003560e01c806376365af7116101b9578063b5f620ce116100f6578063df868ed31161009a578063edd146cc1161006c578063edd146cc14610a20578063ef2920fc14610a40578063f5b0dfb714610a53578063fc1711f214610a7357005b8063df868ed31461099b578063e0dd2c38146109b3578063e33add93146109d3578063eb11af93146109f357005b8063c7f758a8116100d3578063c7f758a81461090a578063d1e3623214610940578063d7050f0714610955578063dc96ff2d1461096b57005b8063b5f620ce1461089c578063bcc5b93b146108bc578063c3292171146108f257005b8063950559d71161015d578063a47ff7e51161013a578063a47ff7e514610815578063a574cea41461082c578063aba9ffee14610859578063b2b878d01461086f57005b8063950559d7146107b7578063a0cf0aea146107d7578063a1aab33f146107ff57005b8063814516ad11610196578063814516ad1461074c578063817b1cd214610761578063824ea8ed14610777578063868c57b81461079757005b806376365af714610700578063782aadff146107165780637c6570ba1461073657005b80632ed04b2b116102875780634d31d0871161022b5780635db64b99116102085780635db64b99146106735780636003e414146106a05780636453d9c4146106c057806369fa25c4146106e057005b80634d31d0871461061d57806354fac9191461063d57806359a5db8b1461065357005b806338fff2d01161026457806338fff2d0146105ab578063406244d8146105c057806342fda9c7146105d55780634ab4ba421461060857005b80632ed04b2b14610544578063346db8cb14610564578063351d9f961461058457005b806311f22ae3116102ee5780631ddf1e23116102cb5780631ddf1e23146104d55780632bbe0cae146104ea5780632cefadbb146104fd5780632dbd6fdd1461051d57005b806311f22ae31461044e57806315cc481e1461046e5780631aa91a9e146104b557005b80630a6f0ee9116103275780630a6f0ee9146103e25780630ba95909146104025780630c0512e9146104215780630f529ba21461043757005b8063013cf08b1461035357806301ffc9a714610392578063058aca44146103c257005b3661035157005b005b34801561035f57600080fd5b5061037361036e36600461381f565b610a93565b6040516103899a999897969594939291906138d9565b60405180910390f35b34801561039e57600080fd5b506103b26103ad36600461394c565b610b9e565b6040519015158152602001610389565b3480156103ce57600080fd5b506103516103dd3660046139a3565b610c37565b3480156103ee57600080fd5b506103516103fd366004613b87565b610c71565b34801561040e57600080fd5b506011545b604051908152602001610389565b34801561042d57600080fd5b50610413600c5481565b34801561044357600080fd5b506104136298968081565b34801561045a57600080fd5b5061035161046936600461381f565b610c91565b34801561047a57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610389565b3480156104c157600080fd5b506104136104d036600461381f565b610cd8565b3480156104e157600080fd5b50610351610d63565b61049d6104f8366004613bff565b610d6e565b34801561050957600080fd5b5061035161051836600461381f565b610d91565b34801561052957600080fd5b506010546105379060ff1681565b6040516103899190613c61565b34801561055057600080fd5b5061041361055f366004613c6f565b610ddd565b34801561057057600080fd5b5061041361057f366004613c9b565b610ea5565b34801561059057600080fd5b50600b5461059e9060ff1681565b6040516103899190613cd7565b3480156105b757600080fd5b50600154610413565b3480156105cc57600080fd5b50610413600a81565b3480156105e157600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610413565b34801561061457600080fd5b50600254610413565b34801561062957600080fd5b506103b26106383660046139a3565b610f4a565b34801561064957600080fd5b5061041360085481565b34801561065f57600080fd5b5061041361066e36600461381f565b610f55565b34801561067f57600080fd5b5061041361068e3660046139a3565b60066020526000908152604090205481565b3480156106ac57600080fd5b5060045461049d906001600160a01b031681565b3480156106cc57600080fd5b506103516106db3660046139a3565b611092565b3480156106ec57600080fd5b506103516106fb36600461381f565b6110a6565b34801561070c57600080fd5b5061041360095481565b34801561072257600080fd5b50610413610731366004613c6f565b6110e5565b34801561074257600080fd5b50610413600f5481565b34801561075857600080fd5b50610351611257565b34801561076d57600080fd5b50610413600d5481565b34801561078357600080fd5b506103b261079236600461381f565b611364565b3480156107a357600080fd5b506104136107b2366004613c6f565b6113c1565b3480156107c357600080fd5b506104136107d236600461381f565b6113f2565b3480156107e357600080fd5b5061049d73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561080b57600080fd5b50610413600a5481565b34801561082157600080fd5b506011546104139081565b34801561083857600080fd5b5061084c61084736600461381f565b61141c565b6040516103899190613ce5565b34801561086557600080fd5b50610413600e5481565b34801561087b57600080fd5b5061088f61088a366004613cf8565b6114fb565b6040516103899190613dcd565b3480156108a857600080fd5b506103516108b7366004613e33565b611516565b3480156108c857600080fd5b506104136108d73660046139a3565b6001600160a01b031660009081526006602052604090205490565b3480156108fe57600080fd5b5060105460ff16610537565b34801561091657600080fd5b5061092a61092536600461381f565b61151f565b6040516103899a99989796959493929190613e50565b34801561094c57600080fd5b50600e54610413565b34801561096157600080fd5b5061041361271081565b34801561097757600080fd5b5061041361098636600461381f565b60009081526005602052604090206002015490565b3480156109a757600080fd5b5060005460ff166103b2565b3480156109bf57600080fd5b506104136109ce366004613eb5565b611621565b3480156109df57600080fd5b506103516109ee366004613eda565b61164c565b3480156109ff57600080fd5b50610a13610a0e3660046139a3565b611665565b6040516103899190613f85565b348015610a2c57600080fd5b50610351610a3b366004613f9f565b611670565b610351610a4e366004613bff565b61179c565b348015610a5f57600080fd5b50610351610a6e36600461381f565b6117ba565b348015610a7f57600080fd5b50610351610a8e36600461381f565b6117e3565b60056020818152600092835260409283902080546001820154600283015460038401546004850154968501546006860154600787015460088801548b51808d01909c52600a890180548d52600b8a018054999d989c979b969a6001600160a01b039889169a968916999890951697939660ff909316959192840191610b1790613fe6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4390613fe6565b8015610b905780601f10610b6557610100808354040283529160200191610b90565b820191906000526020600020905b815481529060010190602001808311610b7357829003601f168201915b50505050508152505090508a565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167ff1801e61000000000000000000000000000000000000000000000000000000001480610c3157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b33610c4181611822565b506004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610c796118ed565b610c81611936565b610c8c838383611972565b505050565b33610c9b81611822565b60098290556040518281527f08e39b387d1f739ce0d2553bb31822392e3f67c62c6c0a215120ab4a6841a8ab906020015b60405180910390a15050565b600081815260056020526040812080548314610d0f5760405163c1d17bef60e01b8152600481018490526024015b60405180910390fd5b6001600882015460ff166004811115610d2a57610d2a613838565b14610d4b576040516344980d8f60e01b815260048101849052602401610d06565b610d59818260020154611c38565b6003015492915050565b610d6c33611c73565b565b6000610d786118ed565b610d80611936565b610d8a8383611d88565b9392505050565b33610d9b81611822565b600f5460408051918252602082018490527f056aedca4e334b6c4bea48715fb0de644811b740894de57a0380d3eb90f2805b910160405180910390a150600f55565b6000610de76120f8565b6000600260105460ff166003811115610e0257610e02613838565b1480610e245750600160105460ff166003811115610e2257610e22613838565b145b15610e30575081610e3d565b610e3a848461213c565b90505b80600e6000828254610e4f9190614030565b9091555050604080516001600160a01b0386168152602081018590529081018290527f70b752f3fadb6ac131c0ece847fcbb6994ec56ed6411595710fd9b29c6ac6cc19060600160405180910390a19392505050565b6000808490506000610ecb629896806080600854901b610ec59190614059565b83612401565b905060806f8000000000000000000000000000000060085462989680610ef19190614030565b610eff84600160801b614030565b610f0c629896808961407b565b610f16919061407b565b610f209190614059565b610f2a888561407b565b610f349190614092565b610f3e9190614092565b901c9695505050505050565b6000610c31826124aa565b60008060025411610f92576040517fed4421ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f9b826124ca565b15610fb957604051630efd728560e21b815260040160405180910390fd5b600254600090610fd2846801000000000000000061407b565b610fdc9190614059565b6298968060095468010000000000000000610ff7919061407b565b6110019190614059565b61100b9190614030565b90506040611018600e5490565b6008546110289062989680614030565b629896806040611038868061407b565b901c629896806080600a54901b61104f9190614059565b6110599190614059565b611063919061407b565b61106d9190614059565b611077919061407b565b901c9150600f54821161108c57600f54610d8a565b50919050565b61109a6120f8565b6110a381611c73565b50565b336110b081611822565b60088290556040518281527f592dcd55d60d892e7fcb3ba105013312e99691cd59f91e15f83cb67cb5a505f290602001610ccc565b60006110ef6120f8565b6000600260105460ff16600381111561110a5761110a613838565b0361111857825b905061116b565b600160105460ff16600381111561113157611131613838565b036111405761111184846124f6565b600360105460ff16600381111561115957611159613838565b0361116b576111688484612661565b90505b6004805460405163011de97360e61b81526001600160a01b03878116938201939093523060248201526000929091169063477a5cc090604401602060405180830381865afa1580156111c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e591906140a5565b905080156112055781600e60008282546111ff9190614092565b90915550505b604080516001600160a01b0387168152602081018690529081018390527f0b9150e1e54346ed3fa36b977cd5d65dca5a649c737c3174a26bddaadd47667a9060600160405180910390a1509392505050565b600480546040517f0d4a8b49000000000000000000000000000000000000000000000000000000008152339281018390523060248201526001600160a01b0390911690630d4a8b4990604401600060405180830381600087803b1580156112bd57600080fd5b505af11580156112d1573d6000803e3d6000fd5b505060048054604051637817ee4f60e01b81526001600160a01b038681169382019390935230602482015291169250637817ee4f9150604401602060405180830381865afa158015611327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134b91906140c2565b600e600082825461135c9190614092565b909155505050565b60008181526005602052604081206002810154829081906113869084906128a9565b91509150816000148015611398575080155b156113a557826003015491505b60006113b48460010154610f55565b9092101595945050505050565b600760205281600052604060002081815481106113dd57600080fd5b90600052602060002001600091509150505481565b6000600854629896806114059190614030565b611412629896808461407b565b610c319190614059565b604080518082019091526000815260606020820152600060056000848152602001908152602001600020905080600a016040518060400160405290816000820154815260200160018201805461147190613fe6565b80601f016020809104026020016040519081016040528092919081815260200182805461149d90613fe6565b80156114ea5780601f106114bf576101008083540402835291602001916114ea565b820191906000526020600020905b8154815290600101906020018083116114cd57829003601f168201915b505050505081525050915050919050565b606060405163d623472560e01b815260040160405180910390fd5b6110a381612901565b6000806000806000806000806000806000600560008d8152602001908152602001600020905080600101546000146115635761155e8160010154610f55565b611566565b60005b92508060050160009054906101000a90046001600160a01b03168160040160009054906101000a90046001600160a01b03168260060160009054906101000a90046001600160a01b0316836001015484600201548560080160009054906101000a900460ff16866007015487600301548a896009016000336001600160a01b03166001600160a01b03168152602001908152602001600020549a509a509a509a509a509a509a509a509a509a50509193959799509193959799565b60008281526005602090815260408083206001600160a01b0385168452600901909152812054610d8a565b60405163d623472560e01b815260040160405180910390fd5b6000610c3182612949565b61167982612969565b60008180602001905181019061168f9190614140565b80519091506001600160a01b03166116ba57604051635df4b1ef60e01b815260040160405180910390fd5b80516004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055602081015160085560408101516009556060810151600a5560a0810151600b805460ff1916600183600281111561172157611721613838565b021790555060c08101516010805460ff1916600183600381111561174757611747613838565b021790555060e0810151516011556080810151600f556040517f11335eebb216b93f04c63826742eacbf3548a7df48a922f8bbd9e205f57807c39061178f90859084906141ef565b60405180910390a1505050565b6117a46118ed565b6117ac611936565b6117b682826129ea565b5050565b6117c26118ed565b80600260008282546117d49190614092565b909155506110a3905081612ad8565b336117ed81611822565b600a8290556040518281527f30ee8206062f283e56a0af2b02138016bf7442ded26ad68a92a18a9dd246fb4990602001610ccc565b6001546040517f29e40d4b00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b0382811660248301527f000000000000000000000000000000000000000000000000000000000000000016906329e40d4b90604401602060405180830381865afa1580156118ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d091906140a5565b6110a35760405163075fd2b160e01b815260040160405180910390fd5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d6c5760405163075fd2b160e01b815260040160405180910390fd5b600154600003610d6c576040517f3da3f98c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008251116119ad576040517fc5f7c4c000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000828060200190518101906119c391906140c2565b9050806000036119ff576040517ff881a10d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526005602052604090206001600b5460ff166002811115611a2657611a26613838565b03611c315780548214611a4f5760405163c1d17bef60e01b815260048101839052602401610d06565b6001600882015460ff166004811115611a6a57611a6a613838565b14611a8b576040516344980d8f60e01b815260048101839052602401610d06565b6000611a9683610cd8565b90506000611aa78360010154610f55565b90508082108015611abc575060008360010154115b15611af3576040517fcce7930800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517f068bcd8d0000000000000000000000000000000000000000000000000000000081526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163068bcd8d91611b609160040190815260200190565b600060405180830381865afa158015611b7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ba591908101906142f9565b604081015160048601546001870154929350611bcc926001600160a01b0390911690612b08565b60088401805460ff191660049081179091558401546001850154604080518881526001600160a01b0390931660208401528201527fa7932e9c92f31e1ed56b29d00bbe669a97484dc24de28dd9c8c0429df7f358479060600160405180910390a15050505b5050505050565b600080611c4584846128a9565b91509150816000148015611c57575080155b15611c625750505050565b600784015560039092019190915550565b60048054604051637817ee4f60e01b81526001600160a01b0384811693820193909352306024820152911690637817ee4f90604401602060405180830381865afa158015611cc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce991906140c2565b600e6000828254611cfa9190614030565b9091555050600480546040517f22bcf9990000000000000000000000000000000000000000000000000000000081526001600160a01b03848116938201939093523060248201529116906322bcf99990604401600060405180830381600087803b158015611d6757600080fd5b505af1158015611d7b573d6000803e3d6000fd5b505050506110a381612b4d565b60008083806020019051810190611d9f91906143ad565b8051909150600003611ddd576040517f4e79178600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600b5460ff166002811115611df657611df6613838565b03611fdd5760208101516001600160a01b0316611e3f576040517fe622e04000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608101516001600160a01b0316611e83576040517f596a094c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000306001600160a01b03166315cc481e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ec3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee79190614454565b6001600160a01b031663068bcd8d6001546040518263ffffffff1660e01b8152600401611f1691815260200190565b600060405180830381865afa158015611f33573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f5b91908101906142f9565b604001519050806001600160a01b031682606001516001600160a01b031614611fb0576040517fa29c498600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611fbd82604001516124ca565b15611fdb57604051630efd728560e21b815260040160405180910390fd5b505b6000600c60008154611fee90614471565b9182905550600081815260056020818152604080842085815592830180546001600160a01b038b811673ffffffffffffffffffffffffffffffffffffffff199283161790925588840151600486018054918416918316919091179055606089015160068601805491909316911617905586015160018084019190915560088301805460ff19169091179055436007830155600382019290925560808501518051600a8301908155928101519394509092909190600b8401906120b090826144d8565b505060015460408051918252602082018590527ffcf3b1aa65a464cef2889608f99e8b8c0f680a4be6c2acb9d961c536a5a9294b92500160405180910390a150949350505050565b6004546001600160a01b03163314610d6c576040517faf0916a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048054604080516336d8759760e21b815290516000936012936001600160a01b03169263db61d65c92818301926020928290030181865afa158015612186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121aa9190614454565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612203575060408051601f3d908101601f1916820190925261220091810190614598565b60015b61224a576122456040518060400160405280601581526020017f4572726f722067657474696e6720646563696d616c0000000000000000000000815250612c78565b612250565b60ff1690505b61228f6040518060400160405280601081526020017f5f616d6f756e74546f556e7374616b650000000000000000000000000000000081525084612ce9565b600480546040516316308e2560e11b81526001600160a01b038781169382019390935260009286921690632c611c4a90602401602060405180830381865afa1580156122df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061230391906140c2565b61230d9190614030565b905061234e6040518060400160405280600d81526020017f6e6577546f74616c5374616b650000000000000000000000000000000000000081525082612ce9565b600061236d61235e84600a61469f565b612368908461407b565b612d5c565b60048054604051637817ee4f60e01b81526001600160a01b038a811693820193909352306024820152929350600092849290911690637817ee4f90604401602060405180830381865afa1580156123c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ec91906140c2565b6123f69190614030565b979650505050505050565b6000600160801b83106124565760405162461bcd60e51b815260206004820152601c60248201527f5f612073686f756c64206265206c657373207468616e20325e313238000000006044820152606401610d06565b50600160801b82825b80156124a257806001166000036124845761247a8283612e44565b915060011c61245f565b61248e8383612e44565b925061249b600182614030565b905061245f565b505092915050565b60006001600160a01b038216156124c2576001610c31565b600092915050565b60006124d9629896808361407b565b6002546009546124e9919061407b565b116124c257506001919050565b60008082905061253b6040518060400160405280601281526020017f504f494e545320544f20494e435245415345000000000000000000000000000081525082612ce9565b60048054604051637817ee4f60e01b81526001600160a01b038781169382019390935230602482015260009290911690637817ee4f90604401602060405180830381865afa158015612591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b591906140c2565b90506125f66040518060400160405280600b81526020017f4d454d424552504f57455200000000000000000000000000000000000000000081525082612ce9565b6011546126038383614092565b111561261a57601154612617908290614030565b91505b6126596040518060400160405280601681526020017f504f494e545320544f20494e43524541534520454e440000000000000000000081525083612ce9565b509392505050565b600480546040516316308e2560e11b81526001600160a01b038581169382019390935260009283928592911690632c611c4a90602401602060405180830381865afa1580156126b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126d891906140c2565b6126e29190614092565b60048054604080516336d8759760e21b815290519394506012936001600160a01b039092169263db61d65c9282820192602092908290030181865afa15801561272f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127539190614454565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156127ac575060408051601f3d908101601f191682019092526127a991810190614598565b60015b6127f3576127ee6040518060400160405280601581526020017f4572726f722067657474696e6720646563696d616c0000000000000000000000815250612c78565b6127f9565b60ff1690505b600061281361280983600a61469f565b612368908561407b565b60048054604051637817ee4f60e01b81526001600160a01b038a811693820193909352306024820152929350600092911690637817ee4f90604401602060405180830381865afa15801561286b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288f91906140c2565b9050600061289d8284614030565b98975050505050505050565b60008043905080846007015411156128c3576128c36146ab565b808460070154036128d9575060009050806128fa565b6128f78460070154826128ec9190614030565b856003015485610ea5565b91505b9250929050565b6000805460ff19168215159081179091556040519081527fd94c9bc4d43c51d8dc345a016d8e3d994432fac68e72832e4cf3a616bd8efae0906020015b60405180910390a150565b60006001600160a01b03821615612961576002610c31565b600392915050565b6129716118ed565b600154156129ab576040517f439a74c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000036129e5576040517f7fcce2a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600155565b6129f381612f43565b6004805460405163011de97360e61b81526001600160a01b03848116938201939093523060248201526000929091169063477a5cc090604401602060405180830381865afa158015612a49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a6d91906140a5565b905080612aa6576040517f5fccb67f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083806020019051810190612abc91906146c1565b9050612ac8838261306b565b612ad28382613230565b50505050565b6040518181527f46aeb5d8770fc4474bc2dfa118fd2595f7fb33ce2cbce6f4e5a3dabfe0f763399060200161293e565b7fffffffffffffffffffffffff11111111111111111111111111111111111111126001600160a01b03841601612b4257610c8c8282613654565b610c8c838383613670565b6001600160a01b038116600090815260076020908152604080832080548251818502810185019093528083529192909190830182828015612bad57602002820191906000526020600020905b815481526020019060010190808311612b99575b5050505050905060005b8151811015610c8c576000828281518110612bd457612bd461476c565b602002602001015190506000600560008381526020019081526020016000209050612bfe826136bf565b15612c63576001600160a01b0385166000908152600982016020526040812080549082905560028301805491928392612c38908490614030565b9250508190555080600d6000828254612c519190614030565b90915550612c6190508282611c38565b505b50508080612c7090614471565b915050612bb7565b6110a381604051602401612c8c9190614782565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac000000000000000000000000000000000000000000000000000000001790526136f9565b6117b68282604051602401612cff929190614795565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d0000000000000000000000000000000000000000000000000000000001790526136f9565b600081600003612d6e57506000919050565b60006001612d7b8461371a565b901c6001901b90506001818481612d9457612d94614043565b048201901c90506001818481612dac57612dac614043565b048201901c90506001818481612dc457612dc4614043565b048201901c90506001818481612ddc57612ddc614043565b048201901c90506001818481612df457612df4614043565b048201901c90506001818481612e0c57612e0c614043565b048201901c90506001818481612e2457612e24614043565b048201901c9050610d8a81828581612e3e57612e3e614043565b046137ae565b6000600160801b831115612ec05760405162461bcd60e51b815260206004820152602860248201527f5f612073686f756c64206265206c657373207468616e206f7220657175616c2060448201527f746f20325e3132380000000000000000000000000000000000000000000000006064820152608401610d06565b600160801b8210612f135760405162461bcd60e51b815260206004820152601c60248201527f5f622073686f756c64206265206c657373207468616e20325e313238000000006044820152606401610d06565b60806f80000000000000000000000000000000612f30848661407b565b612f3a9190614092565b901c9392505050565b6001600160a01b038116612f83576040517fd1f2828800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004546001600160a01b0316612fac57604051635df4b1ef60e01b815260040160405180910390fd5b600480546040517fa230c5240000000000000000000000000000000000000000000000000000000081526001600160a01b038481169382019390935291169063a230c52490602401602060405180830381865afa158015613011573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061303591906140a5565b6110a3576040517f6a5cfb6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b82518110156131285782818151811061308a5761308a61476c565b602002602001015160000151600003156131165760008382815181106130b2576130b261476c565b60200260200101516000015190506130c9816136bf565b6130e95760405163c1d17bef60e01b815260048101829052602401610d06565b8382815181106130fb576130fb61476c565b6020026020010151602001518361311291906147b7565b9250505b8061312081614471565b91505061306f565b506001600160a01b03831660009081526006602052604081205461314c90836137c4565b60048054604051637817ee4f60e01b81526001600160a01b0388811693820193909352306024820152929350600092911690637817ee4f90604401602060405180830381865afa1580156131a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131c891906140c2565b90508082111561320e576040517fd64182fe0000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610d06565b506001600160a01b039093166000908152600660205260409020929092555050565b606060005b8251811015612ad25760008382815181106132525761325261476c565b602002602001015160000151905082516000036132ae576040805160018082528183019092529060208083019080368337019050509250808360008151811061329d5761329d61476c565b602002602001018181525050613401565b6000805b845181101561332d57828582815181106132ce576132ce61476c565b60200260200101510361331b576040517fadebb154000000000000000000000000000000000000000000000000000000008152600481018490526024810182905260019250604401610d06565b8061332581614471565b9150506132b2565b50806133ff576000845160016133439190614092565b67ffffffffffffffff81111561335b5761335b6139c0565b604051908082528060200260200182016040528015613384578160200160208202803683370190505b50905060005b85518110156133dc578581815181106133a5576133a561476c565b60200260200101518282815181106133bf576133bf61476c565b6020908102919091010152806133d481614471565b91505061338a565b5082818651815181106133f1576133f161476c565b602090810291909101015293505b505b60008483815181106134155761341561476c565b60209081029190910181015181015160008481526005835260408082206001600160a01b038b1683526009810190945281205491935061345582856137c4565b6001600160a01b038a1660009081526009850160205260408120829055909150805b6001600160a01b038b166000908152600760205260409020548110156134ee5784546001600160a01b038c1660009081526007602052604090208054839081106134c3576134c361476c565b9060005260206000200154036134dc57600191506134ee565b806134e681614471565b915050613477565b5080613524576001600160a01b038a16600090815260076020908152604082208654815460018101835591845291909220909101555b818311613574576135358383614030565b600d60008282546135469190614092565b9091555061355690508383614030565b8460020160008282546135699190614092565b909155506135b89050565b61357e8284614030565b600d600082825461358f9190614030565b9091555061359f90508284614030565b8460020160008282546135b29190614030565b90915550505b83600701546000036135cf5743600785015561363b565b6135d98484611c38565b60028401546003850154604080516001600160a01b038e168152602081018a9052908101859052606081019290925260808201527f0227f642ddcf2042ceaeafadb9d540f432072c00cd4862881667168dcc14710f9060a00160405180910390a15b505050505050808061364c90614471565b915050613235565b60008060008084865af16117b65763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166136b5576390b8ec186000526004601cfd5b6000603452505050565b60008181526005602052604081205415801590610c31575050600090815260056020819052604090912001546001600160a01b0316151590565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600080608083901c1561372f57608092831c92015b604083901c1561374157604092831c92015b602083901c1561375357602092831c92015b601083901c1561376557601092831c92015b600883901c1561377757600892831c92015b600483901c1561378957600492831c92015b600283901c1561379b57600292831c92015b600183901c15610c315760010192915050565b60008183106137bd5781610d8a565b5090919050565b6000806137d183856147b7565b90506000811215610d8a576040517f3bbc7142000000000000000000000000000000000000000000000000000000008152600481018590526024810184905260448101829052606401610d06565b60006020828403121561383157600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6005811061385e5761385e613838565b9052565b60005b8381101561387d578181015183820152602001613865565b50506000910152565b6000815180845261389e816020860160208601613862565b601f01601f19169290920160200192915050565b8051825260006020820151604060208501526138d16040850182613886565b949350505050565b60006101408c83528b60208401528a60408401528960608401526001600160a01b03808a16608085015280891660a085015280881660c0850152508560e084015261392861010084018661384e565b8061012084015261393b818401856138b2565b9d9c50505050505050505050505050565b60006020828403121561395e57600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610d8a57600080fd5b6001600160a01b03811681146110a357600080fd5b6000602082840312156139b557600080fd5b8135610d8a8161398e565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156139f9576139f96139c0565b60405290565b60405160c0810167ffffffffffffffff811182821017156139f9576139f96139c0565b60405160a0810167ffffffffffffffff811182821017156139f9576139f96139c0565b604051601f8201601f1916810167ffffffffffffffff81118282101715613a6e57613a6e6139c0565b604052919050565b600067ffffffffffffffff821115613a9057613a906139c0565b5060051b60200190565b600082601f830112613aab57600080fd5b81356020613ac0613abb83613a76565b613a45565b82815260059290921b84018101918181019086841115613adf57600080fd5b8286015b84811015613b03578035613af68161398e565b8352918301918301613ae3565b509695505050505050565b600067ffffffffffffffff821115613b2857613b286139c0565b50601f01601f191660200190565b600082601f830112613b4757600080fd5b8135613b55613abb82613b0e565b818152846020838601011115613b6a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215613b9c57600080fd5b833567ffffffffffffffff80821115613bb457600080fd5b613bc087838801613a9a565b94506020860135915080821115613bd657600080fd5b50613be386828701613b36565b9250506040840135613bf48161398e565b809150509250925092565b60008060408385031215613c1257600080fd5b823567ffffffffffffffff811115613c2957600080fd5b613c3585828601613b36565b9250506020830135613c468161398e565b809150509250929050565b6004811061385e5761385e613838565b60208101610c318284613c51565b60008060408385031215613c8257600080fd5b8235613c8d8161398e565b946020939093013593505050565b600080600060608486031215613cb057600080fd5b505081359360208301359350604090920135919050565b6003811061385e5761385e613838565b60208101610c318284613cc7565b602081526000610d8a60208301846138b2565b60008060408385031215613d0b57600080fd5b823567ffffffffffffffff80821115613d2357600080fd5b613d2f86838701613a9a565b9350602091508185013581811115613d4657600080fd5b8501601f81018713613d5757600080fd5b8035613d65613abb82613a76565b81815260059190911b82018401908481019089831115613d8457600080fd5b8584015b83811015613dbc57803586811115613da05760008081fd5b613dae8c8983890101613b36565b845250918601918601613d88565b508096505050505050509250929050565b602080825282518282018190526000919060409081850190868401855b82811015613e1857815180516001600160a01b03168552860151868501529284019290850190600101613dea565b5091979650505050505050565b80151581146110a357600080fd5b600060208284031215613e4557600080fd5b8135610d8a81613e25565b6001600160a01b038b811682528a811660208301528916604082015260608101889052608081018790526101408101613e8c60a083018861384e565b8560c08301528460e083015283610100830152826101208301529b9a5050505050505050505050565b60008060408385031215613ec857600080fd5b823591506020830135613c468161398e565b60006020808385031215613eed57600080fd5b823567ffffffffffffffff811115613f0457600080fd5b8301601f81018513613f1557600080fd5b8035613f23613abb82613a76565b81815260069190911b82018301908381019087831115613f4257600080fd5b928401925b828410156123f65760408489031215613f605760008081fd5b613f686139d6565b843581528585013586820152825260409093019290840190613f47565b6020810160078310613f9957613f99613838565b91905290565b60008060408385031215613fb257600080fd5b82359150602083013567ffffffffffffffff811115613fd057600080fd5b613fdc85828601613b36565b9150509250929050565b600181811c90821680613ffa57607f821691505b60208210810361108c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610c3157610c3161401a565b634e487b7160e01b600052601260045260246000fd5b60008261407657634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610c3157610c3161401a565b80820180821115610c3157610c3161401a565b6000602082840312156140b757600080fd5b8151610d8a81613e25565b6000602082840312156140d457600080fd5b5051919050565b8051600381106140ea57600080fd5b919050565b8051600481106140ea57600080fd5b60006020828403121561411057600080fd5b6040516020810181811067ffffffffffffffff82111715614133576141336139c0565b6040529151825250919050565b600061010080838503121561415457600080fd5b6040519081019067ffffffffffffffff82118183101715614177576141776139c0565b81604052835191506141888261398e565b818152602084015160208201526040840151604082015260608401516060820152608084015160808201526141bf60a085016140db565b60a08201526141d060c085016140ef565b60c08201526141e28560e086016140fe565b60e0820152949350505050565b6000610120820190508382526001600160a01b038351166020830152602083015160408301526040830151606083015260608301516080830152608083015160a083015260a083015161424560c0840182613cc7565b5060c083015161425860e0840182613c51565b5060e0830151516101008301529392505050565b60006040828403121561427e57600080fd5b6142866139d6565b905081518152602082015167ffffffffffffffff8111156142a657600080fd5b8201601f810184136142b757600080fd5b80516142c5613abb82613b0e565b8181528560208385010111156142da57600080fd5b6142eb826020830160208601613862565b602084015250909392505050565b60006020828403121561430b57600080fd5b815167ffffffffffffffff8082111561432357600080fd5b9083019060c0828603121561433757600080fd5b61433f6139ff565b8251815260208301516143518161398e565b602082015260408301516143648161398e565b604082015260608301518281111561437b57600080fd5b6143878782860161426c565b6060830152506080830151608082015260a083015160a082015280935050505092915050565b6000602082840312156143bf57600080fd5b815167ffffffffffffffff808211156143d757600080fd5b9083019060a082860312156143eb57600080fd5b6143f3613a22565b8251815260208301516144058161398e565b60208201526040838101519082015260608301516144228161398e565b606082015260808301518281111561443957600080fd5b6144458782860161426c565b60808301525095945050505050565b60006020828403121561446657600080fd5b8151610d8a8161398e565b6000600182016144835761448361401a565b5060010190565b601f821115610c8c57600081815260208120601f850160051c810160208610156144b15750805b601f850160051c820191505b818110156144d0578281556001016144bd565b505050505050565b815167ffffffffffffffff8111156144f2576144f26139c0565b614506816145008454613fe6565b8461448a565b602080601f83116001811461453b57600084156145235750858301515b600019600386901b1c1916600185901b1785556144d0565b600085815260208120601f198616915b8281101561456a5788860151825594840194600190910190840161454b565b50858210156145885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156145aa57600080fd5b815160ff81168114610d8a57600080fd5b600181815b808511156145f65781600019048211156145dc576145dc61401a565b808516156145e957918102915b93841c93908002906145c0565b509250929050565b60008261460d57506001610c31565b8161461a57506000610c31565b8160018114614630576002811461463a57614656565b6001915050610c31565b60ff84111561464b5761464b61401a565b50506001821b610c31565b5060208310610133831016604e8410600b8410161715614679575081810a610c31565b61468383836145bb565b80600019048211156146975761469761401a565b029392505050565b6000610d8a83836145fe565b634e487b7160e01b600052600160045260246000fd5b600060208083850312156146d457600080fd5b825167ffffffffffffffff8111156146eb57600080fd5b8301601f810185136146fc57600080fd5b805161470a613abb82613a76565b81815260069190911b8201830190838101908783111561472957600080fd5b928401925b828410156123f657604084890312156147475760008081fd5b61474f6139d6565b84518152858501518682015282526040909301929084019061472e565b634e487b7160e01b600052603260045260246000fd5b602081526000610d8a6020830184613886565b6040815260006147a86040830185613886565b90508260208301529392505050565b80820182811260008312801582168215821617156124a2576124a261401a56fea26469706673582212202ad1a528fa3f0e1bf7197a1db21606f9e1dd1dd8bd09d87d89dcfb1665b73d5764736f6c63430008130033",
    "sourceMap": "2695:36619:107:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5460:60;;;;;;;;;;-1:-1:-1;5460:60:107;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;8343:202;;;;;;;;;;-1:-1:-1;8343:202:107;;;;;:::i;:::-;;:::i;:::-;;;2891:14:118;;2884:22;2866:41;;2854:2;2839:18;8343:202:107;2726:187:118;38846:223:107;;;;;;;;;;-1:-1:-1;38846:223:107;;;;;:::i;:::-;;:::i;10705:325:11:-;;;;;;;;;;-1:-1:-1;10705:325:11;;;;;:::i;:::-;;:::i;16675:99:107:-;;;;;;;;;;-1:-1:-1;16746:11:107;:21;16675:99;;;7017:25:118;;;7005:2;6990:18;16675:99:107;6871:177:118;5849:34:107;;;;;;;;;;;;;;;;6171:36;;;;;;;;;;;;6199:8;6171:36;;38536:155;;;;;;;;;;-1:-1:-1;38536:155:107;;;;;:::i;:::-;;:::i;6785:86:11:-;;;;;;;;;;-1:-1:-1;6860:4:11;6785:86;;;-1:-1:-1;;;;;7231:55:118;;;7213:74;;7201:2;7186:18;6785:86:11;7053:240:118;37737:520:107;;;;;;;;;;-1:-1:-1;37737:520:107;;;;;:::i;:::-;;:::i;11993:81::-;;;;;;;;;;;;;:::i;9429:344:11:-;;;;;;:::i;:::-;;:::i;39075:237:107:-;;;;;;;;;;-1:-1:-1;39075:237:107;;;;;:::i;:::-;;:::i;6007:45::-;;;;;;;;;;-1:-1:-1;6007:45:107;;;;;;;;;;;;;;;:::i;13494:681::-;;;;;;;;;;-1:-1:-1;13494:681:107;;;;;:::i;:::-;;:::i;31895:1145::-;;;;;;;;;;-1:-1:-1;31895:1145:107;;;;;:::i;:::-;;:::i;5795:47::-;;;;;;;;;;-1:-1:-1;5795:47:107;;;;;;;;;;;;;;;:::i;6953:92:11:-;;;;;;;;;;-1:-1:-1;7032:6:11;;6953:92;;6537:49:107;;;;;;;;;;;;6584:2;6537:49;;7135:100:11;;;;;;;;;;-1:-1:-1;7218:10:11;7135:100;;7326:108;;;;;;;;;;-1:-1:-1;7417:10:11;;7326:108;;12395:145;;;;;;;;;;-1:-1:-1;12395:145:11;;;;;:::i;:::-;;:::i;5713:20:107:-;;;;;;;;;;;;;;;;33621:1482;;;;;;;;;;-1:-1:-1;33621:1482:107;;;;;:::i;:::-;;:::i;5526:53::-;;;;;;;;;;-1:-1:-1;5526:53:107;;;;;:::i;:::-;;;;;;;;;;;;;;5411:42;;;;;;;;;;-1:-1:-1;5411:42:107;;;;-1:-1:-1;;;;;5411:42:107;;;12080:128;;;;;;;;;;-1:-1:-1;12080:128:107;;;;;:::i;:::-;;:::i;38393:137::-;;;;;;;;;;-1:-1:-1;38393:137:107;;;;;:::i;:::-;;:::i;5739:23::-;;;;;;;;;;;;;;;;12530:958;;;;;;;;;;-1:-1:-1;12530:958:107;;;;;:::i;:::-;;:::i;5962:38::-;;;;;;;;;;;;;;;;11734:253;;;;;;;;;;;;;:::i;5889:26::-;;;;;;;;;;;;;;;;19671:735;;;;;;;;;;-1:-1:-1;19671:735:107;;;;;:::i;:::-;;:::i;5617:57::-;;;;;;;;;;-1:-1:-1;5617:57:107;;;;;:::i;:::-;;:::i;38263:124::-;;;;;;;;;;-1:-1:-1;38263:124:107;;;;;:::i;:::-;;:::i;4412:75:9:-;;;;;;;;;;;;4445:42;4412:75;;5768:21:107;;;;;;;;;;;;;;;;6058:51;;;;;;;;;;-1:-1:-1;6058:51:107;;;;;;24455:198;;;;;;;;;;-1:-1:-1;24455:198:107;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5921:35::-;;;;;;;;;;;;;;;;21045:288;;;;;;;;;;-1:-1:-1;21045:288:107;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;22028:86::-;;;;;;;;;;-1:-1:-1;22028:86:107;;;;;:::i;:::-;;:::i;25250:127::-;;;;;;;;;;-1:-1:-1;25250:127:107;;;;;:::i;:::-;-1:-1:-1;;;;;25344:26:107;25318:7;25344:26;;;:18;:26;;;;;;;25250:127;16780:110;;;;;;;;;;-1:-1:-1;16872:11:107;;;;16780:110;;23411:1038;;;;;;;;;;-1:-1:-1;23411:1038:107;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;36308:112::-;;;;;;;;;;-1:-1:-1;36393:20:107;;36308:112;;6116:49;;;;;;;;;;;;6158:7;6116:49;;25036:145;;;;;;;;;;-1:-1:-1;25036:145:107;;;;;:::i;:::-;25113:7;25139:22;;;:9;:22;;;;;:35;;;;25036:145;7566:101:11;;;;;;;;;;-1:-1:-1;7622:4:11;14479:10;;;7566:101;;24854:176:107;;;;;;;;;;-1:-1:-1;24854:176:107;;;;;:::i;:::-;;:::i;17006:226::-;;;;;;;;;;-1:-1:-1;17006:226:107;;;;;:::i;:::-;;:::i;7823:146:11:-;;;;;;;;;;-1:-1:-1;7823:146:11;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6914:1028:107:-;;;;;;;;;;-1:-1:-1;6914:1028:107;;;;;:::i;:::-;;:::i;10092:220:11:-;;;;;;:::i;:::-;;:::i;8816:197::-;;;;;;;;;;-1:-1:-1;8816:197:11;;;;;:::i;:::-;;:::i;38697:143:107:-;;;;;;;;;;-1:-1:-1;38697:143:107;;;;;:::i;:::-;;:::i;5460:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5460:60:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8343:202::-;8428:4;8451:47;;;8466:32;8451:47;;:87;;-1:-1:-1;952:25:37;937:40;;;;8502:36:107;8444:94;8343:202;-1:-1:-1;;8343:202:107:o;38846:223::-;38929:10;5954:30:11;5976:7;5954:21;:30::i;:::-;-1:-1:-1;38951:17:107::1;:57:::0;;-1:-1:-1;;38951:57:107::1;-1:-1:-1::0;;;;;38951:57:107;;;::::1;::::0;;;::::1;::::0;;38846:223::o;10705:325:11:-;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;10924:42:::2;10936:13;10951:5;10958:7;10924:11;:42::i;:::-;10705:325:::0;;;:::o;38536:155:107:-;38601:10;5954:30:11;5976:7;5954:21;:30::i;:::-;38623:8:107::1;:20:::0;;;38658:26:::1;::::0;7017:25:118;;;38658:26:107::1;::::0;7005:2:118;6990:18;38658:26:107::1;;;;;;;;38536:155:::0;;:::o;37737:520::-;37807:7;37869:21;;;:9;:21;;;;;37905:19;;:33;;37901:100;;37961:29;;-1:-1:-1;;;37961:29:107;;;;;7017:25:118;;;6990:18;;37961:29:107;;;;;;;;37901:100;38042:36;38015:23;;;;;;:63;;;;;;;;:::i;:::-;;38011:130;;38101:29;;-1:-1:-1;;;38101:29:107;;;;;7017:25:118;;;6990:18;;38101:29:107;6871:177:118;38011:130:107;38151:59;38178:8;38188;:21;;;38151:26;:59::i;:::-;38227:23;;;;37737:520;-1:-1:-1;;37737:520:107:o;11993:81::-;12038:29;12056:10;12038:17;:29::i;:::-;11993:81::o;9429:344:11:-;9584:19;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;9683:34:::2;9702:5;9709:7;9683:18;:34::i;:::-;9669:48:::0;9429:344;-1:-1:-1;;;9429:344:11:o;39075:237:107:-;39160:10;5954:30:11;5976:7;5954:21;:30::i;:::-;39213:19:107::1;::::0;39187:67:::1;::::0;;16395:25:118;;;16451:2;16436:18;;16429:34;;;39187:67:107::1;::::0;16368:18:118;39187:67:107::1;;;;;;;-1:-1:-1::0;39264:19:107::1;:41:::0;39075:237::o;13494:681::-;13578:7;13597:23;:21;:23::i;:::-;13676:24;13733:36;13718:11;;;;:51;;;;;;;;:::i;:::-;;:103;;;-1:-1:-1;13788:33:107;13773:11;;;;:48;;;;;;;;:::i;:::-;;13718:103;13714:298;;;-1:-1:-1;13885:16:107;13714:298;;;13952:49;13975:7;13984:16;13952:22;:49::i;:::-;13933:68;;13714:298;14045:16;14021:20;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;14076:59:107;;;-1:-1:-1;;;;;17016:55:118;;16998:74;;17103:2;17088:18;;17081:34;;;17131:18;;;17124:34;;;14076:59:107;;16986:2:118;16971:18;14076:59:107;;;;;;;14152:16;13494:681;-1:-1:-1;;;13494:681:107:o;31895:1145::-;32029:7;32052:9;32064:11;32052:23;;32390:17;32410:27;6199:8;32425:3;32416:5;;:12;;32415:18;;;;:::i;:::-;32435:1;32410:4;:27::i;:::-;32390:47;;33030:3;6419:34;33007:5;;6199:8;33003:9;;;;:::i;:::-;32978:19;32988:9;-1:-1:-1;;;32978:19:107;:::i;:::-;32960:14;6199:8;32960:10;:14;:::i;:::-;:38;;;;:::i;:::-;32959:54;;;;:::i;:::-;32933:21;32945:9;32933;:21;:::i;:::-;32932:82;;;;:::i;:::-;32931:94;;;;:::i;:::-;32930:103;;;31895:1145;-1:-1:-1;;;;;;31895:1145:107:o;12395:145:11:-;12481:4;12504:29;12522:10;12504:17;:29::i;33621:1482:107:-;33696:18;33864:1;33850:10;;:15;33846:66;;33888:13;;;;;;;;;;;;;;33846:66;34352:33;34368:16;34352:15;:33::i;:::-;34348:91;;;34408:20;;-1:-1:-1;;;34408:20:107;;;;;;;;;;;34348:91;34661:10;;34587:13;;34631:26;:16;34650:7;34631:26;:::i;:::-;34630:41;;;;:::i;:::-;6199:8;34604;;34615:7;34604:18;;;;:::i;:::-;34603:24;;;;:::i;:::-;:68;;;;:::i;:::-;34587:84;;34824:2;34782:28;36393:20;;;36308:112;34782:28;34772:5;;34768:9;;6199:8;34768:9;:::i;:::-;6199:8;34755:2;34737:13;34745:5;;34737:13;:::i;:::-;34736:21;;6199:8;34723:3;34713:6;;:13;;34712:19;;;;:::i;:::-;34711:47;;;;:::i;:::-;34710:53;;;;:::i;:::-;34709:69;;;;:::i;:::-;34708:102;;;;:::i;:::-;34694:132;;34681:145;;35042:19;;35029:10;:32;:67;;35077:19;;35029:67;;;-1:-1:-1;35064:10:107;35016:80;-1:-1:-1;33621:1482:107:o;12080:128::-;12142:23;:21;:23::i;:::-;12175:26;12193:7;12175:17;:26::i;:::-;12080:128;:::o;38393:137::-;38452:10;5954:30:11;5976:7;5954:21;:30::i;:::-;38474:5:107::1;:14:::0;;;38503:20:::1;::::0;7017:25:118;;;38503:20:107::1;::::0;7005:2:118;6990:18;38503:20:107::1;6871:177:118::0;12530:958:107;12612:7;12676:23;:21;:23::i;:::-;12709:24;12766:36;12751:11;;;;:51;;;;;;;;:::i;:::-;;12747:441;;12860:14;12837:38;12818:57;;12747:441;;;12911:33;12896:11;;;;:48;;;;;;;;:::i;:::-;;12892:296;;12979:44;12999:7;13008:14;12979:19;:44::i;12892:296::-;13059:36;13044:11;;;;:51;;;;;;;;:::i;:::-;;13040:148;;13130:47;13153:7;13162:14;13130:22;:47::i;:::-;13111:66;;13040:148;13216:17;;;:69;;-1:-1:-1;;;13216:69:107;;-1:-1:-1;;;;;18193:15:118;;;13216:69:107;;;18175:34:118;;;;13279:4:107;18225:18:118;;;18218:43;13197:16:107;;13216:17;;;;:45;;18087:18:118;;13216:69:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13197:88;;13299:11;13295:82;;;13350:16;13326:20;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;13295:82:107;13391:57;;;-1:-1:-1;;;;;17016:55:118;;16998:74;;17103:2;17088:18;;17081:34;;;17131:18;;;17124:34;;;13391:57:107;;16986:2:118;16971:18;13391:57:107;;;;;;;-1:-1:-1;13465:16:107;12530:958;-1:-1:-1;;;12530:958:107:o;11734:253::-;11816:17;;;:65;;;;;11796:10;11816:65;;;18175:34:118;;;11875:4:107;18225:18:118;;;18218:43;-1:-1:-1;;;;;11816:17:107;;;;:42;;18087:18:118;;11816:65:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11915:17:107;;;:65;;-1:-1:-1;;;11915:65:107;;-1:-1:-1;;;;;18193:15:118;;;11915:65:107;;;18175:34:118;;;;11974:4:107;18225:18:118;;;18218:43;11915:17:107;;;-1:-1:-1;11915:42:107;;-1:-1:-1;18087:18:118;;11915:65:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11891:20;;:89;;;;;;;:::i;:::-;;;;-1:-1:-1;;;11734:253:107:o;19671:735::-;19740:18;19813:21;;;:9;:21;;;;;20023;;;;19740:18;;;;19979:66;;19813:21;;19979:33;:66::i;:::-;19919:126;;;;20060:14;20078:1;20060:19;:39;;;;-1:-1:-1;20083:16:107;;20060:39;20056:110;;;20132:8;:23;;;20115:40;;20056:110;20175:17;20195:44;20214:8;:24;;;20195:18;:44::i;:::-;20372:27;;;;;19671:735;-1:-1:-1;;;;;19671:735:107:o;5617:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;38263:124::-;38326:7;38373:5;;6199:8;38369:9;;;;:::i;:::-;38354:10;6199:8;38354:6;:10;:::i;:::-;38353:26;;;;:::i;24455:198::-;-1:-1:-1;;;;;;;;;;;;;;;;;24547:40:107;24590:9;:22;24600:11;24590:22;;;;;;;;;;;24547:65;;24629:8;:17;;24622:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24455:198;;;:::o;21045:288::-;21131:22;21215:16;;-1:-1:-1;;;21215:16:107;;;;;;;;;;;22028:86;22084:23;22099:7;22084:14;:23::i;23411:1038::-;23513:17;23544:19;23577:22;23613:23;23650:20;23684:44;23742:17;23773:22;23809:17;23840:25;23890:40;23933:9;:22;23943:11;23933:22;;;;;;;;;;;23890:65;;23978:8;:24;;;24006:1;23978:29;:80;;24014:44;24033:8;:24;;;24014:18;:44::i;:::-;23978:80;;;24010:1;23978:80;23966:92;;24089:8;:18;;;;;;;;;;-1:-1:-1;;;;;24089:18:107;24121:8;:20;;;;;;;;;;-1:-1:-1;;;;;24121:20:107;24155:8;:23;;;;;;;;;;-1:-1:-1;;;;;24155:23:107;24192:8;:24;;;24230:8;:21;;;24265:8;:23;;;;;;;;;;;;24302:8;:18;;;24334:8;:23;;;24371:9;24394:8;:26;;:38;24421:10;-1:-1:-1;;;;;24394:38:107;-1:-1:-1;;;;;24394:38:107;;;;;;;;;;;;;24068:374;;;;;;;;;;;;;;;;;;;;;23411:1038;;;;;;;;;;;:::o;24854:176::-;24945:7;25510:22;;;:9;:22;;;;;;;;-1:-1:-1;;;;;25510:48:107;;;;:40;;:48;;;;;;24971:52;25383:182;17006:226;17149:16;;-1:-1:-1;;;17149:16:107;;;;;;;;;;;7823:146:11;7904:6;7929:33;7949:12;7929:19;:33::i;6914:1028:107:-;6990:28;7010:7;6990:19;:28::i;:::-;7028:41;7083:5;7072:52;;;;;;;;;;;;:::i;:::-;7479:20;;7028:96;;-1:-1:-1;;;;;;7479:34:107;7475:94;;7536:22;;-1:-1:-1;;;7536:22:107;;;;;;;;;;;7475:94;7617:20;;7579:17;:59;;-1:-1:-1;;7579:59:107;-1:-1:-1;;;;;7579:59:107;;;;;;;;;7656:8;;;;7648:5;:16;7685:11;;;;7674:8;:22;7715:9;;;;7706:6;:18;7749:15;;;;7734:12;:30;;-1:-1:-1;;7734:30:107;-1:-1:-1;7749:15:107;7734:30;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7788:14:107;;;;7774:11;:28;;-1:-1:-1;;7774:28:107;;7788:14;7774:28;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7826:14:107;;;;7812:28;:11;:28;7872:21;;;;7850:19;:43;7909:26;;;;;;7923:7;;7826:2;;7909:26;:::i;:::-;;;;;;;;6980:962;6914:1028;;:::o;10092:220:11:-;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;10240:25:::2;10250:5;10257:7;10240:9;:25::i;:::-;10092:220:::0;;:::o;8816:197::-;5660:16;:14;:16::i;:::-;8956:7:::1;8942:10;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;8973:33:11::1;::::0;-1:-1:-1;8998:7:11;8973:24:::1;:33::i;38697:143:107:-:0;38758:10;5954:30:11;5976:7;5954:21;:30::i;:::-;38780:6:107::1;:16:::0;;;38811:22:::1;::::0;7017:25:118;;;38811:22:107::1;::::0;7005:2:118;6990:18;38811:22:107::1;6871:177:118::0;13122:142:11;13218:6;;13199:35;;;;;;;;21655:25:118;;;;-1:-1:-1;;;;;21716:55:118;;;21696:18;;;21689:83;13199:4:11;:18;;;;21628::118;;13199:35:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13194:63;;13243:14;;-1:-1:-1;;;13243:14:11;;;;;;;;;;;12814:111;12868:10;-1:-1:-1;;;;;12890:4:11;12868:27;;12864:54;;12904:14;;-1:-1:-1;;;12904:14:11;;;;;;;;;;;13771:105;13832:6;;13842:1;13832:11;13828:41;;13852:17;;;;;;;;;;;;;;18185:1480:107;18346:1;18330:5;:12;:17;18326:76;;18370:21;;;;;;;;;;;;;;18326:76;18412:18;18444:5;18433:28;;;;;;;;;;;;:::i;:::-;18412:49;;18476:10;18490:1;18476:15;18472:77;;18514:24;;;;;;;;;;;;;;18472:77;18558:40;18601:21;;;:9;:21;;;;;18653:35;18637:12;;;;:51;;;;;;;;:::i;:::-;;18633:966;;18708:19;;:33;;18704:108;;18768:29;;-1:-1:-1;;;18768:29:107;;;;;7017:25:118;;;6990:18;;18768:29:107;6871:177:118;18704:108:107;18857:36;18830:23;;;;;;:63;;;;;;;;:::i;:::-;;18826:138;;18920:29;;-1:-1:-1;;;18920:29:107;;;;;7017:25:118;;;6990:18;;18920:29:107;6871:177:118;18826:138:107;18978:22;19003:36;19028:10;19003:24;:36::i;:::-;18978:61;;19053:17;19073:44;19092:8;:24;;;19073:18;:44::i;:::-;19053:64;;19153:9;19136:14;:26;:58;;;;;19193:1;19166:8;:24;;;:28;19136:58;19132:137;;;19221:33;;;;;;;;;;;;;;19132:137;19321:6;;19308:20;;;;;19283:22;;-1:-1:-1;;;;;19308:4:107;:12;;;;:20;;;;7017:25:118;;;7005:2;6990:18;;6871:177;19308:20:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19308:20:107;;;;;;;;;;;;:::i;:::-;19359:10;;;;19371:20;;;;;19393:24;;;19283:45;;-1:-1:-1;19343:75:107;;-1:-1:-1;;;;;19371:20:107;;;;19343:15;:75::i;:::-;19433:23;;;:64;;-1:-1:-1;;19433:64:107;19459:38;19433:64;;;;;;19541:20;;;19433:64;19563:24;;;19517:71;;;23749:25:118;;;-1:-1:-1;;;;;19541:20:107;;;23805:2:118;23790:18;;23783:83;23882:18;;23875:34;19517:71:107;;23737:2:118;23722:18;19517:71:107;;;;;;;18690:909;;;18633:966;18271:1394;;18185:1480;;;:::o;36610:396::-;36729:18;36749:19;36772:56;36806:9;36817:10;36772:33;:56::i;:::-;36728:100;;;;36842:10;36856:1;36842:15;:35;;;;-1:-1:-1;36861:16:107;;36842:35;36838:72;;;36893:7;;36610:396;;:::o;36838:72::-;36919:19;;;:33;36962:24;;;;:37;;;;-1:-1:-1;36610:396:107:o;12214:310::-;12301:17;;;:66;;-1:-1:-1;;;12301:66:107;;-1:-1:-1;;;;;18193:15:118;;;12301:66:107;;;18175:34:118;;;;12361:4:107;18225:18:118;;;18218:43;12301:17:107;;;:42;;18087:18:118;;12301:66:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12277:20;;:90;;;;;;;:::i;:::-;;;;-1:-1:-1;;12377:17:107;;;:68;;;;;-1:-1:-1;;;;;18193:15:118;;;12377:68:107;;;18175:34:118;;;;12439:4:107;18225:18:118;;;18218:43;12377:17:107;;;:44;;18087:18:118;;12377:68:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12500:17;12509:7;12500:8;:17::i;9722:2006::-;9814:7;9893:45;9952:5;9941:50;;;;;;;;;;;;:::i;:::-;10106:15;;9893:98;;-1:-1:-1;10106:15:107;:20;10102:78;;10149:20;;;;;;;;;;;;;;10102:78;10272:35;10256:12;;;;:51;;;;;;;;:::i;:::-;;10252:782;;10327:20;;;;-1:-1:-1;;;;;10327:34:107;10323:101;;10388:21;;;;;;;;;;;;;;10323:101;10489:23;;;;-1:-1:-1;;;;;10489:37:107;10485:102;;10553:19;;;;;;;;;;;;;;10485:102;10600:17;10620:4;-1:-1:-1;;;;;10620:12:107;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10620:22:107;;10643:6;;10620:30;;;;;;;;;;;;;7017:25:118;;7005:2;6990:18;;6871:177;10620:30:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10620:30:107;;;;;;;;;;;;:::i;:::-;:36;;;10600:56;;10701:9;-1:-1:-1;;;;;10674:36:107;:8;:23;;;-1:-1:-1;;;;;10674:36:107;;10670:234;;10872:17;;;;;;;;;;;;;;10670:234;10921:41;10937:8;:24;;;10921:15;:41::i;:::-;10917:107;;;10989:20;;-1:-1:-1;;;10989:20:107;;;;;;;;;;;10917:107;10309:725;10252:782;11043:18;11066:15;;11064:17;;;;;:::i;:::-;;;;;-1:-1:-1;11091:33:107;11127:21;;;:9;:21;;;;;;;;11159:25;;;11194:11;;;:21;;-1:-1:-1;;;;;11194:21:107;;;-1:-1:-1;;11194:21:107;;;;;;;11241:20;;;;11225:13;;;:36;;;;;;;;;;;;;;11290:23;;;;11271:16;;;:42;;;;;;;;;;;11343:24;;;-1:-1:-1;11323:17:107;;;:44;;;;11428:16;;;:55;;-1:-1:-1;;11428:55:107;;;;;;11507:12;11493:11;;;:26;-1:-1:-1;11529:16:107;;:20;;;;11608:17;;;;11595:30;;:10;;;:30;;;;;;;11064:17;;-1:-1:-1;11127:21:107;;11608:17;;11595:10;:30;;;;;;;;:::i;:::-;-1:-1:-1;;11657:6:107;;11641:35;;;16395:25:118;;;16451:2;16436:18;;16429:34;;;11641:35:107;;-1:-1:-1;16368:18:118;11641:35:107;;;;;;;-1:-1:-1;11709:10:107;9722:2006;-1:-1:-1;;;;9722:2006:107:o;9234:162::-;9316:17;;-1:-1:-1;;;;;9316:17:107;9294:10;:40;9290:100;;9357:22;;;;;;;;;;;;;;15867:802;16032:17;;;:31;;;-1:-1:-1;;;16032:31:107;;;;15965:7;;16002:2;;-1:-1:-1;;;;;16032:17:107;;:29;;:31;;;;;;;;;;;:17;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16018:56:107;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16018:58:107;;;;;;;;-1:-1:-1;;16018:58:107;;;;;;;;;;;;:::i;:::-;;;16014:208;;16175:36;;;;;;;;;;;;;;;;;;:11;:36::i;:::-;16014:208;;;16126:17;;;-1:-1:-1;16014:208:107;16231:49;;;;;;;;;;;;;;;;;;16263:16;16231:11;:49::i;:::-;16314:17;;;:48;;-1:-1:-1;;;16314:48:107;;-1:-1:-1;;;;;7231:55:118;;;16314:48:107;;;7213:74:118;;;;16290:21:107;;16365:16;;16314:17;;:39;;7186:18:118;;16314:48:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;;;:::i;:::-;16290:91;;16391:43;;;;;;;;;;;;;;;;;;16420:13;16391:11;:43::i;:::-;16444:22;16469:40;16495:13;16501:7;16495:2;:13;:::i;:::-;16479:29;;:13;:29;:::i;:::-;16469:9;:40::i;:::-;16546:17;;;:66;;-1:-1:-1;;;16546:66:107;;-1:-1:-1;;;;;18193:15:118;;;16546:66:107;;;18175:34:118;;;;16606:4:107;18225:18:118;;;18218:43;16444:65:107;;-1:-1:-1;16519:24:107;;16444:65;;16546:17;;;;:42;;18087:18:118;;16546:66:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:83;;;;:::i;:::-;16519:110;15867:802;-1:-1:-1;;;;;;;15867:802:107:o;35855:447::-;35916:15;-1:-1:-1;;;35951:2:107;:12;35943:53;;;;-1:-1:-1;;;35943:53:107;;29650:2:118;35943:53:107;;;29632:21:118;29689:2;29669:18;;;29662:30;29728;29708:18;;;29701:58;29776:18;;35943:53:107;29448:352:118;35943:53:107;-1:-1:-1;;;;36018:2:107;36042;36081:215;36088:5;;36081:215;;36113:1;36117;36113:5;36122:1;36113:10;36109:177;;36147:10;36152:1;36155;36147:4;:10::i;:::-;36143:14;-1:-1:-1;36181:1:107;36175:7;36081:215;;36109:177;36231:16;36236:7;36245:1;36231:4;:16::i;:::-;36221:26;-1:-1:-1;36265:6:107;36270:1;36265:6;;:::i;:::-;;;36081:215;;;35933:369;;35855:447;;;;:::o;21831:191::-;21910:4;-1:-1:-1;;;;;21976:24:107;;;:39;;22011:4;21976:39;;;22003:5;21969:46;21831:191;-1:-1:-1;;21831:191:107:o;25913:205::-;25987:4;26032:20;6199:8;26032:16;:20;:::i;:::-;26018:10;;26007:8;;:21;;;;:::i;:::-;:45;26003:87;;-1:-1:-1;26075:4:107;;25913:205;-1:-1:-1;25913:205:107:o;14368:615::-;14461:7;14480:24;14507:14;14480:41;;14531:51;;;;;;;;;;;;;;;;;;14565:16;14531:11;:51::i;:::-;14614:17;;;:66;;-1:-1:-1;;;14614:66:107;;-1:-1:-1;;;;;18193:15:118;;;14614:66:107;;;18175:34:118;;;;14674:4:107;18225:18:118;;;18218:43;14592:19:107;;14614:17;;;;:42;;18087:18:118;;14614:66:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14592:88;;14690:39;;;;;;;;;;;;;;;;;;14717:11;14690;:39::i;:::-;14776:11;:21;14743:30;14757:16;14743:11;:30;:::i;:::-;:54;14739:139;;;14832:11;:21;:35;;14856:11;;14832:35;:::i;:::-;14813:54;;14739:139;14887:55;;;;;;;;;;;;;;;;;;14925:16;14887:11;:55::i;:::-;-1:-1:-1;14960:16:107;14368:615;-1:-1:-1;;;14368:615:107:o;14989:730::-;15125:17;;;:48;;-1:-1:-1;;;15125:48:107;;-1:-1:-1;;;;;7231:55:118;;;15125:48:107;;;7213:74:118;;;;15085:7:107;;;;15176:14;;15125:17;;;:39;;7186:18:118;;15125:48:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;;:::i;:::-;15249:17;;;:31;;;-1:-1:-1;;;15249:31:107;;;;15104:86;;-1:-1:-1;15219:2:107;;-1:-1:-1;;;;;15249:17:107;;;;:29;;:31;;;;;;;;;;;;:17;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15235:56:107;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15235:58:107;;;;;;;;-1:-1:-1;;15235:58:107;;;;;;;;;;;;:::i;:::-;;;15231:208;;15392:36;;;;;;;;;;;;;;;;;;:11;:36::i;:::-;15231:208;;;15343:17;;;-1:-1:-1;15231:208:107;15448:22;15473:37;15496:13;15502:7;15496:2;:13;:::i;:::-;15483:26;;:10;:26;:::i;15473:37::-;15544:17;;;:66;;-1:-1:-1;;;15544:66:107;;-1:-1:-1;;;;;18193:15:118;;;15544:66:107;;;18175:34:118;;;;15604:4:107;18225:18:118;;;18218:43;15448:62:107;;-1:-1:-1;15520:21:107;;15544:17;;;:42;;18087:18:118;;15544:66:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15520:90;-1:-1:-1;15621:24:107;15648:30;15520:90;15648:14;:30;:::i;:::-;15621:57;14989:730;-1:-1:-1;;;;;;;;14989:730:107:o;37012:719::-;37165:18;37185:19;37234:12;37220:26;;37286:11;37263:9;:19;;;:34;;37256:42;;;;:::i;:::-;37335:11;37312:9;:19;;;:34;37308:173;;-1:-1:-1;37436:1:107;;-1:-1:-1;37436:1:107;37428:13;;37308:173;37547:177;37594:9;:19;;;37580:11;:33;;;;:::i;:::-;37666:9;:24;;;37704:10;37547:19;:177::i;:::-;37534:190;;37012:719;;;;;;:::o;14116:118:11:-;14173:10;:20;;-1:-1:-1;;14173:20:11;;;;;;;;;;14208:19;;2866:41:118;;;14208:19:11;;2854:2:118;2839:18;14208:19:11;;;;;;;;14116:118;:::o;20696:220:107:-;20779:6;-1:-1:-1;;;;;20847:26:107;;;:62;;20894:15;20847:62;;;20876:15;20840:69;20696:220;-1:-1:-1;;20696:220:107:o;8269:350:11:-;5660:16;:14;:16::i;:::-;8428:6:::1;::::0;:11;8424:45:::1;;8448:21;;;;;;;;;;;;;;8424:45;8556:7;8567:1;8556:12:::0;8552:34:::1;;8577:9;;;;;;;;;;;;;;8552:34;8596:6;:16:::0;8269:350::o;17378:551:107:-;17462:28;17482:7;17462:19;:28::i;:::-;17577:17;;;:69;;-1:-1:-1;;;17577:69:107;;-1:-1:-1;;;;;18193:15:118;;;17577:69:107;;;18175:34:118;;;;17640:4:107;18225:18:118;;;18218:43;17546:28:107;;17577:17;;;;:45;;18087:18:118;;17577:69:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17546:100;;17661:23;17656:78;;17707:16;;;;;;;;;;;;;;17656:78;17743:42;17799:5;17788:53;;;;;;;;;;;;:::i;:::-;17743:98;;17851:37;17876:7;17885:2;17851:24;:37::i;:::-;17898:24;17910:7;17919:2;17898:11;:24::i;:::-;17452:477;;17378:551;;:::o;21609:127::-;21701:28;;7017:25:118;;;21701:28:107;;7005:2:118;6990:18;21701:28:107;6871:177:118;6721:269:10;6815:16;-1:-1:-1;;;;;6815:16:10;;;6811:173;;6847:45;6879:3;6884:7;6847:31;:45::i;6811:173::-;6923:50;6952:6;6960:3;6965:7;6923:28;:50::i;22120:729:107:-;-1:-1:-1;;;;;22254:29:107;;22222;22254;;;:20;:29;;;;;;;;22222:61;;;;;;;;;;;;;;;;;;;22254:29;;22222:61;;;22254:29;22222:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22298:9;22293:550;22317:12;:19;22313:1;:23;22293:550;;;22357:18;22378:12;22391:1;22378:15;;;;;;;;:::i;:::-;;;;;;;22357:36;;22407:40;22450:9;:21;22460:10;22450:21;;;;;;;;;;;22407:64;;22489:26;22504:10;22489:14;:26::i;:::-;22485:348;;;-1:-1:-1;;;;;22558:35:107;;22535:20;22558:35;;;:26;;;:35;;;;;;;22611:39;;;;22668:21;;;:37;;22558:35;;;;22668:37;;22558:35;;22668:37;:::i;:::-;;;;;;;;22738:12;22723:11;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;22768:50:107;;-1:-1:-1;22795:8:107;22805:12;22768:26;:50::i;:::-;22517:316;22485:348;22343:500;;22338:3;;;;;:::i;:::-;;;;22293:550;;5630:121:66;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:66;;;;;;;;;;;;;;;;;;;;5685:15;:59::i;6548:139::-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:66;;;;;;;;;;;;;;;;;;;;6612:15;:68::i;6530:1642:40:-;6578:7;6601:1;6606;6601:6;6597:45;;-1:-1:-1;6630:1:40;;6530:1642;-1:-1:-1;6530:1642:40:o;6597:45::-;7321:14;7355:1;7344:7;7349:1;7344:4;:7::i;:::-;:12;;7338:1;:19;;7321:36;;7816:1;7805:6;7801:1;:10;;;;;:::i;:::-;;7792:6;:19;7791:26;;7782:35;;7865:1;7854:6;7850:1;:10;;;;;:::i;:::-;;7841:6;:19;7840:26;;7831:35;;7914:1;7903:6;7899:1;:10;;;;;:::i;:::-;;7890:6;:19;7889:26;;7880:35;;7963:1;7952:6;7948:1;:10;;;;;:::i;:::-;;7939:6;:19;7938:26;;7929:35;;8012:1;8001:6;7997:1;:10;;;;;:::i;:::-;;7988:6;:19;7987:26;;7978:35;;8061:1;8050:6;8046:1;:10;;;;;:::i;:::-;;8037:6;:19;8036:26;;8027:35;;8110:1;8099:6;8095:1;:10;;;;;:::i;:::-;;8086:6;:19;8085:26;;8076:35;;8132:23;8136:6;8148;8144:1;:10;;;;;:::i;:::-;;8132:3;:23::i;35364:269:107:-;35425:15;-1:-1:-1;;;35460:2:107;:13;;35452:66;;;;-1:-1:-1;;;35452:66:107;;32096:2:118;35452:66:107;;;32078:21:118;32135:2;32115:18;;;32108:30;32174:34;32154:18;;;32147:62;32245:10;32225:18;;;32218:38;32273:19;;35452:66:107;31894:404:118;35452:66:107;-1:-1:-1;;;35536:2:107;:12;35528:53;;;;-1:-1:-1;;;35528:53:107;;32505:2:118;35528:53:107;;;32487:21:118;32544:2;32524:18;;;32517:30;32583;32563:18;;;32556:58;32631:18;;35528:53:107;32303:352:118;35528:53:107;35623:3;6419:34;35600:7;35605:2;35600;:7;:::i;:::-;35599:19;;;;:::i;:::-;35598:28;;;35364:269;-1:-1:-1;;;35364:269:107:o;8716:512::-;-1:-1:-1;;;;;8924:21:107;;8920:77;;8968:18;;;;;;;;;;;;;;8920:77;9018:17;;-1:-1:-1;;;;;9018:17:107;9006:100;;9073:22;;-1:-1:-1;;;9073:22:107;;;;;;;;;;;9006:100;9120:17;;;:35;;;;;-1:-1:-1;;;;;7231:55:118;;;9120:35:107;;;7213:74:118;;;;9120:17:107;;;:26;;7186:18:118;;9120:35:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9115:93;;9178:19;;;;;;;;;;;;;;26124:1548;26264:22;26305:9;26300:630;26324:16;:23;26320:1;:27;26300:630;;;26427:16;26444:1;26427:19;;;;;;;;:::i;:::-;;;;;;;:30;;;26461:1;26427:35;26423:187;26587:8;26423:187;26623:18;26644:16;26661:1;26644:19;;;;;;;;:::i;:::-;;;;;;;:30;;;26623:51;;26693:26;26708:10;26693:14;:26::i;:::-;26688:167;;26746:29;;-1:-1:-1;;;26746:29:107;;;;;7017:25:118;;;6990:18;;26746:29:107;6871:177:118;26688:167:107;26887:16;26904:1;26887:19;;;;;;;;:::i;:::-;;;;;;;:32;;;26868:51;;;;;:::i;:::-;;;26354:576;26300:630;26349:3;;;;:::i;:::-;;;;26300:630;;;-1:-1:-1;;;;;;25344:26:107;;27026:29;25344:26;;;:18;:26;;;;;;27058:60;;27102:15;27058:11;:60::i;:::-;27229:17;;;:66;;-1:-1:-1;;;27229:66:107;;-1:-1:-1;;;;;18193:15:118;;;27229:66:107;;;18175:34:118;;;;27289:4:107;18225:18:118;;;18218:43;27026:92:107;;-1:-1:-1;27200:26:107;;27229:17;;;:42;;18087:18:118;;27229:66:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27200:95;;27485:18;27461:21;:42;27457:147;;;27526:67;;;;;;;;16395:25:118;;;16436:18;;;16429:34;;;16368:18;;27526:67:107;16221:248:118;27457:147:107;-1:-1:-1;;;;;;27614:27:107;;;;;;;:18;:27;;;;;:51;;;;-1:-1:-1;;26124:1548:107:o;27678:3518::-;27793:29;27837:9;27832:3358;27856:16;:23;27852:1;:27;27832:3358;;;27900:18;27921:16;27938:1;27921:19;;;;;;;;:::i;:::-;;;;;;;:30;;;27900:51;;28024:12;:19;28047:1;28024:24;28020:920;;28083:16;;;28097:1;28083:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28083:16:107;28068:31;;28135:10;28117:12;28130:1;28117:15;;;;;;;;:::i;:::-;;;;;;:28;;;;;28020:920;;;28194:10;28235:9;28230:318;28254:12;:19;28250:1;:23;28230:318;;;28350:10;28331:12;28344:1;28331:15;;;;;;;;:::i;:::-;;;;;;;:29;28327:203;;28433:40;;;;;;;;16395:25:118;;;16436:18;;;16429:34;;;28396:4:107;;-1:-1:-1;16368:18:118;;28433:40:107;16221:248:118;28327:203:107;28275:3;;;;:::i;:::-;;;;28230:318;;;;28570:5;28565:361;;28599:21;28637:12;:19;28659:1;28637:23;;;;:::i;:::-;28623:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28623:38:107;;28599:62;;28688:9;28683:124;28707:12;:19;28703:1;:23;28683:124;;;28769:12;28782:1;28769:15;;;;;;;;:::i;:::-;;;;;;;28759:4;28764:1;28759:7;;;;;;;;:::i;:::-;;;;;;;;;;:25;28728:3;;;;:::i;:::-;;;;28683:124;;;;28856:10;28828:4;28833:12;:19;28828:25;;;;;;;;:::i;:::-;;;;;;;;;;:38;28903:4;-1:-1:-1;28565:361:107;28176:764;28020:920;28953:12;28968:16;28985:1;28968:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:32;;;29015:40;29058:21;;;:9;:21;;;;;;-1:-1:-1;;;;;29212:35:107;;;;:26;;;:35;;;;;;28968:32;;-1:-1:-1;29435:40:107;29212:35;28968:32;29435:11;:40::i;:::-;-1:-1:-1;;;;;29610:35:107;;;;;;:26;;;:35;;;;;:50;;;29412:63;;-1:-1:-1;29610:35:107;29932:246;-1:-1:-1;;;;;29956:29:107;;;;;;:20;:29;;;;;:36;29952:40;;29932:246;;;30057:19;;-1:-1:-1;;;;;30021:29:107;;30057:19;30021:29;;;:20;:29;;;;;:32;;30051:1;;30021:32;;;;;;:::i;:::-;;;;;;;;;:55;30017:147;;30114:4;30100:18;;30140:5;;30017:147;29994:3;;;;:::i;:::-;;;;29932:246;;;;30196:11;30191:106;;-1:-1:-1;;;;;30227:29:107;;;;;;:20;:29;;;;;;;30262:19;;30227:55;;;;;;;;;;;;;;;;;;30191:106;30476:12;30452:20;:36;30448:370;;30523:35;30538:20;30523:12;:35;:::i;:::-;30508:11;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;30601:35:107;;-1:-1:-1;30616:20:107;30601:12;:35;:::i;:::-;30576:8;:21;;;:60;;;;;;;:::i;:::-;;;;-1:-1:-1;30448:370:107;;-1:-1:-1;30448:370:107;;30690:35;30713:12;30690:20;:35;:::i;:::-;30675:11;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;30768:35:107;;-1:-1:-1;30791:12:107;30768:20;:35;:::i;:::-;30743:8;:21;;;:60;;;;;;;:::i;:::-;;;;-1:-1:-1;;30448:370:107;30874:8;:18;;;30896:1;30874:23;30870:310;;30938:12;30917:18;;;:33;30870:310;;;30989:58;31016:8;31026:20;30989:26;:58::i;:::-;31118:21;;;;31141:23;;;;31070:95;;;-1:-1:-1;;;;;33158:55:118;;33140:74;;33245:2;33230:18;;33223:34;;;33273:18;;;33266:34;;;33331:2;33316:18;;33309:34;;;;33374:3;33359:19;;33352:35;31070:95:107;;33127:3:118;33112:19;31070:95:107;;;;;;;30870:310;27886:3304;;;;;;27881:3;;;;;:::i;:::-;;;;27832:3358;;2455:490:44;2711:4;2705;2699;2693;2685:6;2681:2;2674:5;2669:47;2659:270;;2822:10;2816:4;2809:24;2910:4;2904;2897:18;11454:1189;11617:2;11611:4;11604:16;11674:6;11668:4;11661:20;11814:34;11808:4;11801:48;12272:4;12266;12260;12254;12251:1;12244:5;12237;12232:45;12192:16;12185:24;12181:1;12174:4;12168:11;12165:18;12162:48;11890:405;11863:655;;12411:10;12405:4;12398:24;12499:4;12493;12486:18;11863:655;12625:1;12619:4;12612:15;11454:1189;;;:::o;25722:185:107:-;25790:4;25813:22;;;:9;:22;;;;;:33;:37;;;;:87;;-1:-1:-1;;25898:1:107;25854:22;;;:9;:22;;;;;;;;:32;;-1:-1:-1;;;;;25854:32:107;:46;;;25722:185::o;181:376:66:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;8633:983:40:-;8685:7;;8769:3;8760:12;;;:16;8756:99;;8806:3;8796:13;;;;8827;8756:99;8881:2;8872:11;;;:15;8868:96;;8917:2;8907:12;;;;8937;8868:96;8990:2;8981:11;;;:15;8977:96;;9026:2;9016:12;;;;9046;8977:96;9099:2;9090:11;;;:15;9086:96;;9135:2;9125:12;;;;9155;9086:96;9208:1;9199:10;;;:14;9195:93;;9243:1;9233:11;;;;9262;9195:93;9314:1;9305:10;;;:14;9301:93;;9349:1;9339:11;;;;9368;9301:93;9420:1;9411:10;;;:14;9407:93;;9455:1;9445:11;;;;9474;9407:93;9526:1;9517:10;;;:14;9513:64;;9561:1;9551:11;9603:6;8633:983;-1:-1:-1;;8633:983:40:o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;-1:-1:-1;680:1:40;;588:104;-1:-1:-1;588:104:40:o;31202:276:107:-;31279:7;;31314:25;31333:6;31321:8;31314:25;:::i;:::-;31298:41;;31363:1;31354:6;:10;31350:90;;;31387:42;;;;;;;;33596:25:118;;;33637:18;;;33630:34;;;33680:18;;;33673:34;;;33569:18;;31387:42:107;33398:315:118;14:180;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:118;;14:180;-1:-1:-1;14:180:118:o;199:184::-;-1:-1:-1;;;248:1:118;241:88;348:4;345:1;338:15;372:4;369:1;362:15;388:145;474:1;467:5;464:12;454:46;;480:18;;:::i;:::-;509;;388:145::o;538:250::-;623:1;633:113;647:6;644:1;641:13;633:113;;;723:11;;;717:18;704:11;;;697:39;669:2;662:10;633:113;;;-1:-1:-1;;780:1:118;762:16;;755:27;538:250::o;793:271::-;835:3;873:5;867:12;900:6;895:3;888:19;916:76;985:6;978:4;973:3;969:14;962:4;955:5;951:16;916:76;:::i;:::-;1046:2;1025:15;-1:-1:-1;;1021:29:118;1012:39;;;;1053:4;1008:50;;793:271;-1:-1:-1;;793:271:118:o;1069:252::-;1156:5;1150:12;1145:3;1138:25;1120:3;1209:4;1202:5;1198:16;1192:23;1247:4;1240;1235:3;1231:14;1224:28;1268:47;1309:4;1304:3;1300:14;1286:12;1268:47;:::i;:::-;1261:54;1069:252;-1:-1:-1;;;;1069:252:118:o;1326:1058::-;1740:4;1769:3;1799:6;1788:9;1781:25;1842:6;1837:2;1826:9;1822:18;1815:34;1885:6;1880:2;1869:9;1865:18;1858:34;1928:6;1923:2;1912:9;1908:18;1901:34;-1:-1:-1;;;;;2045:2:118;2037:6;2033:15;2027:3;2016:9;2012:19;2005:44;2098:2;2090:6;2086:15;2080:3;2069:9;2065:19;2058:44;2151:2;2143:6;2139:15;2133:3;2122:9;2118:19;2111:44;;2192:6;2186:3;2175:9;2171:19;2164:35;2208:59;2262:3;2251:9;2247:19;2239:6;2208:59;:::i;:::-;2304:2;2298:3;2287:9;2283:19;2276:31;2324:54;2374:2;2363:9;2359:18;2351:6;2324:54;:::i;:::-;2316:62;1326:1058;-1:-1:-1;;;;;;;;;;;;;1326:1058:118:o;2389:332::-;2447:6;2500:2;2488:9;2479:7;2475:23;2471:32;2468:52;;;2516:1;2513;2506:12;2468:52;2555:9;2542:23;2605:66;2598:5;2594:78;2587:5;2584:89;2574:117;;2687:1;2684;2677:12;2918:154;-1:-1:-1;;;;;2997:5:118;2993:54;2986:5;2983:65;2973:93;;3062:1;3059;3052:12;3077:247;3136:6;3189:2;3177:9;3168:7;3164:23;3160:32;3157:52;;;3205:1;3202;3195:12;3157:52;3244:9;3231:23;3263:31;3288:5;3263:31;:::i;3329:184::-;-1:-1:-1;;;3378:1:118;3371:88;3478:4;3475:1;3468:15;3502:4;3499:1;3492:15;3518:257;3590:4;3584:11;;;3622:17;;3669:18;3654:34;;3690:22;;;3651:62;3648:88;;;3716:18;;:::i;:::-;3752:4;3745:24;3518:257;:::o;3780:253::-;3852:2;3846:9;3894:4;3882:17;;3929:18;3914:34;;3950:22;;;3911:62;3908:88;;;3976:18;;:::i;4038:253::-;4110:2;4104:9;4152:4;4140:17;;4187:18;4172:34;;4208:22;;;4169:62;4166:88;;;4234:18;;:::i;4296:275::-;4367:2;4361:9;4432:2;4413:13;;-1:-1:-1;;4409:27:118;4397:40;;4467:18;4452:34;;4488:22;;;4449:62;4446:88;;;4514:18;;:::i;:::-;4550:2;4543:22;4296:275;;-1:-1:-1;4296:275:118:o;4576:183::-;4636:4;4669:18;4661:6;4658:30;4655:56;;;4691:18;;:::i;:::-;-1:-1:-1;4736:1:118;4732:14;4748:4;4728:25;;4576:183::o;4764:737::-;4818:5;4871:3;4864:4;4856:6;4852:17;4848:27;4838:55;;4889:1;4886;4879:12;4838:55;4925:6;4912:20;4951:4;4975:60;4991:43;5031:2;4991:43;:::i;:::-;4975:60;:::i;:::-;5069:15;;;5155:1;5151:10;;;;5139:23;;5135:32;;;5100:12;;;;5179:15;;;5176:35;;;5207:1;5204;5197:12;5176:35;5243:2;5235:6;5231:15;5255:217;5271:6;5266:3;5263:15;5255:217;;;5351:3;5338:17;5368:31;5393:5;5368:31;:::i;:::-;5412:18;;5450:12;;;;5288;;5255:217;;;-1:-1:-1;5490:5:118;4764:737;-1:-1:-1;;;;;;4764:737:118:o;5506:186::-;5554:4;5587:18;5579:6;5576:30;5573:56;;;5609:18;;:::i;:::-;-1:-1:-1;5675:2:118;5654:15;-1:-1:-1;;5650:29:118;5681:4;5646:40;;5506:186::o;5697:462::-;5739:5;5792:3;5785:4;5777:6;5773:17;5769:27;5759:55;;5810:1;5807;5800:12;5759:55;5846:6;5833:20;5877:48;5893:31;5921:2;5893:31;:::i;5877:48::-;5950:2;5941:7;5934:19;5996:3;5989:4;5984:2;5976:6;5972:15;5968:26;5965:35;5962:55;;;6013:1;6010;6003:12;5962:55;6078:2;6071:4;6063:6;6059:17;6052:4;6043:7;6039:18;6026:55;6126:1;6101:16;;;6119:4;6097:27;6090:38;;;;6105:7;5697:462;-1:-1:-1;;;5697:462:118:o;6164:702::-;6275:6;6283;6291;6344:2;6332:9;6323:7;6319:23;6315:32;6312:52;;;6360:1;6357;6350:12;6312:52;6400:9;6387:23;6429:18;6470:2;6462:6;6459:14;6456:34;;;6486:1;6483;6476:12;6456:34;6509:61;6562:7;6553:6;6542:9;6538:22;6509:61;:::i;:::-;6499:71;;6623:2;6612:9;6608:18;6595:32;6579:48;;6652:2;6642:8;6639:16;6636:36;;;6668:1;6665;6658:12;6636:36;;6691:51;6734:7;6723:8;6712:9;6708:24;6691:51;:::i;:::-;6681:61;;;6792:2;6781:9;6777:18;6764:32;6805:31;6830:5;6805:31;:::i;:::-;6855:5;6845:15;;;6164:702;;;;;:::o;7298:455::-;7375:6;7383;7436:2;7424:9;7415:7;7411:23;7407:32;7404:52;;;7452:1;7449;7442:12;7404:52;7492:9;7479:23;7525:18;7517:6;7514:30;7511:50;;;7557:1;7554;7547:12;7511:50;7580:49;7621:7;7612:6;7601:9;7597:22;7580:49;:::i;:::-;7570:59;;;7679:2;7668:9;7664:18;7651:32;7692:31;7717:5;7692:31;:::i;:::-;7742:5;7732:15;;;7298:455;;;;;:::o;7989:142::-;8072:1;8065:5;8062:12;8052:46;;8078:18;;:::i;8136:213::-;8285:2;8270:18;;8297:46;8274:9;8325:6;8297:46;:::i;8354:315::-;8422:6;8430;8483:2;8471:9;8462:7;8458:23;8454:32;8451:52;;;8499:1;8496;8489:12;8451:52;8538:9;8525:23;8557:31;8582:5;8557:31;:::i;:::-;8607:5;8659:2;8644:18;;;;8631:32;;-1:-1:-1;;;8354:315:118:o;8674:316::-;8751:6;8759;8767;8820:2;8808:9;8799:7;8795:23;8791:32;8788:52;;;8836:1;8833;8826:12;8788:52;-1:-1:-1;;8859:23:118;;;8929:2;8914:18;;8901:32;;-1:-1:-1;8980:2:118;8965:18;;;8952:32;;8674:316;-1:-1:-1;8674:316:118:o;8995:143::-;9079:1;9072:5;9069:12;9059:46;;9085:18;;:::i;9143:215::-;9293:2;9278:18;;9305:47;9282:9;9334:6;9305:47;:::i;9803:261::-;9984:2;9973:9;9966:21;9947:4;10004:54;10054:2;10043:9;10039:18;10031:6;10004:54;:::i;10069:1357::-;10196:6;10204;10257:2;10245:9;10236:7;10232:23;10228:32;10225:52;;;10273:1;10270;10263:12;10225:52;10313:9;10300:23;10342:18;10383:2;10375:6;10372:14;10369:34;;;10399:1;10396;10389:12;10369:34;10422:61;10475:7;10466:6;10455:9;10451:22;10422:61;:::i;:::-;10412:71;;10502:2;10492:12;;10557:2;10546:9;10542:18;10529:32;10586:2;10576:8;10573:16;10570:36;;;10602:1;10599;10592:12;10570:36;10625:24;;10680:4;10672:13;;10668:27;-1:-1:-1;10658:55:118;;10709:1;10706;10699:12;10658:55;10745:2;10732:16;10768:60;10784:43;10824:2;10784:43;:::i;10768:60::-;10862:15;;;10944:1;10940:10;;;;10932:19;;10928:28;;;10893:12;;;;10968:19;;;10965:39;;;11000:1;10997;10990:12;10965:39;11032:2;11028;11024:11;11044:352;11060:6;11055:3;11052:15;11044:352;;;11146:3;11133:17;11182:2;11169:11;11166:19;11163:109;;;11226:1;11255:2;11251;11244:14;11163:109;11297:56;11345:7;11340:2;11326:11;11322:2;11318:20;11314:29;11297:56;:::i;:::-;11285:69;;-1:-1:-1;11374:12:118;;;;11077;;11044:352;;;11048:3;11415:5;11405:15;;;;;;;;10069:1357;;;;;:::o;11431:849::-;11664:2;11716:21;;;11786:13;;11689:18;;;11808:22;;;11635:4;;11664:2;11849;;11867:18;;;;11908:15;;;11635:4;11951:303;11965:6;11962:1;11959:13;11951:303;;;12024:13;;12066:9;;-1:-1:-1;;;;;12062:58:118;12050:71;;12161:11;;12155:18;12141:12;;;12134:40;12194:12;;;;12229:15;;;;11987:1;11980:9;11951:303;;;-1:-1:-1;12271:3:118;;11431:849;-1:-1:-1;;;;;;;11431:849:118:o;12285:118::-;12371:5;12364:13;12357:21;12350:5;12347:32;12337:60;;12393:1;12390;12383:12;12408:241;12464:6;12517:2;12505:9;12496:7;12492:23;12488:32;12485:52;;;12533:1;12530;12523:12;12485:52;12572:9;12559:23;12591:28;12613:5;12591:28;:::i;12654:953::-;-1:-1:-1;;;;;13150:15:118;;;13132:34;;13202:15;;;13197:2;13182:18;;13175:43;13254:15;;13249:2;13234:18;;13227:43;13301:2;13286:18;;13279:34;;;13344:3;13329:19;;13322:35;;;13058:3;13043:19;;13366:59;13420:3;13405:19;;13397:6;13366:59;:::i;:::-;13462:6;13456:3;13445:9;13441:19;13434:35;13506:6;13500:3;13489:9;13485:19;13478:35;13550:6;13544:3;13533:9;13529:19;13522:35;13594:6;13588:3;13577:9;13573:19;13566:35;12654:953;;;;;;;;;;;;;:::o;13612:315::-;13680:6;13688;13741:2;13729:9;13720:7;13716:23;13712:32;13709:52;;;13757:1;13754;13747:12;13709:52;13793:9;13780:23;13770:33;;13853:2;13842:9;13838:18;13825:32;13866:31;13891:5;13866:31;:::i;13932:1202::-;14050:6;14081:2;14124;14112:9;14103:7;14099:23;14095:32;14092:52;;;14140:1;14137;14130:12;14092:52;14180:9;14167:23;14213:18;14205:6;14202:30;14199:50;;;14245:1;14242;14235:12;14199:50;14268:22;;14321:4;14313:13;;14309:27;-1:-1:-1;14299:55:118;;14350:1;14347;14340:12;14299:55;14386:2;14373:16;14409:60;14425:43;14465:2;14425:43;:::i;14409:60::-;14503:15;;;14585:1;14581:10;;;;14573:19;;14569:28;;;14534:12;;;;14609:19;;;14606:39;;;14641:1;14638;14631:12;14606:39;14665:11;;;;14685:419;14701:6;14696:3;14693:15;14685:419;;;14783:4;14777:3;14768:7;14764:17;14760:28;14757:118;;;14829:1;14858:2;14854;14847:14;14757:118;14901:22;;:::i;:::-;14950:17;;14936:32;;15017:12;;;15004:26;14988:14;;;14981:50;15044:18;;14727:4;14718:14;;;;15082:12;;;;14685:419;;15139:242;15282:2;15267:18;;15315:1;15304:13;;15294:47;;15321:18;;:::i;:::-;15350:25;;;15139:242;:::o;15386:388::-;15463:6;15471;15524:2;15512:9;15503:7;15499:23;15495:32;15492:52;;;15540:1;15537;15530:12;15492:52;15576:9;15563:23;15553:33;;15637:2;15626:9;15622:18;15609:32;15664:18;15656:6;15653:30;15650:50;;;15696:1;15693;15686:12;15650:50;15719:49;15760:7;15751:6;15740:9;15736:22;15719:49;:::i;:::-;15709:59;;;15386:388;;;;;:::o;15779:437::-;15858:1;15854:12;;;;15901;;;15922:61;;15976:4;15968:6;15964:17;15954:27;;15922:61;16029:2;16021:6;16018:14;15998:18;15995:38;15992:218;;-1:-1:-1;;;16063:1:118;16056:88;16167:4;16164:1;16157:15;16195:4;16192:1;16185:15;16474:184;-1:-1:-1;;;16523:1:118;16516:88;16623:4;16620:1;16613:15;16647:4;16644:1;16637:15;16663:128;16730:9;;;16751:11;;;16748:37;;;16765:18;;:::i;17169:184::-;-1:-1:-1;;;17218:1:118;17211:88;17318:4;17315:1;17308:15;17342:4;17339:1;17332:15;17358:274;17398:1;17424;17414:189;;-1:-1:-1;;;17456:1:118;17449:88;17560:4;17557:1;17550:15;17588:4;17585:1;17578:15;17414:189;-1:-1:-1;17617:9:118;;17358:274::o;17637:168::-;17710:9;;;17741;;17758:15;;;17752:22;;17738:37;17728:71;;17779:18;;:::i;17810:125::-;17875:9;;;17896:10;;;17893:36;;;17909:18;;:::i;18272:245::-;18339:6;18392:2;18380:9;18371:7;18367:23;18363:32;18360:52;;;18408:1;18405;18398:12;18360:52;18440:9;18434:16;18459:28;18481:5;18459:28;:::i;18522:184::-;18592:6;18645:2;18633:9;18624:7;18620:23;18616:32;18613:52;;;18661:1;18658;18651:12;18613:52;-1:-1:-1;18684:16:118;;18522:184;-1:-1:-1;18522:184:118:o;18711:157::-;18800:13;;18842:1;18832:12;;18822:40;;18858:1;18855;18848:12;18822:40;18711:157;;;:::o;18873:156::-;18961:13;;19003:1;18993:12;;18983:40;;19019:1;19016;19009:12;19034:420;19109:5;19157:4;19145:9;19140:3;19136:19;19132:30;19129:50;;;19175:1;19172;19165:12;19129:50;19208:2;19202:9;19250:4;19242:6;19238:17;19321:6;19309:10;19306:22;19285:18;19273:10;19270:34;19267:62;19264:88;;;19332:18;;:::i;:::-;19368:2;19361:22;19431:16;;19416:32;;-1:-1:-1;19401:6:118;19034:420;-1:-1:-1;19034:420:118:o;19459:1079::-;19564:6;19595:3;19639:2;19627:9;19618:7;19614:23;19610:32;19607:52;;;19655:1;19652;19645:12;19607:52;19688:2;19682:9;19718:15;;;;19763:18;19748:34;;19784:22;;;19745:62;19742:88;;;19810:18;;:::i;:::-;19850:10;19846:2;19839:22;19889:9;19883:16;19870:29;;19908:31;19933:5;19908:31;:::i;:::-;19963:5;19955:6;19948:21;20023:2;20012:9;20008:18;20002:25;19997:2;19989:6;19985:15;19978:50;20082:2;20071:9;20067:18;20061:25;20056:2;20048:6;20044:15;20037:50;20141:2;20130:9;20126:18;20120:25;20115:2;20107:6;20103:15;20096:50;20201:3;20190:9;20186:19;20180:26;20174:3;20166:6;20162:16;20155:52;20241:60;20296:3;20285:9;20281:19;20241:60;:::i;:::-;20235:3;20227:6;20223:16;20216:86;20336:59;20390:3;20379:9;20375:19;20336:59;:::i;:::-;20330:3;20322:6;20318:16;20311:85;20430:76;20498:7;20492:3;20481:9;20477:19;20430:76;:::i;:::-;20424:3;20412:16;;20405:102;20416:6;19459:1079;-1:-1:-1;;;;19459:1079:118:o;20543:933::-;20733:4;20775:3;20764:9;20760:19;20752:27;;20806:6;20795:9;20788:25;-1:-1:-1;;;;;20859:6:118;20853:13;20849:62;20844:2;20833:9;20829:18;20822:90;20966:2;20958:6;20954:15;20948:22;20943:2;20932:9;20928:18;20921:50;21025:2;21017:6;21013:15;21007:22;21002:2;20991:9;20987:18;20980:50;21085:2;21077:6;21073:15;21067:22;21061:3;21050:9;21046:19;21039:51;21145:3;21137:6;21133:16;21127:23;21121:3;21110:9;21106:19;21099:52;21198:3;21190:6;21186:16;21180:23;21212:63;21270:3;21259:9;21255:19;21241:12;21212:63;:::i;:::-;;21324:3;21316:6;21312:16;21306:23;21338:64;21397:3;21386:9;21382:19;21366:14;21338:64;:::i;:::-;;21463:3;21455:6;21451:16;21445:23;21439:30;21433:3;21422:9;21418:19;21411:59;20543:933;;;;;:::o;21783:726::-;21849:5;21897:4;21885:9;21880:3;21876:19;21872:30;21869:50;;;21915:1;21912;21905:12;21869:50;21937:22;;:::i;:::-;21928:31;;21988:9;21982:16;21975:5;21968:31;22043:2;22032:9;22028:18;22022:25;22070:18;22062:6;22059:30;22056:50;;;22102:1;22099;22092:12;22056:50;22125:22;;22178:4;22170:13;;22166:23;-1:-1:-1;22156:51:118;;22203:1;22200;22193:12;22156:51;22232:2;22226:9;22257:48;22273:31;22301:2;22273:31;:::i;22257:48::-;22328:2;22321:5;22314:17;22368:3;22363:2;22358;22354;22350:11;22346:20;22343:29;22340:49;;;22385:1;22382;22375:12;22340:49;22398:67;22462:2;22457;22450:5;22446:14;22441:2;22437;22433:11;22398:67;:::i;:::-;22492:2;22481:14;;22474:29;-1:-1:-1;22485:5:118;;21783:726;-1:-1:-1;;;21783:726:118:o;22514:1028::-;22606:6;22659:2;22647:9;22638:7;22634:23;22630:32;22627:52;;;22675:1;22672;22665:12;22627:52;22708:9;22702:16;22737:18;22778:2;22770:6;22767:14;22764:34;;;22794:1;22791;22784:12;22764:34;22817:22;;;;22873:4;22855:16;;;22851:27;22848:47;;;22891:1;22888;22881:12;22848:47;22917:22;;:::i;:::-;22968:2;22962:9;22955:5;22948:24;23010:2;23006;23002:11;22996:18;23023:33;23048:7;23023:33;:::i;:::-;23083:2;23072:14;;23065:31;23134:2;23126:11;;23120:18;23147:33;23120:18;23147:33;:::i;:::-;23207:2;23196:14;;23189:31;23259:2;23251:11;;23245:18;23275:16;;;23272:36;;;23304:1;23301;23294:12;23272:36;23340:65;23397:7;23386:8;23382:2;23378:17;23340:65;:::i;:::-;23335:2;23328:5;23324:14;23317:89;;23453:3;23449:2;23445:12;23439:19;23433:3;23426:5;23422:15;23415:44;23506:3;23502:2;23498:12;23492:19;23486:3;23479:5;23475:15;23468:44;23531:5;23521:15;;;;;22514:1028;;;;:::o;23920:986::-;24023:6;24076:2;24064:9;24055:7;24051:23;24047:32;24044:52;;;24092:1;24089;24082:12;24044:52;24125:9;24119:16;24154:18;24195:2;24187:6;24184:14;24181:34;;;24211:1;24208;24201:12;24181:34;24234:22;;;;24290:4;24272:16;;;24268:27;24265:47;;;24308:1;24305;24298:12;24265:47;24334:22;;:::i;:::-;24385:2;24379:9;24372:5;24365:24;24427:2;24423;24419:11;24413:18;24440:33;24465:7;24440:33;:::i;:::-;24500:2;24489:14;;24482:31;24559:2;24551:11;;;24545:18;24529:14;;;24522:42;24602:2;24594:11;;24588:18;24615:33;24588:18;24615:33;:::i;:::-;24675:2;24664:14;;24657:31;24727:3;24719:12;;24713:19;24744:16;;;24741:36;;;24773:1;24770;24763:12;24741:36;24810:65;24867:7;24856:8;24852:2;24848:17;24810:65;:::i;:::-;24804:3;24793:15;;24786:90;-1:-1:-1;24797:5:118;23920:986;-1:-1:-1;;;;;23920:986:118:o;24911:265::-;24995:6;25048:2;25036:9;25027:7;25023:23;25019:32;25016:52;;;25064:1;25061;25054:12;25016:52;25096:9;25090:16;25115:31;25140:5;25115:31;:::i;25181:135::-;25220:3;25241:17;;;25238:43;;25261:18;;:::i;:::-;-1:-1:-1;25308:1:118;25297:13;;25181:135::o;25447:545::-;25549:2;25544:3;25541:11;25538:448;;;25585:1;25610:5;25606:2;25599:17;25655:4;25651:2;25641:19;25725:2;25713:10;25709:19;25706:1;25702:27;25696:4;25692:38;25761:4;25749:10;25746:20;25743:47;;;-1:-1:-1;25784:4:118;25743:47;25839:2;25834:3;25830:12;25827:1;25823:20;25817:4;25813:31;25803:41;;25894:82;25912:2;25905:5;25902:13;25894:82;;;25957:17;;;25938:1;25927:13;25894:82;;;25898:3;;;25447:545;;;:::o;26168:1352::-;26294:3;26288:10;26321:18;26313:6;26310:30;26307:56;;;26343:18;;:::i;:::-;26372:97;26462:6;26422:38;26454:4;26448:11;26422:38;:::i;:::-;26416:4;26372:97;:::i;:::-;26524:4;;26588:2;26577:14;;26605:1;26600:663;;;;27307:1;27324:6;27321:89;;;-1:-1:-1;27376:19:118;;;27370:26;27321:89;-1:-1:-1;;26125:1:118;26121:11;;;26117:24;26113:29;26103:40;26149:1;26145:11;;;26100:57;27423:81;;26570:944;;26600:663;25394:1;25387:14;;;25431:4;25418:18;;-1:-1:-1;;26636:20:118;;;26754:236;26768:7;26765:1;26762:14;26754:236;;;26857:19;;;26851:26;26836:42;;26949:27;;;;26917:1;26905:14;;;;26784:19;;26754:236;;;26758:3;27018:6;27009:7;27006:19;27003:201;;;27079:19;;;27073:26;-1:-1:-1;;27162:1:118;27158:14;;;27174:3;27154:24;27150:37;27146:42;27131:58;27116:74;;27003:201;-1:-1:-1;;;;;27250:1:118;27234:14;;;27230:22;27217:36;;-1:-1:-1;26168:1352:118:o;27796:273::-;27864:6;27917:2;27905:9;27896:7;27892:23;27888:32;27885:52;;;27933:1;27930;27923:12;27885:52;27965:9;27959:16;28015:4;28008:5;28004:16;27997:5;27994:27;27984:55;;28035:1;28032;28025:12;28074:422;28163:1;28206:5;28163:1;28220:270;28241:7;28231:8;28228:21;28220:270;;;28300:4;28296:1;28292:6;28288:17;28282:4;28279:27;28276:53;;;28309:18;;:::i;:::-;28359:7;28349:8;28345:22;28342:55;;;28379:16;;;;28342:55;28458:22;;;;28418:15;;;;28220:270;;;28224:3;28074:422;;;;;:::o;28501:806::-;28550:5;28580:8;28570:80;;-1:-1:-1;28621:1:118;28635:5;;28570:80;28669:4;28659:76;;-1:-1:-1;28706:1:118;28720:5;;28659:76;28751:4;28769:1;28764:59;;;;28837:1;28832:130;;;;28744:218;;28764:59;28794:1;28785:10;;28808:5;;;28832:130;28869:3;28859:8;28856:17;28853:43;;;28876:18;;:::i;:::-;-1:-1:-1;;28932:1:118;28918:16;;28947:5;;28744:218;;29046:2;29036:8;29033:16;29027:3;29021:4;29018:13;29014:36;29008:2;28998:8;28995:16;28990:2;28984:4;28981:12;28977:35;28974:77;28971:159;;;-1:-1:-1;29083:19:118;;;29115:5;;28971:159;29162:34;29187:8;29181:4;29162:34;:::i;:::-;29232:6;29228:1;29224:6;29220:19;29211:7;29208:32;29205:58;;;29243:18;;:::i;:::-;29281:20;;28501:806;-1:-1:-1;;;28501:806:118:o;29312:131::-;29372:5;29401:36;29428:8;29422:4;29401:36;:::i;29805:184::-;-1:-1:-1;;;29854:1:118;29847:88;29954:4;29951:1;29944:15;29978:4;29975:1;29968:15;29994:1185;30123:6;30154:2;30197;30185:9;30176:7;30172:23;30168:32;30165:52;;;30213:1;30210;30203:12;30165:52;30246:9;30240:16;30279:18;30271:6;30268:30;30265:50;;;30311:1;30308;30301:12;30265:50;30334:22;;30387:4;30379:13;;30375:27;-1:-1:-1;30365:55:118;;30416:1;30413;30406:12;30365:55;30445:2;30439:9;30468:60;30484:43;30524:2;30484:43;:::i;30468:60::-;30562:15;;;30644:1;30640:10;;;;30632:19;;30628:28;;;30593:12;;;;30668:19;;;30665:39;;;30700:1;30697;30690:12;30665:39;30724:11;;;;30744:405;30760:6;30755:3;30752:15;30744:405;;;30842:4;30836:3;30827:7;30823:17;30819:28;30816:118;;;30888:1;30917:2;30913;30906:14;30816:118;30960:22;;:::i;:::-;31009:10;;30995:25;;31062:12;;;31056:19;31040:14;;;31033:43;31089:18;;30786:4;30777:14;;;;31127:12;;;;30744:405;;31184:184;-1:-1:-1;;;31233:1:118;31226:88;31333:4;31330:1;31323:15;31357:4;31354:1;31347:15;31373:220;31522:2;31511:9;31504:21;31485:4;31542:45;31583:2;31572:9;31568:18;31560:6;31542:45;:::i;31598:291::-;31775:2;31764:9;31757:21;31738:4;31795:45;31836:2;31825:9;31821:18;31813:6;31795:45;:::i;:::-;31787:53;;31876:6;31871:2;31860:9;31856:18;31849:34;31598:291;;;;;:::o;32660:216::-;32724:9;;;32752:11;;;32699:3;32782:9;;32810:10;;32806:19;;32835:10;;32827:19;;32803:44;32800:70;;;32850:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "3335": [
        {
          "start": 1149,
          "length": 32
        },
        {
          "start": 6245,
          "length": 32
        },
        {
          "start": 6392,
          "length": 32
        },
        {
          "start": 6953,
          "length": 32
        }
      ],
      "3337": [
        {
          "start": 1508,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "D()": "0f529ba2",
    "MAX_STAKED_PROPOSALS()": "406244d8",
    "NATIVE()": "a0cf0aea",
    "PRECISION_SCALE()": "d7050f07",
    "_minThresholdPoints()": "7c6570ba",
    "activatePoints()": "814516ad",
    "allocate(bytes,address)": "ef2920fc",
    "calculateConviction(uint256,uint256,uint256)": "346db8cb",
    "calculateThreshold(uint256)": "59a5db8b",
    "canExecuteProposal(uint256)": "824ea8ed",
    "deactivatePoints()": "1ddf1e23",
    "deactivatePoints(address)": "6453d9c4",
    "decay()": "54fac919",
    "decreasePower(address,uint256)": "2ed04b2b",
    "distribute(address[],bytes,address)": "0a6f0ee9",
    "getAllo()": "15cc481e",
    "getMaxAmount()": "0ba95909",
    "getMaxConviction(uint256)": "950559d7",
    "getMetadata(uint256)": "a574cea4",
    "getPayouts(address[],bytes[])": "b2b878d0",
    "getPointSystem()": "c3292171",
    "getPoolAmount()": "4ab4ba42",
    "getPoolId()": "38fff2d0",
    "getProposal(uint256)": "c7f758a8",
    "getProposalStakedAmount(uint256)": "dc96ff2d",
    "getProposalVoterStake(uint256,address)": "e0dd2c38",
    "getRecipientStatus(address)": "eb11af93",
    "getStrategyId()": "42fda9c7",
    "getTotalVoterStakePct(address)": "bcc5b93b",
    "increasePoolAmount(uint256)": "f5b0dfb7",
    "increasePower(address,uint256)": "782aadff",
    "initialize(uint256,bytes)": "edd146cc",
    "isPoolActive()": "df868ed3",
    "isValidAllocator(address)": "4d31d087",
    "maxRatio()": "76365af7",
    "pointConfig()": "a47ff7e5",
    "pointSystem()": "2dbd6fdd",
    "proposalCounter()": "0c0512e9",
    "proposalType()": "351d9f96",
    "proposals(uint256)": "013cf08b",
    "registerRecipient(bytes,address)": "2bbe0cae",
    "registryCommunity()": "6003e414",
    "setDecay(uint256)": "69fa25c4",
    "setMaxRatio(uint256)": "11f22ae3",
    "setMinThresholdPoints(uint256)": "2cefadbb",
    "setPoolActive(bool)": "b5f620ce",
    "setRegistryCommunity(address)": "058aca44",
    "setWeight(uint256)": "fc1711f2",
    "supportProposal((uint256,int256)[])": "e33add93",
    "supportsInterface(bytes4)": "01ffc9a7",
    "totalEffectiveActivePoints()": "d1e36232",
    "totalPointsActivated()": "aba9ffee",
    "totalStaked()": "817b1cd2",
    "totalVoterStakePct(address)": "5db64b99",
    "updateProposalConviction(uint256)": "1aa91a9e",
    "voterStakedProposals(address,uint256)": "868c57b8",
    "weight()": "a1aab33f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALLOCATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ENDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALREADY_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AMOUNT_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ANCHOR_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ARRAY_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AddressCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountOverMaxRatio\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantIncreaseFixedSystem\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ConvictionUnderMinimumThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_FEE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_METADATA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_REGISTRATION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxPointsReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NONCE_NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IMPLEMENTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PENDING_OWNER\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pointsSupport\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointsBalance\",\"type\":\"uint256\"}],\"name\":\"NotEnoughPointsToSupport\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCommunityAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_INACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolIdCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolIsEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposalDataIsEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposalIdCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalNotActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalNotInList\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ProposalSupportDuplicated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_ALREADY_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"name\":\"RECIPIENT_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_NOT_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RegistryCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_support\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"_result\",\"type\":\"int256\"}],\"name\":\"SupportUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserIsInactive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotInRegistry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decay\",\"type\":\"uint256\"}],\"name\":\"DecayUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"registryCommunity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minThresholdPoints\",\"type\":\"uint256\"},{\"internalType\":\"enum StrategyStruct.ProposalType\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"enum StrategyStruct.PointSystem\",\"name\":\"pointSystem\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct StrategyStruct.PointSystemConfig\",\"name\":\"pointConfig\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct StrategyStruct.InitializeParams\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"InitializedCV\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxRatio\",\"type\":\"uint256\"}],\"name\":\"MaxRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"before\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minThresholdPoints\",\"type\":\"uint256\"}],\"name\":\"MinThresholdPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PoolAmountIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensUnStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsToDecrease\",\"type\":\"uint256\"}],\"name\":\"PowerDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsToIncrease\",\"type\":\"uint256\"}],\"name\":\"PowerIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStakedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"convictionLast\",\"type\":\"uint256\"}],\"name\":\"SupportAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"WeightUpdated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"D\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STAKED_PROPOSALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION_SCALE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_minThresholdPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activatePoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timePassed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lastConv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_oldAmount\",\"type\":\"uint256\"}],\"name\":\"calculateConviction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestedAmount\",\"type\":\"uint256\"}],\"name\":\"calculateThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"canExecuteProposal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canBeExecuted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deactivatePoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"deactivatePoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountToUnstake\",\"type\":\"uint256\"}],\"name\":\"decreasePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getMaxConviction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPointSystem\",\"outputs\":[{\"internalType\":\"enum StrategyStruct.PointSystem\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requestedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum StrategyStruct.ProposalStatus\",\"name\":\"proposalStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"blockLast\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"convictionLast\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voterStakedPoints\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getProposalVoterStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getTotalVoterStakePct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountToStake\",\"type\":\"uint256\"}],\"name\":\"increasePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pointConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pointSystem\",\"outputs\":[{\"internalType\":\"enum StrategyStruct.PointSystem\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalType\",\"outputs\":[{\"internalType\":\"enum StrategyStruct.ProposalType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"convictionLast\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requestedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockLast\",\"type\":\"uint256\"},{\"internalType\":\"enum StrategyStruct.ProposalStatus\",\"name\":\"proposalStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCommunity\",\"outputs\":[{\"internalType\":\"contract RegistryCommunity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_decay\",\"type\":\"uint256\"}],\"name\":\"setDecay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxRatio\",\"type\":\"uint256\"}],\"name\":\"setMaxRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minThresholdPoints_\",\"type\":\"uint256\"}],\"name\":\"setMinThresholdPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"setPoolActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryCommunity\",\"type\":\"address\"}],\"name\":\"setRegistryCommunity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"setWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"deltaSupport\",\"type\":\"int256\"}],\"internalType\":\"struct StrategyStruct.ProposalSupport[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"name\":\"supportProposal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalEffectiveActivePoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPointsActivated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalVoterStakePct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"updateProposalConviction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voterStakedProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ANCHOR_ERROR()\":[{\"details\":\"Thrown if the anchor creation fails\"}],\"NONCE_NOT_AVAILABLE()\":[{\"details\":\"Thrown when the nonce passed has been used or not available\"}],\"NOT_PENDING_OWNER()\":[{\"details\":\"Thrown when the 'msg.sender' is not the pending owner on ownership transfer\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"calculateConviction(uint256,uint256,uint256)\":{\"details\":\"Conviction formula: a^t * y(0) + x * (1 - a^t) / (1 - a) Solidity implementation: y = (2^128 * a^t * y0 + x * D * (2^128 - 2^128 * a^t) / (D - aD) + 2^127) / 2^128\",\"params\":{\"_lastConv\":\"Last conviction record\",\"_oldAmount\":\"Amount of tokens staked until now\",\"_timePassed\":\"Number of blocks since last conviction record\"},\"returns\":{\"_0\":\"Current conviction\"}},\"calculateThreshold(uint256)\":{\"details\":\"Formula: \\u03c1 * totalStaked / (1 - a) / (\\u03b2 - requestedAmount / total)**2 For the Solidity implementation we amplify \\u03c1 and \\u03b2 and simplify the formula: weight = \\u03c1 * D maxRatio = \\u03b2 * D decay = a * D threshold = weight * totalStaked * D ** 2 * funds ** 2 / (D - decay) / (maxRatio * funds - requestedAmount * D) ** 2\",\"params\":{\"_requestedAmount\":\"Requested amount of tokens on certain proposal\"},\"returns\":{\"_threshold\":\"Threshold a proposal's conviction should surpass in order to be able to executed it.\"}},\"distribute(address[],bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to distribute to the recipients\",\"_recipientIds\":\"The IDs of the recipients\",\"_sender\":\"The address of the sender\"}},\"getAllo()\":{\"returns\":{\"_0\":\"The Allo contract\"}},\"getPayouts(address[],bytes[])\":{\"returns\":{\"_0\":\"Input the values you would send to distribute(), get the amounts each recipient in the array would receive\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getProposal(uint256)\":{\"details\":\"Get proposal details\",\"params\":{\"_proposalId\":\"Proposal id\"},\"returns\":{\"beneficiary\":\"Proposal beneficiary\",\"blockLast\":\"Last block when conviction was calculated\",\"convictionLast\":\"Last conviction calculated\",\"proposalStatus\":\"Proposal status\",\"requestedAmount\":\"Proposal requested amount\",\"requestedToken\":\"Proposal requested token\",\"stakedAmount\":\"Proposal staked points\",\"submitter\":\"Proposal submitter\",\"threshold\":\"Proposal threshold\"}},\"getProposalVoterStake(uint256,address)\":{\"params\":{\"_proposalId\":\"Proposal id\",\"_voter\":\"Voter address\"},\"returns\":{\"_0\":\"Proposal voter stake\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"details\":\"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\",\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"'true' if the pool is active, otherwise 'false'\"}},\"isValidAllocator(address)\":{\"details\":\"How the allocator is determined is up to the strategy implementation.\",\"params\":{\"_allocator\":\"The address to check if it is a valid allocator for the strategy.\"},\"returns\":{\"_0\":\"'true' if the address is a valid allocator, 'false' otherwise\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"recipientId\":\"The recipientId\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ALLOCATION_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is active.\"}],\"ALLOCATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is not active.\"}],\"ALLOCATION_NOT_ENDED()\":[{\"notice\":\"Thrown when the allocation is not ended.\"}],\"ALREADY_INITIALIZED()\":[{\"notice\":\"Thrown when data is already intialized\"}],\"AMOUNT_MISMATCH()\":[{\"notice\":\"Thrown when the amount of tokens sent does not match the amount of tokens expected\"}],\"ARRAY_MISMATCH()\":[{\"notice\":\"Thrown when two arrays length are not equal\"}],\"INVALID()\":[{\"notice\":\"Thrown as a general error when input / data is invalid\"}],\"INVALID_ADDRESS()\":[{\"notice\":\"Thrown when an invalid address is used\"}],\"INVALID_FEE()\":[{\"notice\":\"Thrown when the fee is below 1e18 which is the fee percentage denominator\"}],\"INVALID_METADATA()\":[{\"notice\":\"Thrown when the metadata is invalid.\"}],\"INVALID_REGISTRATION()\":[{\"notice\":\"Thrown when the registration is invalid.\"}],\"IS_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is approved and should be cloned\"}],\"MISMATCH()\":[{\"notice\":\"Thrown when mismatch in decoding data\"}],\"NOT_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is not approved\"}],\"NOT_ENOUGH_FUNDS()\":[{\"notice\":\"Thrown when not enough funds are available\"}],\"NOT_IMPLEMENTED()\":[{\"notice\":\"Thrown when the function is not implemented\"}],\"NOT_INITIALIZED()\":[{\"notice\":\"Thrown when data is yet to be initialized\"}],\"POOL_ACTIVE()\":[{\"notice\":\"Thrown when a pool is already active\"}],\"POOL_INACTIVE()\":[{\"notice\":\"Thrown when a pool is inactive\"}],\"RECIPIENT_ALREADY_ACCEPTED()\":[{\"notice\":\"Thrown when recipient is already accepted.\"}],\"RECIPIENT_ERROR(address)\":[{\"notice\":\"Thrown when there is an error in recipient.\"}],\"RECIPIENT_NOT_ACCEPTED()\":[{\"notice\":\"Thrown when the recipient is not accepted.\"}],\"REGISTRATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when registration is not active.\"}],\"UNAUTHORIZED()\":[{\"notice\":\"Thrown when user is not authorized\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when address is the zero address\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"},\"allocate(bytes,address)\":{\"notice\":\"Allocates to a recipient.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"Distributes funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the 'Allo' contract.\"},\"getPoolAmount()\":{\"notice\":\"Getter for the 'poolAmount'.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId'.\"},\"getProposalVoterStake(uint256,address)\":{\"notice\":\"Get stake of voter `_voter` on proposal #`_proposalId`\"},\"getRecipientStatus(address)\":{\"notice\":\"Getter for the status of a recipient.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'strategyId'.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the pool amount.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"Getter for whether or not the pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks if the '_allocator' is a valid allocator.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"Registers a recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"pkg/contracts/src/CVStrategy.sol\":\"CVStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/contracts/=lib/allo-v2/lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/allo-v2/lib/v2-core/lib/prb-math/\",\":@prb/test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/\",\":@sablier/v2-core/=lib/allo-v2/lib/v2-core/\",\":ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/\",\":allo-v2-contracts/=lib/allo-v2/contracts/\",\":allo-v2-test/=lib/allo-v2/test/\",\":allo-v2/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/allo-v2/lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/allo-v2/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hats-protocol/=lib/allo-v2/lib/hats-protocol/\",\":openzeppelin-contracts-upgradeable/=lib/allo-v2/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/allo-v2/lib/permit2/\",\":prb-math/=lib/allo-v2/lib/v2-core/lib/prb-math/src/\",\":prb-test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/\",\":solady/=lib/allo-v2/lib/solady/\",\":solarray/=lib/allo-v2/lib/v2-core/lib/solarray/src/\",\":solbase/=lib/allo-v2/lib/hats-protocol/lib/solbase/src/\",\":solmate/=lib/allo-v2/lib/permit2/lib/solmate/\",\":utils/=lib/allo-v2/lib/hats-protocol/lib/utils/\",\":v2-core/=lib/allo-v2/lib/v2-core/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0x752bbf7be2275b2d0e6323063775fc5afe3c360a2dae9b879452a42e8b2280ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a41b95501d44b11718ec5df990595335d44bd6bba883e4879bdce35261ee93a7\",\"dweb:/ipfs/QmcRbrYjcibhDqsKJZM3HLceB4Kdd4tKDXqDaaVzbTkza1\"]},\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"lib/allo-v2/contracts/core/libraries/Errors.sol\":{\"keccak256\":\"0x114aa83c98eff68576c06a073357e2ead6910e1a4195cf720eb579ef701afa15\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c92fd5843368c9d66f7d0321932c0a9dc0919b292f51bd3aefad066548c622cf\",\"dweb:/ipfs/QmZ8N4tToDEaNh9gSyR2J7JCAGPHQUSrs1iyrmzEDHkHEA\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c\",\"dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn\"]},\"lib/allo-v2/contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a\",\"dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv\"]},\"lib/allo-v2/contracts/core/libraries/Transfer.sol\":{\"keccak256\":\"0xb7b2bb9e47965ba74753f58544fe5f168a28970798720675ca7ba97fb0c79286\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://47968985fb2900f1a930fb53038971bd092a09b71c7247f9fb50253b41db1d11\",\"dweb:/ipfs/QmXYQmJ8jZpiCXKySGZqPmdkSUqvTFpi7Wfd23boTKEYQ5\"]},\"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":{\"keccak256\":\"0x3f1382dc6c35d50545e327e7ed6016f2bd752357d446bd698014073f0b812873\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://99500abcd617fa43f6dde49e2c7802821ceaf54a65a8055cbbf2695ecd107974\",\"dweb:/ipfs/QmUktZkWuu3GCMEijY1fqt7NMy7BzpTvEtcmpB1fuoa7zt\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"pkg/contracts/src/CVStrategy.sol\":{\"keccak256\":\"0x88eaa27d9314c6043e3be10f21e149ca18718771e5d8f5a64bdf40caeb4ad967\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1d56540ab27c3a94a0e0ba12f75c2f50204a8dd502f149449cb1a8fd028b8bf\",\"dweb:/ipfs/QmTwjoJDCus1cTQ13Fyks5hN2WSepW6iTvvdNAzipNM7dK\"]},\"pkg/contracts/src/ISafe.sol\":{\"keccak256\":\"0x878a210809bb684c42157a10f3f90350a67d0a4863f130499942b06f0f2c9143\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fa2d71bd427c3415e98a2ee15ff673f3cc61c17f14d7087c5eedc83b55f6b0ef\",\"dweb:/ipfs/QmesVSmJQQzi6ys1cvhQFCJyDXchb736mT5bXks4Yp6Cbj\"]},\"pkg/contracts/src/RegistryCommunity.sol\":{\"keccak256\":\"0x3f64ae326921bf2101c8e481d4256118df21a2fa829422ec23c3e268fb1fa4f3\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0b200555258130d149d0ed73b2d8bd76366791c8c2a8db94513b5f73fc86500c\",\"dweb:/ipfs/QmRhgWHPeW4NyBqDJxQLNaznBVBfmthxNZCnoVoUFx2AHo\"]},\"pkg/contracts/src/RegistryFactory.sol\":{\"keccak256\":\"0x24de9c87a391b6ccb8d28d8e5389b99749106b03873cdd474edce4a2f715b2ec\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b6c3b77a5a02c6ad889e1825d85f7495c8940a8aee5cb540e68319c9ccc9e2d5\",\"dweb:/ipfs/QmTiVmmHXQUJKMLVmHqhiLXALc9EBiTYEtY472stMsYaCw\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_allo",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALLOCATION_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALLOCATION_NOT_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALLOCATION_NOT_ENDED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALREADY_INITIALIZED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AMOUNT_MISMATCH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ANCHOR_ERROR"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ARRAY_MISMATCH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AddressCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AmountOverMaxRatio"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CantIncreaseFixedSystem"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ConvictionUnderMinimumThreshold"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_FEE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_METADATA"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_REGISTRATION"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IS_APPROVED_STRATEGY"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MISMATCH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxPointsReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NONCE_NOT_AVAILABLE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_APPROVED_STRATEGY"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_ENOUGH_FUNDS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_IMPLEMENTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_INITIALIZED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_PENDING_OWNER"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pointsSupport",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pointsBalance",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotEnoughPointsToSupport"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyCommunityAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "POOL_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "POOL_INACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolIdCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolIsEmpty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProposalDataIsEmpty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProposalIdCannotBeZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ProposalNotActive"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ProposalNotInList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ProposalSupportDuplicated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RECIPIENT_ALREADY_ACCEPTED"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "RECIPIENT_ERROR"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RECIPIENT_NOT_ACCEPTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "REGISTRATION_NOT_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RegistryCannotBeZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_support",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "_delta",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "_result",
              "type": "int256"
            }
          ],
          "type": "error",
          "name": "SupportUnderflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UNAUTHORIZED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UserCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UserIsInactive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UserNotInRegistry"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZERO_ADDRESS"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Allocated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "decay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DecayUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Distributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipientAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Distributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct StrategyStruct.InitializeParams",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "registryCommunity",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "decay",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minThresholdPoints",
                  "type": "uint256"
                },
                {
                  "internalType": "enum StrategyStruct.ProposalType",
                  "name": "proposalType",
                  "type": "uint8"
                },
                {
                  "internalType": "enum StrategyStruct.PointSystem",
                  "name": "pointSystem",
                  "type": "uint8"
                },
                {
                  "internalType": "struct StrategyStruct.PointSystemConfig",
                  "name": "pointConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InitializedCV",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxRatio",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxRatioUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "before",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "minThresholdPoints",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MinThresholdPointsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolActive",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolAmountIncreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokensUnStaked",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "pointsToDecrease",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PowerDecreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokensStaked",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "pointsToIncrease",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PowerIncreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Registered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalStakedAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "convictionLast",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SupportAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WeightUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "D",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_STAKED_PROPOSALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NATIVE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRECISION_SCALE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_minThresholdPoints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activatePoints"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "allocate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_timePassed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_lastConv",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_oldAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateConviction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestedAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateThreshold",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canExecuteProposal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "canBeExecuted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deactivatePoints"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_member",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deactivatePoints"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_member",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amountToUnstake",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreasePower",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_recipientIds",
              "type": "address[]"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distribute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllo",
          "outputs": [
            {
              "internalType": "contract IAllo",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxConviction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMetadata",
          "outputs": [
            {
              "internalType": "struct Metadata",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocol",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "pointer",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getPayouts",
          "outputs": [
            {
              "internalType": "struct IStrategy.PayoutSummary[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipientAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPointSystem",
          "outputs": [
            {
              "internalType": "enum StrategyStruct.PointSystem",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "address",
              "name": "submitter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "requestedToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum StrategyStruct.ProposalStatus",
              "name": "proposalStatus",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "blockLast",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "convictionLast",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voterStakedPoints",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStakedAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_voter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalVoterStake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_recipientId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecipientStatus",
          "outputs": [
            {
              "internalType": "enum IStrategy.Status",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategyId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_voter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalVoterStakePct",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increasePoolAmount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_member",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amountToStake",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increasePower",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isPoolActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_allocator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidAllocator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pointConfig",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pointSystem",
          "outputs": [
            {
              "internalType": "enum StrategyStruct.PointSystem",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalType",
          "outputs": [
            {
              "internalType": "enum StrategyStruct.ProposalType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "convictionLast",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "submitter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "requestedToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockLast",
              "type": "uint256"
            },
            {
              "internalType": "enum StrategyStruct.ProposalStatus",
              "name": "proposalStatus",
              "type": "uint8"
            },
            {
              "internalType": "struct Metadata",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocol",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "pointer",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "registerRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registryCommunity",
          "outputs": [
            {
              "internalType": "contract RegistryCommunity",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_decay",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDecay"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxRatio",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxRatio"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minThresholdPoints_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinThresholdPoints"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_active",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoolActive"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_registryCommunity",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRegistryCommunity"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_weight",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWeight"
        },
        {
          "inputs": [
            {
              "internalType": "struct StrategyStruct.ProposalSupport[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "deltaSupport",
                  "type": "int256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportProposal"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalEffectiveActivePoints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalPointsActivated",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalStaked",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalVoterStakePct",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateProposalConviction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "voterStakedProposals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weight",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allocate(bytes,address)": {
            "details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
            "params": {
              "_data": "The data to use to allocate to the recipient",
              "_sender": "The address of the sender"
            }
          },
          "calculateConviction(uint256,uint256,uint256)": {
            "details": "Conviction formula: a^t * y(0) + x * (1 - a^t) / (1 - a) Solidity implementation: y = (2^128 * a^t * y0 + x * D * (2^128 - 2^128 * a^t) / (D - aD) + 2^127) / 2^128",
            "params": {
              "_lastConv": "Last conviction record",
              "_oldAmount": "Amount of tokens staked until now",
              "_timePassed": "Number of blocks since last conviction record"
            },
            "returns": {
              "_0": "Current conviction"
            }
          },
          "calculateThreshold(uint256)": {
            "details": "Formula: ρ * totalStaked / (1 - a) / (β - requestedAmount / total)**2 For the Solidity implementation we amplify ρ and β and simplify the formula: weight = ρ * D maxRatio = β * D decay = a * D threshold = weight * totalStaked * D ** 2 * funds ** 2 / (D - decay) / (maxRatio * funds - requestedAmount * D) ** 2",
            "params": {
              "_requestedAmount": "Requested amount of tokens on certain proposal"
            },
            "returns": {
              "_threshold": "Threshold a proposal's conviction should surpass in order to be able to executed it."
            }
          },
          "distribute(address[],bytes,address)": {
            "details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
            "params": {
              "_data": "The data to use to distribute to the recipients",
              "_recipientIds": "The IDs of the recipients",
              "_sender": "The address of the sender"
            }
          },
          "getAllo()": {
            "returns": {
              "_0": "The Allo contract"
            }
          },
          "getPayouts(address[],bytes[])": {
            "returns": {
              "_0": "Input the values you would send to distribute(), get the amounts each recipient in the array would receive"
            }
          },
          "getPoolAmount()": {
            "returns": {
              "_0": "The balance of the pool"
            }
          },
          "getPoolId()": {
            "returns": {
              "_0": "The ID of the pool"
            }
          },
          "getProposal(uint256)": {
            "details": "Get proposal details",
            "params": {
              "_proposalId": "Proposal id"
            },
            "returns": {
              "beneficiary": "Proposal beneficiary",
              "blockLast": "Last block when conviction was calculated",
              "convictionLast": "Last conviction calculated",
              "proposalStatus": "Proposal status",
              "requestedAmount": "Proposal requested amount",
              "requestedToken": "Proposal requested token",
              "stakedAmount": "Proposal staked points",
              "submitter": "Proposal submitter",
              "threshold": "Proposal threshold"
            }
          },
          "getProposalVoterStake(uint256,address)": {
            "params": {
              "_proposalId": "Proposal id",
              "_voter": "Voter address"
            },
            "returns": {
              "_0": "Proposal voter stake"
            }
          },
          "getRecipientStatus(address)": {
            "params": {
              "_recipientId": "The ID of the recipient"
            },
            "returns": {
              "_0": "The status of the recipient"
            }
          },
          "getStrategyId()": {
            "returns": {
              "_0": "The ID of the strategy"
            }
          },
          "increasePoolAmount(uint256)": {
            "details": "Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.",
            "params": {
              "_amount": "The amount to increase the pool by"
            }
          },
          "initialize(uint256,bytes)": {
            "params": {
              "_data": "The encoded data",
              "_poolId": "The ID of the pool"
            }
          },
          "isPoolActive()": {
            "returns": {
              "_0": "'true' if the pool is active, otherwise 'false'"
            }
          },
          "isValidAllocator(address)": {
            "details": "How the allocator is determined is up to the strategy implementation.",
            "params": {
              "_allocator": "The address to check if it is a valid allocator for the strategy."
            },
            "returns": {
              "_0": "'true' if the address is a valid allocator, 'false' otherwise"
            }
          },
          "registerRecipient(bytes,address)": {
            "details": "Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.",
            "params": {
              "_data": "The data to use to register the recipient",
              "_sender": "The address of the sender"
            },
            "returns": {
              "recipientId": "The recipientId"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "NATIVE()": {
            "notice": "Address of the native token"
          },
          "allocate(bytes,address)": {
            "notice": "Allocates to a recipient."
          },
          "distribute(address[],bytes,address)": {
            "notice": "Distributes funds (tokens) to recipients."
          },
          "getAllo()": {
            "notice": "Getter for the 'Allo' contract."
          },
          "getPoolAmount()": {
            "notice": "Getter for the 'poolAmount'."
          },
          "getPoolId()": {
            "notice": "Getter for the 'poolId'."
          },
          "getProposalVoterStake(uint256,address)": {
            "notice": "Get stake of voter `_voter` on proposal #`_proposalId`"
          },
          "getRecipientStatus(address)": {
            "notice": "Getter for the status of a recipient."
          },
          "getStrategyId()": {
            "notice": "Getter for the 'strategyId'."
          },
          "increasePoolAmount(uint256)": {
            "notice": "Increases the pool amount."
          },
          "initialize(uint256,bytes)": {
            "notice": "@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."
          },
          "isPoolActive()": {
            "notice": "Getter for whether or not the pool is active."
          },
          "isValidAllocator(address)": {
            "notice": "Checks if the '_allocator' is a valid allocator."
          },
          "registerRecipient(bytes,address)": {
            "notice": "Registers a recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/allo-v2/lib/openzeppelin-contracts/contracts/",
        "@prb/math/=lib/allo-v2/lib/v2-core/lib/prb-math/",
        "@prb/test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/",
        "@sablier/v2-core/=lib/allo-v2/lib/v2-core/",
        "ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/",
        "allo-v2-contracts/=lib/allo-v2/contracts/",
        "allo-v2-test/=lib/allo-v2/test/",
        "allo-v2/=lib/allo-v2/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eas-contracts/=lib/allo-v2/lib/eas-contracts/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/allo-v2/lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hats-protocol/=lib/allo-v2/lib/hats-protocol/",
        "openzeppelin-contracts-upgradeable/=lib/allo-v2/lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/allo-v2/lib/permit2/",
        "prb-math/=lib/allo-v2/lib/v2-core/lib/prb-math/src/",
        "prb-test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/",
        "safe-contracts/=lib/safe-contracts/",
        "solady/=lib/allo-v2/lib/solady/",
        "solarray/=lib/allo-v2/lib/v2-core/lib/solarray/src/",
        "solbase/=lib/allo-v2/lib/hats-protocol/lib/solbase/src/",
        "solmate/=lib/allo-v2/lib/permit2/lib/solmate/",
        "utils/=lib/allo-v2/lib/hats-protocol/lib/utils/",
        "v2-core/=lib/allo-v2/lib/v2-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "pkg/contracts/src/CVStrategy.sol": "CVStrategy"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/allo-v2/contracts/core/interfaces/IAllo.sol": {
        "keccak256": "0x752bbf7be2275b2d0e6323063775fc5afe3c360a2dae9b879452a42e8b2280ce",
        "urls": [
          "bzz-raw://a41b95501d44b11718ec5df990595335d44bd6bba883e4879bdce35261ee93a7",
          "dweb:/ipfs/QmcRbrYjcibhDqsKJZM3HLceB4Kdd4tKDXqDaaVzbTkza1"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/interfaces/IRegistry.sol": {
        "keccak256": "0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f",
        "urls": [
          "bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e",
          "dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/contracts/core/interfaces/IStrategy.sol": {
        "keccak256": "0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23",
        "urls": [
          "bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487",
          "dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Errors.sol": {
        "keccak256": "0x114aa83c98eff68576c06a073357e2ead6910e1a4195cf720eb579ef701afa15",
        "urls": [
          "bzz-raw://c92fd5843368c9d66f7d0321932c0a9dc0919b292f51bd3aefad066548c622cf",
          "dweb:/ipfs/QmZ8N4tToDEaNh9gSyR2J7JCAGPHQUSrs1iyrmzEDHkHEA"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Metadata.sol": {
        "keccak256": "0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44",
        "urls": [
          "bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c",
          "dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Native.sol": {
        "keccak256": "0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5",
        "urls": [
          "bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a",
          "dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Transfer.sol": {
        "keccak256": "0xb7b2bb9e47965ba74753f58544fe5f168a28970798720675ca7ba97fb0c79286",
        "urls": [
          "bzz-raw://47968985fb2900f1a930fb53038971bd092a09b71c7247f9fb50253b41db1d11",
          "dweb:/ipfs/QmXYQmJ8jZpiCXKySGZqPmdkSUqvTFpi7Wfd23boTKEYQ5"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/strategies/BaseStrategy.sol": {
        "keccak256": "0x3f1382dc6c35d50545e327e7ed6016f2bd752357d446bd698014073f0b812873",
        "urls": [
          "bzz-raw://99500abcd617fa43f6dde49e2c7802821ceaf54a65a8055cbbf2695ecd107974",
          "dweb:/ipfs/QmUktZkWuu3GCMEijY1fqt7NMy7BzpTvEtcmpB1fuoa7zt"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5",
        "urls": [
          "bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd",
          "dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624",
        "urls": [
          "bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298",
          "dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "pkg/contracts/src/CVStrategy.sol": {
        "keccak256": "0x88eaa27d9314c6043e3be10f21e149ca18718771e5d8f5a64bdf40caeb4ad967",
        "urls": [
          "bzz-raw://f1d56540ab27c3a94a0e0ba12f75c2f50204a8dd502f149449cb1a8fd028b8bf",
          "dweb:/ipfs/QmTwjoJDCus1cTQ13Fyks5hN2WSepW6iTvvdNAzipNM7dK"
        ],
        "license": "AGPL-3.0-only"
      },
      "pkg/contracts/src/ISafe.sol": {
        "keccak256": "0x878a210809bb684c42157a10f3f90350a67d0a4863f130499942b06f0f2c9143",
        "urls": [
          "bzz-raw://fa2d71bd427c3415e98a2ee15ff673f3cc61c17f14d7087c5eedc83b55f6b0ef",
          "dweb:/ipfs/QmesVSmJQQzi6ys1cvhQFCJyDXchb736mT5bXks4Yp6Cbj"
        ],
        "license": "LGPL-3.0-only"
      },
      "pkg/contracts/src/RegistryCommunity.sol": {
        "keccak256": "0x3f64ae326921bf2101c8e481d4256118df21a2fa829422ec23c3e268fb1fa4f3",
        "urls": [
          "bzz-raw://0b200555258130d149d0ed73b2d8bd76366791c8c2a8db94513b5f73fc86500c",
          "dweb:/ipfs/QmRhgWHPeW4NyBqDJxQLNaznBVBfmthxNZCnoVoUFx2AHo"
        ],
        "license": "AGPL-3.0-only"
      },
      "pkg/contracts/src/RegistryFactory.sol": {
        "keccak256": "0x24de9c87a391b6ccb8d28d8e5389b99749106b03873cdd474edce4a2f715b2ec",
        "urls": [
          "bzz-raw://b6c3b77a5a02c6ad889e1825d85f7495c8940a8aee5cb540e68319c9ccc9e2d5",
          "dweb:/ipfs/QmTiVmmHXQUJKMLVmHqhiLXALc9EBiTYEtY472stMsYaCw"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "id": 107
}