{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_allo",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "fallback",
      "stateMutability": "payable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "D",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "MAX_STAKED_PROPOSALS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "NATIVE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "PRECISION_SCALE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "activatePoints",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allocate",
      "inputs": [
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "calculateConviction",
      "inputs": [
        {
          "name": "_timePassed",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_lastConv",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_oldAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateThreshold",
      "inputs": [
        {
          "name": "_requestedAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "_threshold",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "canExecuteProposal",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "canBeExecuted",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deactivatePoints",
      "inputs": [
        {
          "name": "_member",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "decay",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decreasePower",
      "inputs": [
        {
          "name": "_member",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amountToUnstake",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "distribute",
      "inputs": [
        {
          "name": "_recipientIds",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getAllo",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAllo"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxConviction",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMetadata",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Metadata",
          "components": [
            {
              "name": "protocol",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "pointer",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPayouts",
      "inputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "",
          "type": "bytes[]",
          "internalType": "bytes[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IStrategy.PayoutSummary[]",
          "components": [
            {
              "name": "recipientAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getPointsPerMember",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPointsPerTokenStaked",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolAmount",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolId",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getProposal",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "submitter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "beneficiary",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "requestedToken",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "requestedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "stakedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "proposalStatus",
          "type": "uint8",
          "internalType": "enum StrategyStruct.ProposalStatus"
        },
        {
          "name": "blockLast",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "convictionLast",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "threshold",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "voterStakedPoints",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getProposalStakedAmount",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getProposalVoterStake",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_voter",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRecipientStatus",
      "inputs": [
        {
          "name": "_recipientId",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum IStrategy.Status"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategyId",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTotalVoterStakePct",
      "inputs": [
        {
          "name": "_voter",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "increasePoolAmount",
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "increasePower",
      "inputs": [
        {
          "name": "_member",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amountToStake",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "increasePowerQuadratic",
      "inputs": [
        {
          "name": "_member",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amountToStake",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "_poolId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isPoolActive",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isValidAllocator",
      "inputs": [
        {
          "name": "_allocator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxRatio",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minPointsActivated",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pointConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "pointsPerTokenStaked",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "maxAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "pointsPerMember",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "tokensPerPoint",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pointSystem",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum StrategyStruct.PointSystem"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposalCounter",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposalType",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum StrategyStruct.ProposalType"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proposals",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "requestedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "stakedAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "convictionLast",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "beneficiary",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "submitter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "requestedToken",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "blockLast",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "proposalStatus",
          "type": "uint8",
          "internalType": "enum StrategyStruct.ProposalStatus"
        },
        {
          "name": "metadata",
          "type": "tuple",
          "internalType": "struct Metadata",
          "components": [
            {
              "name": "protocol",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "pointer",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerRecipient",
      "inputs": [
        {
          "name": "_data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "_sender",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "recipientId",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "registryCommunity",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract RegistryCommunity"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setDecay",
      "inputs": [
        {
          "name": "_decay",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMaxRatio",
      "inputs": [
        {
          "name": "_maxRatio",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setPoolActive",
      "inputs": [
        {
          "name": "_active",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRegistryCommunity",
      "inputs": [
        {
          "name": "_registryCommunity",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setWeight",
      "inputs": [
        {
          "name": "_weight",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportProposal",
      "inputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct StrategyStruct.ProposalSupport[]",
          "components": [
            {
              "name": "proposalId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deltaSupport",
              "type": "int256",
              "internalType": "int256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalEffectiveActivePoints",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalPointsActivated",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalStaked",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalVoterStakePct",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "updateProposalConviction",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "voterStakedProposals",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "weight",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "Allocated",
      "inputs": [
        {
          "name": "recipientId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DecayUpdated",
      "inputs": [
        {
          "name": "decay",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Distributed",
      "inputs": [
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "beneficiary",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Distributed",
      "inputs": [
        {
          "name": "recipientId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipientAddress",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "InitializedCV",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct StrategyStruct.InitializeParams",
          "components": [
            {
              "name": "registryCommunity",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "decay",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxRatio",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "weight",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "proposalType",
              "type": "uint8",
              "internalType": "enum StrategyStruct.ProposalType"
            },
            {
              "name": "pointSystem",
              "type": "uint8",
              "internalType": "enum StrategyStruct.PointSystem"
            },
            {
              "name": "pointConfig",
              "type": "tuple",
              "internalType": "struct StrategyStruct.PointSystemConfig",
              "components": [
                {
                  "name": "pointsPerTokenStaked",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAmount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "pointsPerMember",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "tokensPerPoint",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxRatioUpdated",
      "inputs": [
        {
          "name": "maxRatio",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolActive",
      "inputs": [
        {
          "name": "active",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PoolAmountIncreased",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PowerDecreased",
      "inputs": [
        {
          "name": "member",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "tokensUnStaked",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "pointsToDecrease",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PowerIncreased",
      "inputs": [
        {
          "name": "member",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "tokensStaked",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "pointsToIncrease",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProposalCreated",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Registered",
      "inputs": [
        {
          "name": "recipientId",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SupportAdded",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "proposalId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "totalStakedAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "convictionLast",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WeightUpdated",
      "inputs": [
        {
          "name": "weight",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ALLOCATION_ACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ALLOCATION_NOT_ACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ALLOCATION_NOT_ENDED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ALREADY_INITIALIZED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AMOUNT_MISMATCH",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ANCHOR_ERROR",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ARRAY_MISMATCH",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AddressCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AmountOverMaxRatio",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CantIncreaseFixedSystem",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ConvictionUnderMinimumThreshold",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID_ADDRESS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID_FEE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID_METADATA",
      "inputs": []
    },
    {
      "type": "error",
      "name": "INVALID_REGISTRATION",
      "inputs": []
    },
    {
      "type": "error",
      "name": "IS_APPROVED_STRATEGY",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MISMATCH",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MaxPointsReached",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NONCE_NOT_AVAILABLE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_APPROVED_STRATEGY",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_ENOUGH_FUNDS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_IMPLEMENTED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_INITIALIZED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NOT_PENDING_OWNER",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotEnoughPointsToSupport",
      "inputs": [
        {
          "name": "pointsSupport",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "pointsBalance",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "NotImplemented",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyCommunityAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "POOL_ACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "POOL_INACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PoolIdCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PoolIsEmpty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProposalDataIsEmpty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProposalIdCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ProposalNotActive",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ProposalNotInList",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ProposalSupportDuplicated",
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "RECIPIENT_ALREADY_ACCEPTED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RECIPIENT_ERROR",
      "inputs": [
        {
          "name": "recipientId",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "RECIPIENT_NOT_ACCEPTED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "REGISTRATION_NOT_ACTIVE",
      "inputs": []
    },
    {
      "type": "error",
      "name": "RegistryCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SupportUnderflow",
      "inputs": [
        {
          "name": "_support",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_delta",
          "type": "int256",
          "internalType": "int256"
        },
        {
          "name": "_result",
          "type": "int256",
          "internalType": "int256"
        }
      ]
    },
    {
      "type": "error",
      "name": "TokenCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "TokenNotAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UNAUTHORIZED",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UserCannotBeZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UserIsInactive",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UserNotInRegistry",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ZERO_ADDRESS",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60c06040526000600c55620000196127106103e8620000b4565b600f553480156200002957600080fd5b5060405162004468380380620044688339810160408190526200004c91620000e0565b604080518082018252600a8152694356537472617465677960b01b6020808301919091526001600160a01b038416608052915183926200008f9183910162000112565b60408051601f19818403018152919052805160209091012060a0525062000162915050565b8082028115828204841417620000da57634e487b7160e01b600052601160045260246000fd5b92915050565b600060208284031215620000f357600080fd5b81516001600160a01b03811681146200010b57600080fd5b9392505050565b600060208083528351808285015260005b81811015620001415785810183015185820160400152820162000123565b506000604082860101526040601f19601f8301168501019250505092915050565b60805160a0516142cb6200019d600039600061060b0152600081816104d901528181611ae801528181611b7b0152611dae01526142cb6000f3fe60806040526004361061033f5760003560e01c8063782aadff116101ae578063bcc5b93b116100eb578063e0dd2c381161008f578063edd146cc1161006c578063edd146cc14610a6f578063ef2920fc14610a8f578063f5b0dfb714610aa2578063fc1711f214610ac257005b8063e0dd2c3814610a02578063e33add9314610a22578063eb11af9314610a4257005b8063d1e36232116100c8578063d1e362321461098f578063d7050f07146109a4578063dc96ff2d146109ba578063df868ed3146109ea57005b8063bcc5b93b1461090e578063c7f758a814610944578063cbfc1daa1461097a57005b8063a1aab33f11610152578063aba9ffee1161012f578063aba9ffee14610896578063abdceae1146108ac578063b2b878d0146108c1578063b5f620ce146108ee57005b8063a1aab33f14610810578063a47ff7e514610826578063a574cea41461086957005b8063824ea8ed1161018b578063824ea8ed14610788578063868c57b8146107a8578063950559d7146107c8578063a0cf0aea146107e857005b8063782aadff1461073d578063814516ad1461075d578063817b1cd21461077257005b8063346db8cb1161027c57806354fac919116102205780636003e414116101fd5780636003e414146106c75780636453d9c4146106e757806369fa25c41461070757806376365af71461072757005b806354fac9191461066457806359a5db8b1461067a5780635db64b991461069a57005b8063406244d811610259578063406244d8146105e757806342fda9c7146105fc5780634ab4ba421461062f5780634d31d0871461064457005b8063346db8cb1461058b578063351d9f96146105ab57806338fff2d0146105d257005b806311f22ae3116102e35780631aa91a9e116102c05780631aa91a9e146105115780632bbe0cae146105315780632dbd6fdd146105445780632ed04b2b1461056b57005b806311f22ae31461048a57806313845d0e146104aa57806315cc481e146104ca57005b806305d191751161031c57806305d19175146104195780630a6f0ee91461043d5780630c0512e91461045d5780630f529ba21461047357005b8063013cf08b1461034857806301ffc9a714610387578063058aca44146103f957005b3661034657005b005b34801561035457600080fd5b506103686103633660046133ea565b610ae2565b60405161037e9a999897969594939291906134a4565b60405180910390f35b34801561039357600080fd5b506103e96103a2366004613517565b7fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b604051901515815260200161037e565b34801561040557600080fd5b5061034661041436600461356e565b610bed565b34801561042557600080fd5b5061042f600f5481565b60405190815260200161037e565b34801561044957600080fd5b50610346610458366004613775565b610c27565b34801561046957600080fd5b5061042f600c5481565b34801561047f57600080fd5b5061042f6298968081565b34801561049657600080fd5b506103466104a53660046133ea565b610c47565b3480156104b657600080fd5b5061042f6104c53660046137ed565b610c8e565b3480156104d657600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161037e565b34801561051d57600080fd5b5061042f61052c3660046133ea565b610f21565b6104f961053f366004613819565b610fac565b34801561055057600080fd5b5060105461055e9060ff1681565b60405161037e919061387b565b34801561057757600080fd5b5061042f6105863660046137ed565b610fcf565b34801561059757600080fd5b5061042f6105a6366004613889565b611098565b3480156105b757600080fd5b50600b546105c59060ff1681565b60405161037e91906138c5565b3480156105de57600080fd5b5060015461042f565b3480156105f357600080fd5b5061042f600a81565b34801561060857600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061042f565b34801561063b57600080fd5b5060025461042f565b34801561065057600080fd5b506103e961065f36600461356e565b61113d565b34801561067057600080fd5b5061042f60085481565b34801561068657600080fd5b5061042f6106953660046133ea565b611148565b3480156106a657600080fd5b5061042f6106b536600461356e565b60066020526000908152604090205481565b3480156106d357600080fd5b506004546104f9906001600160a01b031681565b3480156106f357600080fd5b5061034661070236600461356e565b611272565b34801561071357600080fd5b506103466107223660046133ea565b61138a565b34801561073357600080fd5b5061042f60095481565b34801561074957600080fd5b5061042f6107583660046137ed565b6113c9565b34801561076957600080fd5b506103466114ab565b34801561077e57600080fd5b5061042f600d5481565b34801561079457600080fd5b506103e96107a33660046133ea565b6115b8565b3480156107b457600080fd5b5061042f6107c33660046137ed565b611615565b3480156107d457600080fd5b5061042f6107e33660046133ea565b611646565b3480156107f457600080fd5b506104f973eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561081c57600080fd5b5061042f600a5481565b34801561083257600080fd5b506011546012546013546014546108499392919084565b60408051948552602085019390935291830152606082015260800161037e565b34801561087557600080fd5b506108896108843660046133ea565b611670565b60405161037e91906138d3565b3480156108a257600080fd5b5061042f600e5481565b3480156108b857600080fd5b5060115461042f565b3480156108cd57600080fd5b506108e16108dc3660046138e6565b61174f565b60405161037e91906139bb565b3480156108fa57600080fd5b50610346610909366004613a21565b61176a565b34801561091a57600080fd5b5061042f61092936600461356e565b6001600160a01b031660009081526006602052604090205490565b34801561095057600080fd5b5061096461095f3660046133ea565b611773565b60405161037e9a99989796959493929190613a3e565b34801561098657600080fd5b5060135461042f565b34801561099b57600080fd5b5061042f611875565b3480156109b057600080fd5b5061042f61271081565b3480156109c657600080fd5b5061042f6109d53660046133ea565b60009081526005602052604090206002015490565b3480156109f657600080fd5b5060005460ff166103e9565b348015610a0e57600080fd5b5061042f610a1d366004613aa3565b611890565b348015610a2e57600080fd5b50610346610a3d366004613ac8565b6118be565b348015610a4e57600080fd5b50610a62610a5d36600461356e565b6118d7565b60405161037e9190613b7e565b348015610a7b57600080fd5b50610346610a8a366004613b98565b6118e2565b610346610a9d366004613819565b611a1f565b348015610aae57600080fd5b50610346610abd3660046133ea565b611a3d565b348015610ace57600080fd5b50610346610add3660046133ea565b611a66565b60056020818152600092835260409283902080546001820154600283015460038401546004850154968501546006860154600787015460088801548b51808d01909c52600a890180548d52600b8a018054999d989c979b969a6001600160a01b039889169a968916999890951697939660ff909316959192840191610b6690613bdf565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9290613bdf565b8015610bdf5780601f10610bb457610100808354040283529160200191610bdf565b820191906000526020600020905b815481529060010190602001808311610bc257829003601f168201915b50505050508152505090508a565b33610bf781611aa5565b506004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610c2f611b70565b610c37611bbb565b610c42838383611bf7565b505050565b33610c5181611aa5565b60098290556040518281527f08e39b387d1f739ce0d2553bb31822392e3f67c62c6c0a215120ab4a6841a8ab906020015b60405180910390a15050565b60048054604080516378a0b8a960e01b8152905160009384936001600160a01b0316926378a0b8a992818301926020928290030181865afa158015610cd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfb9190613c13565b600480546040516316308e2560e11b81526001600160a01b0388811693820193909352869290911690632c611c4a90602401602060405180830381865afa158015610d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6e9190613c13565b610d789190613c42565b610d829190613c55565b90506000620186a0610db560116003015484610d9e9190613c68565b610db090670de0b6b3a7640000613c8a565b611ebd565b610dbf9190613c68565b9050610e006040518060400160405280600f81526020017f746f74616c45787472615374616b65000000000000000000000000000000000081525083611f2d565b610e446040518060400160405280601a81526020017f706f696e74436f6e6669672e746f6b656e73506572506f696e74000000000000815250601160030154611f2d565b610e836040518060400160405280600e81526020017f6e6577546f74616c506f696e747300000000000000000000000000000000000081525082611f2d565b60048054604051637817ee4f60e01b81526001600160a01b038881169382019390935230602482015260009290911690637817ee4f90604401602060405180830381865afa158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd9190613c13565b601354610f0b908490613c42565b610f159190613c55565b93505050505b92915050565b600081815260056020526040812080548314610f585760405163c1d17bef60e01b8152600481018490526024015b60405180910390fd5b6001600882015460ff166004811115610f7357610f73613403565b14610f94576040516344980d8f60e01b815260048101849052602401610f4f565b610fa2818260020154611fa0565b6003015492915050565b6000610fb6611b70565b610fbe611bbb565b610fc88383611fdb565b9050610f1b565b600080600260105460ff166003811115610feb57610feb613403565b148061100d5750600160105460ff16600381111561100b5761100b613403565b145b156110225761101b8361234b565b905061102f565b61102c848461235b565b90505b80600e60008282546110419190613c55565b9091555050604080516001600160a01b0386168152602081018590529081018290527f70b752f3fadb6ac131c0ece847fcbb6994ec56ed6411595710fd9b29c6ac6cc1906060015b60405180910390a19392505050565b60008084905060006110be629896806080600854901b6110b89190613c68565b836124ed565b905060806f80000000000000000000000000000000600854629896806110e49190613c55565b6110f284600160801b613c55565b6110ff6298968089613c8a565b6111099190613c8a565b6111139190613c68565b61111d8885613c8a565b6111279190613c42565b6111319190613c42565b901c9695505050505050565b6000610f1b82612596565b60008060025411611185576040517fed4421ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61118e826125b6565b156111ac57604051630efd728560e21b815260040160405180910390fd5b6002546000906111c58468010000000000000000613c8a565b6111cf9190613c68565b62989680600954680100000000000000006111ea9190613c8a565b6111f49190613c68565b6111fe9190613c55565b9050604061120a611875565b60085461121a9062989680613c55565b62989680604061122a8680613c8a565b901c629896806080600a54901b6112419190613c68565b61124b9190613c68565b6112559190613c8a565b61125f9190613c68565b6112699190613c8a565b901c9392505050565b60048054604051637817ee4f60e01b81526001600160a01b0384811693820193909352306024820152911690637817ee4f90604401602060405180830381865afa1580156112c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e89190613c13565b600e60008282546112f99190613c55565b9091555050600480546040517f22bcf9990000000000000000000000000000000000000000000000000000000081526001600160a01b03848116938201939093523060248201529116906322bcf99990604401600060405180830381600087803b15801561136657600080fd5b505af115801561137a573d6000803e3d6000fd5b50505050611387816125e2565b50565b3361139481611aa5565b60088290556040518281527f592dcd55d60d892e7fcb3ba105013312e99691cd59f91e15f83cb67cb5a505f290602001610c82565b600080600260105460ff1660038111156113e5576113e5613403565b036113fa576113f38361270d565b905061144d565b600160105460ff16600381111561141357611413613403565b03611422576113f38484612733565b600360105460ff16600381111561143b5761143b613403565b0361144d5761144a8484610c8e565b90505b80600e600082825461145f9190613c42565b9091555050604080516001600160a01b0386168152602081018590529081018290527f0b9150e1e54346ed3fa36b977cd5d65dca5a649c737c3174a26bddaadd47667a90606001611089565b600480546040517f0d4a8b49000000000000000000000000000000000000000000000000000000008152339281018390523060248201526001600160a01b0390911690630d4a8b4990604401600060405180830381600087803b15801561151157600080fd5b505af1158015611525573d6000803e3d6000fd5b505060048054604051637817ee4f60e01b81526001600160a01b038681169382019390935230602482015291169250637817ee4f9150604401602060405180830381865afa15801561157b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159f9190613c13565b600e60008282546115b09190613c42565b909155505050565b60008181526005602052604081206002810154829081906115da908490612805565b915091508160001480156115ec575080155b156115f957826003015491505b60006116088460010154611148565b9092101595945050505050565b6007602052816000526040600020818154811061163157600080fd5b90600052602060002001600091509150505481565b6000600854629896806116599190613c55565b6116666298968084613c8a565b610f1b9190613c68565b604080518082019091526000815260606020820152600060056000848152602001908152602001600020905080600a01604051806040016040529081600082015481526020016001820180546116c590613bdf565b80601f01602080910402602001604051908101604052809291908181526020018280546116f190613bdf565b801561173e5780601f106117135761010080835404028352916020019161173e565b820191906000526020600020905b81548152906001019060200180831161172157829003601f168201915b505050505081525050915050919050565b606060405163d623472560e01b815260040160405180910390fd5b6113878161285d565b6000806000806000806000806000806000600560008d8152602001908152602001600020905080600101546000146117b7576117b28160010154611148565b6117ba565b60005b92508060050160009054906101000a90046001600160a01b03168160040160009054906101000a90046001600160a01b03168260060160009054906101000a90046001600160a01b0316836001015484600201548560080160009054906101000a900460ff16866007015487600301548a896009016000336001600160a01b03166001600160a01b03168152602001908152602001600020549a509a509a509a509a509a509a509a509a509a50509193959799509193959799565b6000600f54600e54116118895750600f5490565b50600e5490565b60008281526005602090815260408083206001600160a01b03851684526009019091528120545b9392505050565b60405163d623472560e01b815260040160405180910390fd5b6000610f1b826128a5565b6118eb826128c5565b6000818060200190518101906119019190613d16565b80519091506001600160a01b031661192c57604051635df4b1ef60e01b815260040160405180910390fd5b80516004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055602081015160085560408101516009556060810151600a556080810151600b805460ff1916600183600281111561199357611993613403565b021790555060a08101516010805460ff191660018360038111156119b9576119b9613403565b021790555060c081015180516011556020810151601255604080820151601355606090910151601455517f76164f4c577324c2cac6dbb73d6b99b5c05b6894d54aa69bd565b68f9e13bdcf90611a129085908490613d9f565b60405180910390a1505050565b611a27611b70565b611a2f611bbb565b611a398282612946565b5050565b611a45611b70565b8060026000828254611a579190613c42565b90915550611387905081612a4d565b33611a7081611aa5565b600a8290556040518281527f30ee8206062f283e56a0af2b02138016bf7442ded26ad68a92a18a9dd246fb4990602001610c82565b6001546040517f29e40d4b00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b0382811660248301527f000000000000000000000000000000000000000000000000000000000000000016906329e40d4b90604401602060405180830381865afa158015611b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b539190613e33565b6113875760405163075fd2b160e01b815260040160405180910390fd5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611bb95760405163075fd2b160e01b815260040160405180910390fd5b565b600154600003611bb9576040517f3da3f98c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000825111611c32576040517fc5f7c4c000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082806020019051810190611c489190613c13565b905080600003611c84576040517ff881a10d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526005602052604090206001600b5460ff166002811115611cab57611cab613403565b03611eb65780548214611cd45760405163c1d17bef60e01b815260048101839052602401610f4f565b6001600882015460ff166004811115611cef57611cef613403565b14611d10576040516344980d8f60e01b815260048101839052602401610f4f565b6000611d1b83610f21565b90506000611d2c8360010154611148565b90508082108015611d41575060008360010154115b15611d78576040517fcce7930800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517f068bcd8d0000000000000000000000000000000000000000000000000000000081526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163068bcd8d91611de59160040190815260200190565b600060405180830381865afa158015611e02573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611e2a9190810190613edd565b604081015160048601546001870154929350611e51926001600160a01b0390911690612a7d565b60088401805460ff191660049081179091558401546001850154604080518881526001600160a01b0390931660208401528201527fa7932e9c92f31e1ed56b29d00bbe669a97484dc24de28dd9c8c0429df7f358479060600160405180910390a15050505b5050505050565b60006003821115611f1e5750806000611ed7600283613c68565b611ee2906001613c42565b90505b81811015611f1857905080600281611efd8186613c68565b611f079190613c42565b611f119190613c68565b9050611ee5565b50919050565b8115611f28575060015b919050565b611a398282604051602401611f43929190613f91565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d000000000000000000000000000000000000000000000000000000000179052612ac2565b600080611fad8484612805565b91509150816000148015611fbf575080155b15611fca5750505050565b600784015560039092019190915550565b60008083806020019051810190611ff29190613fb3565b8051909150600003612030576040517f4e79178600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600b5460ff16600281111561204957612049613403565b036122305760208101516001600160a01b0316612092576040517fe622e04000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608101516001600160a01b03166120d6576040517f596a094c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000306001600160a01b03166315cc481e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061213a919061405a565b6001600160a01b031663068bcd8d6001546040518263ffffffff1660e01b815260040161216991815260200190565b600060405180830381865afa158015612186573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121ae9190810190613edd565b604001519050806001600160a01b031682606001516001600160a01b031614612203576040517fa29c498600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61221082604001516125b6565b1561222e57604051630efd728560e21b815260040160405180910390fd5b505b6000600c6000815461224190614077565b9182905550600081815260056020818152604080842085815592830180546001600160a01b038b811673ffffffffffffffffffffffffffffffffffffffff199283161790925588840151600486018054918416918316919091179055606089015160068601805491909316911617905586015160018084019190915560088301805460ff19169091179055436007830155600382019290925560808501518051600a8301908155928101519394509092909190600b84019061230390826140de565b505060015460408051918252602082018590527ffcf3b1aa65a464cef2889608f99e8b8c0f680a4be6c2acb9d961c536a5a9294b92500160405180910390a150949350505050565b601154600090610f1b9083613c8a565b60145460048054604080516378a0b8a960e01b81529051600094859490936001600160a01b0316926378a0b8a992818301926020928290030181865afa1580156123a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123cd9190613c13565b600480546040516316308e2560e11b81526001600160a01b0389811693820193909352879290911690632c611c4a90602401602060405180830381865afa15801561241c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124409190613c13565b61244a9190613c55565b6124549190613c55565b61245e9190613c68565b60048054604051637817ee4f60e01b81526001600160a01b0388811693820193909352306024820152929350600092911690637817ee4f90604401602060405180830381865afa1580156124b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124da9190613c13565b6124e49083613c55565b95945050505050565b6000600160801b83106125425760405162461bcd60e51b815260206004820152601c60248201527f5f612073686f756c64206265206c657373207468616e20325e313238000000006044820152606401610f4f565b50600160801b82825b801561258e5780600116600003612570576125668283612ae3565b915060011c61254b565b61257a8383612ae3565b9250612587600182613c55565b905061254b565b505092915050565b60006001600160a01b038216156125ae576001610f1b565b600092915050565b60006125c56298968083613c8a565b6002546009546125d59190613c8a565b116125ae57506001919050565b6001600160a01b03811660009081526007602090815260408083208054825181850281018501909352808352919290919083018282801561264257602002820191906000526020600020905b81548152602001906001019080831161262e575b5050505050905060005b8151811015610c425760008282815181106126695761266961419e565b60200260200101519050600060056000838152602001908152602001600020905061269382612bd9565b156126f8576001600160a01b03851660009081526009820160205260408120805490829055600283018054919283926126cd908490613c55565b9250508190555080600d60008282546126e69190613c55565b909155506126f690508282611fa0565b505b5050808061270590614077565b91505061264c565b601154600090819061271f9084613c8a565b90506118b7670de0b6b3a764000082613c68565b600080670de0b6b3a7640000601160000154846127509190613c8a565b61275a9190613c68565b60048054604051637817ee4f60e01b81526001600160a01b0388811693820193909352306024820152929350600092911690637817ee4f90604401602060405180830381865afa1580156127b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d69190613c13565b6012549091506127e68383613c42565b11156127fd576012546127fa908290613c55565b91505b509392505050565b600080439050808460070154111561281f5761281f6141b4565b8084600701540361283557506000905080612856565b6128538460070154826128489190613c55565b856003015485611098565b91505b9250929050565b6000805460ff19168215159081179091556040519081527fd94c9bc4d43c51d8dc345a016d8e3d994432fac68e72832e4cf3a616bd8efae0906020015b60405180910390a150565b60006001600160a01b038216156128bd576002610f1b565b600392915050565b6128cd611b70565b60015415612907576040517f439a74c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003612941576040517f7fcce2a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600155565b61294f81612c13565b600480546040517f477a5cc00000000000000000000000000000000000000000000000000000000081526001600160a01b03848116938201939093523060248201526000929091169063477a5cc090604401602060405180830381865afa1580156129be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129e29190613e33565b905080612a1b576040517f5fccb67f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083806020019051810190612a3191906141ca565b9050612a3d8382612d3b565b612a478382612f00565b50505050565b6040518181527f46aeb5d8770fc4474bc2dfa118fd2595f7fb33ce2cbce6f4e5a3dabfe0f763399060200161289a565b7fffffffffffffffffffffffff11111111111111111111111111111111111111126001600160a01b03841601612ab757610c428282613324565b610c42838383613340565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000600160801b831115612b5f5760405162461bcd60e51b815260206004820152602860248201527f5f612073686f756c64206265206c657373207468616e206f7220657175616c2060448201527f746f20325e3132380000000000000000000000000000000000000000000000006064820152608401610f4f565b600160801b8210612bb25760405162461bcd60e51b815260206004820152601c60248201527f5f622073686f756c64206265206c657373207468616e20325e313238000000006044820152606401610f4f565b60806f80000000000000000000000000000000612bcf8486613c8a565b6112699190613c42565b60008181526005602052604081205415801590610f1b575050600090815260056020819052604090912001546001600160a01b0316151590565b6001600160a01b038116612c53576040517fd1f2828800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004546001600160a01b0316612c7c57604051635df4b1ef60e01b815260040160405180910390fd5b600480546040517fa230c5240000000000000000000000000000000000000000000000000000000081526001600160a01b038481169382019390935291169063a230c52490602401602060405180830381865afa158015612ce1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d059190613e33565b611387576040517f6a5cfb6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b8251811015612df857828181518110612d5a57612d5a61419e565b60200260200101516000015160000315612de6576000838281518110612d8257612d8261419e565b6020026020010151600001519050612d9981612bd9565b612db95760405163c1d17bef60e01b815260048101829052602401610f4f565b838281518110612dcb57612dcb61419e565b60200260200101516020015183612de29190614275565b9250505b80612df081614077565b915050612d3f565b506001600160a01b038316600090815260066020526040812054612e1c908361338f565b60048054604051637817ee4f60e01b81526001600160a01b0388811693820193909352306024820152929350600092911690637817ee4f90604401602060405180830381865afa158015612e74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e989190613c13565b905080821115612ede576040517fd64182fe0000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610f4f565b506001600160a01b039093166000908152600660205260409020929092555050565b606060005b8251811015612a47576000838281518110612f2257612f2261419e565b60200260200101516000015190508251600003612f7e5760408051600180825281830190925290602080830190803683370190505092508083600081518110612f6d57612f6d61419e565b6020026020010181815250506130d1565b6000805b8451811015612ffd5782858281518110612f9e57612f9e61419e565b602002602001015103612feb576040517fadebb154000000000000000000000000000000000000000000000000000000008152600481018490526024810182905260019250604401610f4f565b80612ff581614077565b915050612f82565b50806130cf576000845160016130139190613c42565b67ffffffffffffffff81111561302b5761302b61358b565b604051908082528060200260200182016040528015613054578160200160208202803683370190505b50905060005b85518110156130ac578581815181106130755761307561419e565b602002602001015182828151811061308f5761308f61419e565b6020908102919091010152806130a481614077565b91505061305a565b5082818651815181106130c1576130c161419e565b602090810291909101015293505b505b60008483815181106130e5576130e561419e565b60209081029190910181015181015160008481526005835260408082206001600160a01b038b16835260098101909452812054919350613125828561338f565b6001600160a01b038a1660009081526009850160205260408120829055909150805b6001600160a01b038b166000908152600760205260409020548110156131be5784546001600160a01b038c1660009081526007602052604090208054839081106131935761319361419e565b9060005260206000200154036131ac57600191506131be565b806131b681614077565b915050613147565b50806131f4576001600160a01b038a16600090815260076020908152604082208654815460018101835591845291909220909101555b818311613244576132058383613c55565b600d60008282546132169190613c42565b9091555061322690508383613c55565b8460020160008282546132399190613c42565b909155506132889050565b61324e8284613c55565b600d600082825461325f9190613c55565b9091555061326f90508284613c55565b8460020160008282546132829190613c55565b90915550505b836007015460000361329f5743600785015561330b565b6132a98484611fa0565b60028401546003850154604080516001600160a01b038e168152602081018a9052908101859052606081019290925260808201527f0227f642ddcf2042ceaeafadb9d540f432072c00cd4862881667168dcc14710f9060a00160405180910390a15b505050505050808061331c90614077565b915050612f05565b60008060008084865af1611a395763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716613385576390b8ec186000526004601cfd5b6000603452505050565b60008061339c8385614275565b905060008112156118b7576040517f3bbc7142000000000000000000000000000000000000000000000000000000008152600481018590526024810184905260448101829052606401610f4f565b6000602082840312156133fc57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6005811061342957613429613403565b9052565b60005b83811015613448578181015183820152602001613430565b50506000910152565b6000815180845261346981602086016020860161342d565b601f01601f19169290920160200192915050565b80518252600060208201516040602085015261349c6040850182613451565b949350505050565b60006101408c83528b60208401528a60408401528960608401526001600160a01b03808a16608085015280891660a085015280881660c0850152508560e08401526134f3610100840186613419565b806101208401526135068184018561347d565b9d9c50505050505050505050505050565b60006020828403121561352957600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146118b757600080fd5b6001600160a01b038116811461138757600080fd5b60006020828403121561358057600080fd5b81356118b781613559565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156135c4576135c461358b565b60405290565b60405160e0810167ffffffffffffffff811182821017156135c4576135c461358b565b60405160c0810167ffffffffffffffff811182821017156135c4576135c461358b565b60405160a0810167ffffffffffffffff811182821017156135c4576135c461358b565b604051601f8201601f1916810167ffffffffffffffff8111828210171561365c5761365c61358b565b604052919050565b600067ffffffffffffffff82111561367e5761367e61358b565b5060051b60200190565b600082601f83011261369957600080fd5b813560206136ae6136a983613664565b613633565b82815260059290921b840181019181810190868411156136cd57600080fd5b8286015b848110156136f15780356136e481613559565b83529183019183016136d1565b509695505050505050565b600067ffffffffffffffff8211156137165761371661358b565b50601f01601f191660200190565b600082601f83011261373557600080fd5b81356137436136a9826136fc565b81815284602083860101111561375857600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561378a57600080fd5b833567ffffffffffffffff808211156137a257600080fd5b6137ae87838801613688565b945060208601359150808211156137c457600080fd5b506137d186828701613724565b92505060408401356137e281613559565b809150509250925092565b6000806040838503121561380057600080fd5b823561380b81613559565b946020939093013593505050565b6000806040838503121561382c57600080fd5b823567ffffffffffffffff81111561384357600080fd5b61384f85828601613724565b925050602083013561386081613559565b809150509250929050565b6004811061342957613429613403565b60208101610f1b828461386b565b60008060006060848603121561389e57600080fd5b505081359360208301359350604090920135919050565b6003811061342957613429613403565b60208101610f1b82846138b5565b6020815260006118b7602083018461347d565b600080604083850312156138f957600080fd5b823567ffffffffffffffff8082111561391157600080fd5b61391d86838701613688565b935060209150818501358181111561393457600080fd5b8501601f8101871361394557600080fd5b80356139536136a982613664565b81815260059190911b8201840190848101908983111561397257600080fd5b8584015b838110156139aa5780358681111561398e5760008081fd5b61399c8c8983890101613724565b845250918601918601613976565b508096505050505050509250929050565b602080825282518282018190526000919060409081850190868401855b82811015613a0657815180516001600160a01b031685528601518685015292840192908501906001016139d8565b5091979650505050505050565b801515811461138757600080fd5b600060208284031215613a3357600080fd5b81356118b781613a13565b6001600160a01b038b811682528a811660208301528916604082015260608101889052608081018790526101408101613a7a60a0830188613419565b8560c08301528460e083015283610100830152826101208301529b9a5050505050505050505050565b60008060408385031215613ab657600080fd5b82359150602083013561386081613559565b60006020808385031215613adb57600080fd5b823567ffffffffffffffff811115613af257600080fd5b8301601f81018513613b0357600080fd5b8035613b116136a982613664565b81815260069190911b82018301908381019087831115613b3057600080fd5b928401925b82841015613b735760408489031215613b4e5760008081fd5b613b566135a1565b843581528585013586820152825260409093019290840190613b35565b979650505050505050565b6020810160078310613b9257613b92613403565b91905290565b60008060408385031215613bab57600080fd5b82359150602083013567ffffffffffffffff811115613bc957600080fd5b613bd585828601613724565b9150509250929050565b600181811c90821680613bf357607f821691505b602082108103611f1857634e487b7160e01b600052602260045260246000fd5b600060208284031215613c2557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610f1b57610f1b613c2c565b81810381811115610f1b57610f1b613c2c565b600082613c8557634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610f1b57610f1b613c2c565b805160048110611f2857600080fd5b600060808284031215613cc257600080fd5b6040516080810181811067ffffffffffffffff82111715613ce557613ce561358b565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006101408284031215613d2957600080fd5b613d316135ca565b8251613d3c81613559565b80825250602083015160208201526040830151604082015260608301516060820152608083015160038110613d7057600080fd5b6080820152613d8160a08401613ca1565b60a0820152613d938460c08501613cb0565b60c08201529392505050565b6000610160820190508382526001600160a01b0383511660208301526020830151604083015260408301516060830152606083015160808301526080830151613deb60a08401826138b5565b5060a0830151613dfe60c084018261386b565b5060c09290920151805160e0830152602081015161010083015260408101516101208301526060015161014090910152919050565b600060208284031215613e4557600080fd5b81516118b781613a13565b600060408284031215613e6257600080fd5b613e6a6135a1565b905081518152602082015167ffffffffffffffff811115613e8a57600080fd5b8201601f81018413613e9b57600080fd5b8051613ea96136a9826136fc565b818152856020838501011115613ebe57600080fd5b613ecf82602083016020860161342d565b602084015250909392505050565b600060208284031215613eef57600080fd5b815167ffffffffffffffff80821115613f0757600080fd5b9083019060c08286031215613f1b57600080fd5b613f236135ed565b825181526020830151613f3581613559565b60208201526040830151613f4881613559565b6040820152606083015182811115613f5f57600080fd5b613f6b87828601613e50565b6060830152506080830151608082015260a083015160a082015280935050505092915050565b604081526000613fa46040830185613451565b90508260208301529392505050565b600060208284031215613fc557600080fd5b815167ffffffffffffffff80821115613fdd57600080fd5b9083019060a08286031215613ff157600080fd5b613ff9613610565b82518152602083015161400b81613559565b602082015260408381015190820152606083015161402881613559565b606082015260808301518281111561403f57600080fd5b61404b87828601613e50565b60808301525095945050505050565b60006020828403121561406c57600080fd5b81516118b781613559565b60006001820161408957614089613c2c565b5060010190565b601f821115610c4257600081815260208120601f850160051c810160208610156140b75750805b601f850160051c820191505b818110156140d6578281556001016140c3565b505050505050565b815167ffffffffffffffff8111156140f8576140f861358b565b61410c816141068454613bdf565b84614090565b602080601f83116001811461414157600084156141295750858301515b600019600386901b1c1916600185901b1785556140d6565b600085815260208120601f198616915b8281101561417057888601518255948401946001909101908401614151565b508582101561418e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fd5b600060208083850312156141dd57600080fd5b825167ffffffffffffffff8111156141f457600080fd5b8301601f8101851361420557600080fd5b80516142136136a982613664565b81815260069190911b8201830190838101908783111561423257600080fd5b928401925b82841015613b7357604084890312156142505760008081fd5b6142586135a1565b845181528585015186820152825260409093019290840190614237565b808201828112600083128015821682158216171561258e5761258e613c2c56fea2646970667358221220f8dc19bc42008b4653ac7ab76f0d02267cf9934c7bf3a7ecaeb0897d8545944b64736f6c63430008130033",
    "sourceMap": "2905:36089:98:-:0;;;5980:1;5947:34;;6097:26;6280:7;6097:8;:26;:::i;:::-;6061:62;;6958:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5210:135:11;;;;;;;;;;;-1:-1:-1;;;5210:135:11;;;;;;;;-1:-1:-1;;;;;5268:19:11;;;;5320:17;;7006:5:98;;5320:17:11;;5210:135;;5320:17;;:::i;:::-;;;;-1:-1:-1;;5320:17:11;;;;;;;;;5310:28;;5320:17;5310:28;;;;5297:41;;-1:-1:-1;2905:36089:98;;-1:-1:-1;;2905:36089:98;14:265:109;87:9;;;118;;135:15;;;129:22;;115:37;105:168;;195:10;190:3;186:20;183:1;176:31;230:4;227:1;220:15;258:4;255:1;248:15;105:168;14:265;;;;:::o;284:290::-;354:6;407:2;395:9;386:7;382:23;378:32;375:52;;;423:1;420;413:12;375:52;449:16;;-1:-1:-1;;;;;494:31:109;;484:42;;474:70;;540:1;537;530:12;474:70;563:5;284:290;-1:-1:-1;;;284:290:109:o;579:548::-;691:4;720:2;749;738:9;731:21;781:6;775:13;824:6;819:2;808:9;804:18;797:34;849:1;859:140;873:6;870:1;867:13;859:140;;;968:14;;;964:23;;958:30;934:17;;;953:2;930:26;923:66;888:10;;859:140;;;863:3;1048:1;1043:2;1034:6;1023:9;1019:22;1015:31;1008:42;1118:2;1111;1107:7;1102:2;1094:6;1090:15;1086:29;1075:9;1071:45;1067:54;1059:62;;;;579:548;;;;:::o;:::-;2905:36089:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061033f5760003560e01c8063782aadff116101ae578063bcc5b93b116100eb578063e0dd2c381161008f578063edd146cc1161006c578063edd146cc14610a6f578063ef2920fc14610a8f578063f5b0dfb714610aa2578063fc1711f214610ac257005b8063e0dd2c3814610a02578063e33add9314610a22578063eb11af9314610a4257005b8063d1e36232116100c8578063d1e362321461098f578063d7050f07146109a4578063dc96ff2d146109ba578063df868ed3146109ea57005b8063bcc5b93b1461090e578063c7f758a814610944578063cbfc1daa1461097a57005b8063a1aab33f11610152578063aba9ffee1161012f578063aba9ffee14610896578063abdceae1146108ac578063b2b878d0146108c1578063b5f620ce146108ee57005b8063a1aab33f14610810578063a47ff7e514610826578063a574cea41461086957005b8063824ea8ed1161018b578063824ea8ed14610788578063868c57b8146107a8578063950559d7146107c8578063a0cf0aea146107e857005b8063782aadff1461073d578063814516ad1461075d578063817b1cd21461077257005b8063346db8cb1161027c57806354fac919116102205780636003e414116101fd5780636003e414146106c75780636453d9c4146106e757806369fa25c41461070757806376365af71461072757005b806354fac9191461066457806359a5db8b1461067a5780635db64b991461069a57005b8063406244d811610259578063406244d8146105e757806342fda9c7146105fc5780634ab4ba421461062f5780634d31d0871461064457005b8063346db8cb1461058b578063351d9f96146105ab57806338fff2d0146105d257005b806311f22ae3116102e35780631aa91a9e116102c05780631aa91a9e146105115780632bbe0cae146105315780632dbd6fdd146105445780632ed04b2b1461056b57005b806311f22ae31461048a57806313845d0e146104aa57806315cc481e146104ca57005b806305d191751161031c57806305d19175146104195780630a6f0ee91461043d5780630c0512e91461045d5780630f529ba21461047357005b8063013cf08b1461034857806301ffc9a714610387578063058aca44146103f957005b3661034657005b005b34801561035457600080fd5b506103686103633660046133ea565b610ae2565b60405161037e9a999897969594939291906134a4565b60405180910390f35b34801561039357600080fd5b506103e96103a2366004613517565b7fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b604051901515815260200161037e565b34801561040557600080fd5b5061034661041436600461356e565b610bed565b34801561042557600080fd5b5061042f600f5481565b60405190815260200161037e565b34801561044957600080fd5b50610346610458366004613775565b610c27565b34801561046957600080fd5b5061042f600c5481565b34801561047f57600080fd5b5061042f6298968081565b34801561049657600080fd5b506103466104a53660046133ea565b610c47565b3480156104b657600080fd5b5061042f6104c53660046137ed565b610c8e565b3480156104d657600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161037e565b34801561051d57600080fd5b5061042f61052c3660046133ea565b610f21565b6104f961053f366004613819565b610fac565b34801561055057600080fd5b5060105461055e9060ff1681565b60405161037e919061387b565b34801561057757600080fd5b5061042f6105863660046137ed565b610fcf565b34801561059757600080fd5b5061042f6105a6366004613889565b611098565b3480156105b757600080fd5b50600b546105c59060ff1681565b60405161037e91906138c5565b3480156105de57600080fd5b5060015461042f565b3480156105f357600080fd5b5061042f600a81565b34801561060857600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061042f565b34801561063b57600080fd5b5060025461042f565b34801561065057600080fd5b506103e961065f36600461356e565b61113d565b34801561067057600080fd5b5061042f60085481565b34801561068657600080fd5b5061042f6106953660046133ea565b611148565b3480156106a657600080fd5b5061042f6106b536600461356e565b60066020526000908152604090205481565b3480156106d357600080fd5b506004546104f9906001600160a01b031681565b3480156106f357600080fd5b5061034661070236600461356e565b611272565b34801561071357600080fd5b506103466107223660046133ea565b61138a565b34801561073357600080fd5b5061042f60095481565b34801561074957600080fd5b5061042f6107583660046137ed565b6113c9565b34801561076957600080fd5b506103466114ab565b34801561077e57600080fd5b5061042f600d5481565b34801561079457600080fd5b506103e96107a33660046133ea565b6115b8565b3480156107b457600080fd5b5061042f6107c33660046137ed565b611615565b3480156107d457600080fd5b5061042f6107e33660046133ea565b611646565b3480156107f457600080fd5b506104f973eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561081c57600080fd5b5061042f600a5481565b34801561083257600080fd5b506011546012546013546014546108499392919084565b60408051948552602085019390935291830152606082015260800161037e565b34801561087557600080fd5b506108896108843660046133ea565b611670565b60405161037e91906138d3565b3480156108a257600080fd5b5061042f600e5481565b3480156108b857600080fd5b5060115461042f565b3480156108cd57600080fd5b506108e16108dc3660046138e6565b61174f565b60405161037e91906139bb565b3480156108fa57600080fd5b50610346610909366004613a21565b61176a565b34801561091a57600080fd5b5061042f61092936600461356e565b6001600160a01b031660009081526006602052604090205490565b34801561095057600080fd5b5061096461095f3660046133ea565b611773565b60405161037e9a99989796959493929190613a3e565b34801561098657600080fd5b5060135461042f565b34801561099b57600080fd5b5061042f611875565b3480156109b057600080fd5b5061042f61271081565b3480156109c657600080fd5b5061042f6109d53660046133ea565b60009081526005602052604090206002015490565b3480156109f657600080fd5b5060005460ff166103e9565b348015610a0e57600080fd5b5061042f610a1d366004613aa3565b611890565b348015610a2e57600080fd5b50610346610a3d366004613ac8565b6118be565b348015610a4e57600080fd5b50610a62610a5d36600461356e565b6118d7565b60405161037e9190613b7e565b348015610a7b57600080fd5b50610346610a8a366004613b98565b6118e2565b610346610a9d366004613819565b611a1f565b348015610aae57600080fd5b50610346610abd3660046133ea565b611a3d565b348015610ace57600080fd5b50610346610add3660046133ea565b611a66565b60056020818152600092835260409283902080546001820154600283015460038401546004850154968501546006860154600787015460088801548b51808d01909c52600a890180548d52600b8a018054999d989c979b969a6001600160a01b039889169a968916999890951697939660ff909316959192840191610b6690613bdf565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9290613bdf565b8015610bdf5780601f10610bb457610100808354040283529160200191610bdf565b820191906000526020600020905b815481529060010190602001808311610bc257829003601f168201915b50505050508152505090508a565b33610bf781611aa5565b506004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610c2f611b70565b610c37611bbb565b610c42838383611bf7565b505050565b33610c5181611aa5565b60098290556040518281527f08e39b387d1f739ce0d2553bb31822392e3f67c62c6c0a215120ab4a6841a8ab906020015b60405180910390a15050565b60048054604080516378a0b8a960e01b8152905160009384936001600160a01b0316926378a0b8a992818301926020928290030181865afa158015610cd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfb9190613c13565b600480546040516316308e2560e11b81526001600160a01b0388811693820193909352869290911690632c611c4a90602401602060405180830381865afa158015610d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6e9190613c13565b610d789190613c42565b610d829190613c55565b90506000620186a0610db560116003015484610d9e9190613c68565b610db090670de0b6b3a7640000613c8a565b611ebd565b610dbf9190613c68565b9050610e006040518060400160405280600f81526020017f746f74616c45787472615374616b65000000000000000000000000000000000081525083611f2d565b610e446040518060400160405280601a81526020017f706f696e74436f6e6669672e746f6b656e73506572506f696e74000000000000815250601160030154611f2d565b610e836040518060400160405280600e81526020017f6e6577546f74616c506f696e747300000000000000000000000000000000000081525082611f2d565b60048054604051637817ee4f60e01b81526001600160a01b038881169382019390935230602482015260009290911690637817ee4f90604401602060405180830381865afa158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd9190613c13565b601354610f0b908490613c42565b610f159190613c55565b93505050505b92915050565b600081815260056020526040812080548314610f585760405163c1d17bef60e01b8152600481018490526024015b60405180910390fd5b6001600882015460ff166004811115610f7357610f73613403565b14610f94576040516344980d8f60e01b815260048101849052602401610f4f565b610fa2818260020154611fa0565b6003015492915050565b6000610fb6611b70565b610fbe611bbb565b610fc88383611fdb565b9050610f1b565b600080600260105460ff166003811115610feb57610feb613403565b148061100d5750600160105460ff16600381111561100b5761100b613403565b145b156110225761101b8361234b565b905061102f565b61102c848461235b565b90505b80600e60008282546110419190613c55565b9091555050604080516001600160a01b0386168152602081018590529081018290527f70b752f3fadb6ac131c0ece847fcbb6994ec56ed6411595710fd9b29c6ac6cc1906060015b60405180910390a19392505050565b60008084905060006110be629896806080600854901b6110b89190613c68565b836124ed565b905060806f80000000000000000000000000000000600854629896806110e49190613c55565b6110f284600160801b613c55565b6110ff6298968089613c8a565b6111099190613c8a565b6111139190613c68565b61111d8885613c8a565b6111279190613c42565b6111319190613c42565b901c9695505050505050565b6000610f1b82612596565b60008060025411611185576040517fed4421ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61118e826125b6565b156111ac57604051630efd728560e21b815260040160405180910390fd5b6002546000906111c58468010000000000000000613c8a565b6111cf9190613c68565b62989680600954680100000000000000006111ea9190613c8a565b6111f49190613c68565b6111fe9190613c55565b9050604061120a611875565b60085461121a9062989680613c55565b62989680604061122a8680613c8a565b901c629896806080600a54901b6112419190613c68565b61124b9190613c68565b6112559190613c8a565b61125f9190613c68565b6112699190613c8a565b901c9392505050565b60048054604051637817ee4f60e01b81526001600160a01b0384811693820193909352306024820152911690637817ee4f90604401602060405180830381865afa1580156112c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e89190613c13565b600e60008282546112f99190613c55565b9091555050600480546040517f22bcf9990000000000000000000000000000000000000000000000000000000081526001600160a01b03848116938201939093523060248201529116906322bcf99990604401600060405180830381600087803b15801561136657600080fd5b505af115801561137a573d6000803e3d6000fd5b50505050611387816125e2565b50565b3361139481611aa5565b60088290556040518281527f592dcd55d60d892e7fcb3ba105013312e99691cd59f91e15f83cb67cb5a505f290602001610c82565b600080600260105460ff1660038111156113e5576113e5613403565b036113fa576113f38361270d565b905061144d565b600160105460ff16600381111561141357611413613403565b03611422576113f38484612733565b600360105460ff16600381111561143b5761143b613403565b0361144d5761144a8484610c8e565b90505b80600e600082825461145f9190613c42565b9091555050604080516001600160a01b0386168152602081018590529081018290527f0b9150e1e54346ed3fa36b977cd5d65dca5a649c737c3174a26bddaadd47667a90606001611089565b600480546040517f0d4a8b49000000000000000000000000000000000000000000000000000000008152339281018390523060248201526001600160a01b0390911690630d4a8b4990604401600060405180830381600087803b15801561151157600080fd5b505af1158015611525573d6000803e3d6000fd5b505060048054604051637817ee4f60e01b81526001600160a01b038681169382019390935230602482015291169250637817ee4f9150604401602060405180830381865afa15801561157b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159f9190613c13565b600e60008282546115b09190613c42565b909155505050565b60008181526005602052604081206002810154829081906115da908490612805565b915091508160001480156115ec575080155b156115f957826003015491505b60006116088460010154611148565b9092101595945050505050565b6007602052816000526040600020818154811061163157600080fd5b90600052602060002001600091509150505481565b6000600854629896806116599190613c55565b6116666298968084613c8a565b610f1b9190613c68565b604080518082019091526000815260606020820152600060056000848152602001908152602001600020905080600a01604051806040016040529081600082015481526020016001820180546116c590613bdf565b80601f01602080910402602001604051908101604052809291908181526020018280546116f190613bdf565b801561173e5780601f106117135761010080835404028352916020019161173e565b820191906000526020600020905b81548152906001019060200180831161172157829003601f168201915b505050505081525050915050919050565b606060405163d623472560e01b815260040160405180910390fd5b6113878161285d565b6000806000806000806000806000806000600560008d8152602001908152602001600020905080600101546000146117b7576117b28160010154611148565b6117ba565b60005b92508060050160009054906101000a90046001600160a01b03168160040160009054906101000a90046001600160a01b03168260060160009054906101000a90046001600160a01b0316836001015484600201548560080160009054906101000a900460ff16866007015487600301548a896009016000336001600160a01b03166001600160a01b03168152602001908152602001600020549a509a509a509a509a509a509a509a509a509a50509193959799509193959799565b6000600f54600e54116118895750600f5490565b50600e5490565b60008281526005602090815260408083206001600160a01b03851684526009019091528120545b9392505050565b60405163d623472560e01b815260040160405180910390fd5b6000610f1b826128a5565b6118eb826128c5565b6000818060200190518101906119019190613d16565b80519091506001600160a01b031661192c57604051635df4b1ef60e01b815260040160405180910390fd5b80516004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055602081015160085560408101516009556060810151600a556080810151600b805460ff1916600183600281111561199357611993613403565b021790555060a08101516010805460ff191660018360038111156119b9576119b9613403565b021790555060c081015180516011556020810151601255604080820151601355606090910151601455517f76164f4c577324c2cac6dbb73d6b99b5c05b6894d54aa69bd565b68f9e13bdcf90611a129085908490613d9f565b60405180910390a1505050565b611a27611b70565b611a2f611bbb565b611a398282612946565b5050565b611a45611b70565b8060026000828254611a579190613c42565b90915550611387905081612a4d565b33611a7081611aa5565b600a8290556040518281527f30ee8206062f283e56a0af2b02138016bf7442ded26ad68a92a18a9dd246fb4990602001610c82565b6001546040517f29e40d4b00000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b0382811660248301527f000000000000000000000000000000000000000000000000000000000000000016906329e40d4b90604401602060405180830381865afa158015611b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b539190613e33565b6113875760405163075fd2b160e01b815260040160405180910390fd5b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611bb95760405163075fd2b160e01b815260040160405180910390fd5b565b600154600003611bb9576040517f3da3f98c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000825111611c32576040517fc5f7c4c000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082806020019051810190611c489190613c13565b905080600003611c84576040517ff881a10d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008181526005602052604090206001600b5460ff166002811115611cab57611cab613403565b03611eb65780548214611cd45760405163c1d17bef60e01b815260048101839052602401610f4f565b6001600882015460ff166004811115611cef57611cef613403565b14611d10576040516344980d8f60e01b815260048101839052602401610f4f565b6000611d1b83610f21565b90506000611d2c8360010154611148565b90508082108015611d41575060008360010154115b15611d78576040517fcce7930800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040517f068bcd8d0000000000000000000000000000000000000000000000000000000081526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163068bcd8d91611de59160040190815260200190565b600060405180830381865afa158015611e02573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611e2a9190810190613edd565b604081015160048601546001870154929350611e51926001600160a01b0390911690612a7d565b60088401805460ff191660049081179091558401546001850154604080518881526001600160a01b0390931660208401528201527fa7932e9c92f31e1ed56b29d00bbe669a97484dc24de28dd9c8c0429df7f358479060600160405180910390a15050505b5050505050565b60006003821115611f1e5750806000611ed7600283613c68565b611ee2906001613c42565b90505b81811015611f1857905080600281611efd8186613c68565b611f079190613c42565b611f119190613c68565b9050611ee5565b50919050565b8115611f28575060015b919050565b611a398282604051602401611f43929190613f91565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d000000000000000000000000000000000000000000000000000000000179052612ac2565b600080611fad8484612805565b91509150816000148015611fbf575080155b15611fca5750505050565b600784015560039092019190915550565b60008083806020019051810190611ff29190613fb3565b8051909150600003612030576040517f4e79178600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600b5460ff16600281111561204957612049613403565b036122305760208101516001600160a01b0316612092576040517fe622e04000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608101516001600160a01b03166120d6576040517f596a094c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000306001600160a01b03166315cc481e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061213a919061405a565b6001600160a01b031663068bcd8d6001546040518263ffffffff1660e01b815260040161216991815260200190565b600060405180830381865afa158015612186573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121ae9190810190613edd565b604001519050806001600160a01b031682606001516001600160a01b031614612203576040517fa29c498600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61221082604001516125b6565b1561222e57604051630efd728560e21b815260040160405180910390fd5b505b6000600c6000815461224190614077565b9182905550600081815260056020818152604080842085815592830180546001600160a01b038b811673ffffffffffffffffffffffffffffffffffffffff199283161790925588840151600486018054918416918316919091179055606089015160068601805491909316911617905586015160018084019190915560088301805460ff19169091179055436007830155600382019290925560808501518051600a8301908155928101519394509092909190600b84019061230390826140de565b505060015460408051918252602082018590527ffcf3b1aa65a464cef2889608f99e8b8c0f680a4be6c2acb9d961c536a5a9294b92500160405180910390a150949350505050565b601154600090610f1b9083613c8a565b60145460048054604080516378a0b8a960e01b81529051600094859490936001600160a01b0316926378a0b8a992818301926020928290030181865afa1580156123a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123cd9190613c13565b600480546040516316308e2560e11b81526001600160a01b0389811693820193909352879290911690632c611c4a90602401602060405180830381865afa15801561241c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124409190613c13565b61244a9190613c55565b6124549190613c55565b61245e9190613c68565b60048054604051637817ee4f60e01b81526001600160a01b0388811693820193909352306024820152929350600092911690637817ee4f90604401602060405180830381865afa1580156124b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124da9190613c13565b6124e49083613c55565b95945050505050565b6000600160801b83106125425760405162461bcd60e51b815260206004820152601c60248201527f5f612073686f756c64206265206c657373207468616e20325e313238000000006044820152606401610f4f565b50600160801b82825b801561258e5780600116600003612570576125668283612ae3565b915060011c61254b565b61257a8383612ae3565b9250612587600182613c55565b905061254b565b505092915050565b60006001600160a01b038216156125ae576001610f1b565b600092915050565b60006125c56298968083613c8a565b6002546009546125d59190613c8a565b116125ae57506001919050565b6001600160a01b03811660009081526007602090815260408083208054825181850281018501909352808352919290919083018282801561264257602002820191906000526020600020905b81548152602001906001019080831161262e575b5050505050905060005b8151811015610c425760008282815181106126695761266961419e565b60200260200101519050600060056000838152602001908152602001600020905061269382612bd9565b156126f8576001600160a01b03851660009081526009820160205260408120805490829055600283018054919283926126cd908490613c55565b9250508190555080600d60008282546126e69190613c55565b909155506126f690508282611fa0565b505b5050808061270590614077565b91505061264c565b601154600090819061271f9084613c8a565b90506118b7670de0b6b3a764000082613c68565b600080670de0b6b3a7640000601160000154846127509190613c8a565b61275a9190613c68565b60048054604051637817ee4f60e01b81526001600160a01b0388811693820193909352306024820152929350600092911690637817ee4f90604401602060405180830381865afa1580156127b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d69190613c13565b6012549091506127e68383613c42565b11156127fd576012546127fa908290613c55565b91505b509392505050565b600080439050808460070154111561281f5761281f6141b4565b8084600701540361283557506000905080612856565b6128538460070154826128489190613c55565b856003015485611098565b91505b9250929050565b6000805460ff19168215159081179091556040519081527fd94c9bc4d43c51d8dc345a016d8e3d994432fac68e72832e4cf3a616bd8efae0906020015b60405180910390a150565b60006001600160a01b038216156128bd576002610f1b565b600392915050565b6128cd611b70565b60015415612907576040517f439a74c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003612941576040517f7fcce2a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600155565b61294f81612c13565b600480546040517f477a5cc00000000000000000000000000000000000000000000000000000000081526001600160a01b03848116938201939093523060248201526000929091169063477a5cc090604401602060405180830381865afa1580156129be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129e29190613e33565b905080612a1b576040517f5fccb67f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083806020019051810190612a3191906141ca565b9050612a3d8382612d3b565b612a478382612f00565b50505050565b6040518181527f46aeb5d8770fc4474bc2dfa118fd2595f7fb33ce2cbce6f4e5a3dabfe0f763399060200161289a565b7fffffffffffffffffffffffff11111111111111111111111111111111111111126001600160a01b03841601612ab757610c428282613324565b610c42838383613340565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000600160801b831115612b5f5760405162461bcd60e51b815260206004820152602860248201527f5f612073686f756c64206265206c657373207468616e206f7220657175616c2060448201527f746f20325e3132380000000000000000000000000000000000000000000000006064820152608401610f4f565b600160801b8210612bb25760405162461bcd60e51b815260206004820152601c60248201527f5f622073686f756c64206265206c657373207468616e20325e313238000000006044820152606401610f4f565b60806f80000000000000000000000000000000612bcf8486613c8a565b6112699190613c42565b60008181526005602052604081205415801590610f1b575050600090815260056020819052604090912001546001600160a01b0316151590565b6001600160a01b038116612c53576040517fd1f2828800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004546001600160a01b0316612c7c57604051635df4b1ef60e01b815260040160405180910390fd5b600480546040517fa230c5240000000000000000000000000000000000000000000000000000000081526001600160a01b038481169382019390935291169063a230c52490602401602060405180830381865afa158015612ce1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d059190613e33565b611387576040517f6a5cfb6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b8251811015612df857828181518110612d5a57612d5a61419e565b60200260200101516000015160000315612de6576000838281518110612d8257612d8261419e565b6020026020010151600001519050612d9981612bd9565b612db95760405163c1d17bef60e01b815260048101829052602401610f4f565b838281518110612dcb57612dcb61419e565b60200260200101516020015183612de29190614275565b9250505b80612df081614077565b915050612d3f565b506001600160a01b038316600090815260066020526040812054612e1c908361338f565b60048054604051637817ee4f60e01b81526001600160a01b0388811693820193909352306024820152929350600092911690637817ee4f90604401602060405180830381865afa158015612e74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e989190613c13565b905080821115612ede576040517fd64182fe0000000000000000000000000000000000000000000000000000000081526004810183905260248101829052604401610f4f565b506001600160a01b039093166000908152600660205260409020929092555050565b606060005b8251811015612a47576000838281518110612f2257612f2261419e565b60200260200101516000015190508251600003612f7e5760408051600180825281830190925290602080830190803683370190505092508083600081518110612f6d57612f6d61419e565b6020026020010181815250506130d1565b6000805b8451811015612ffd5782858281518110612f9e57612f9e61419e565b602002602001015103612feb576040517fadebb154000000000000000000000000000000000000000000000000000000008152600481018490526024810182905260019250604401610f4f565b80612ff581614077565b915050612f82565b50806130cf576000845160016130139190613c42565b67ffffffffffffffff81111561302b5761302b61358b565b604051908082528060200260200182016040528015613054578160200160208202803683370190505b50905060005b85518110156130ac578581815181106130755761307561419e565b602002602001015182828151811061308f5761308f61419e565b6020908102919091010152806130a481614077565b91505061305a565b5082818651815181106130c1576130c161419e565b602090810291909101015293505b505b60008483815181106130e5576130e561419e565b60209081029190910181015181015160008481526005835260408082206001600160a01b038b16835260098101909452812054919350613125828561338f565b6001600160a01b038a1660009081526009850160205260408120829055909150805b6001600160a01b038b166000908152600760205260409020548110156131be5784546001600160a01b038c1660009081526007602052604090208054839081106131935761319361419e565b9060005260206000200154036131ac57600191506131be565b806131b681614077565b915050613147565b50806131f4576001600160a01b038a16600090815260076020908152604082208654815460018101835591845291909220909101555b818311613244576132058383613c55565b600d60008282546132169190613c42565b9091555061322690508383613c55565b8460020160008282546132399190613c42565b909155506132889050565b61324e8284613c55565b600d600082825461325f9190613c55565b9091555061326f90508284613c55565b8460020160008282546132829190613c55565b90915550505b836007015460000361329f5743600785015561330b565b6132a98484611fa0565b60028401546003850154604080516001600160a01b038e168152602081018a9052908101859052606081019290925260808201527f0227f642ddcf2042ceaeafadb9d540f432072c00cd4862881667168dcc14710f9060a00160405180910390a15b505050505050808061331c90614077565b915050612f05565b60008060008084865af1611a395763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716613385576390b8ec186000526004601cfd5b6000603452505050565b60008061339c8385614275565b905060008112156118b7576040517f3bbc7142000000000000000000000000000000000000000000000000000000008152600481018590526024810184905260448101829052606401610f4f565b6000602082840312156133fc57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6005811061342957613429613403565b9052565b60005b83811015613448578181015183820152602001613430565b50506000910152565b6000815180845261346981602086016020860161342d565b601f01601f19169290920160200192915050565b80518252600060208201516040602085015261349c6040850182613451565b949350505050565b60006101408c83528b60208401528a60408401528960608401526001600160a01b03808a16608085015280891660a085015280881660c0850152508560e08401526134f3610100840186613419565b806101208401526135068184018561347d565b9d9c50505050505050505050505050565b60006020828403121561352957600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146118b757600080fd5b6001600160a01b038116811461138757600080fd5b60006020828403121561358057600080fd5b81356118b781613559565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156135c4576135c461358b565b60405290565b60405160e0810167ffffffffffffffff811182821017156135c4576135c461358b565b60405160c0810167ffffffffffffffff811182821017156135c4576135c461358b565b60405160a0810167ffffffffffffffff811182821017156135c4576135c461358b565b604051601f8201601f1916810167ffffffffffffffff8111828210171561365c5761365c61358b565b604052919050565b600067ffffffffffffffff82111561367e5761367e61358b565b5060051b60200190565b600082601f83011261369957600080fd5b813560206136ae6136a983613664565b613633565b82815260059290921b840181019181810190868411156136cd57600080fd5b8286015b848110156136f15780356136e481613559565b83529183019183016136d1565b509695505050505050565b600067ffffffffffffffff8211156137165761371661358b565b50601f01601f191660200190565b600082601f83011261373557600080fd5b81356137436136a9826136fc565b81815284602083860101111561375857600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561378a57600080fd5b833567ffffffffffffffff808211156137a257600080fd5b6137ae87838801613688565b945060208601359150808211156137c457600080fd5b506137d186828701613724565b92505060408401356137e281613559565b809150509250925092565b6000806040838503121561380057600080fd5b823561380b81613559565b946020939093013593505050565b6000806040838503121561382c57600080fd5b823567ffffffffffffffff81111561384357600080fd5b61384f85828601613724565b925050602083013561386081613559565b809150509250929050565b6004811061342957613429613403565b60208101610f1b828461386b565b60008060006060848603121561389e57600080fd5b505081359360208301359350604090920135919050565b6003811061342957613429613403565b60208101610f1b82846138b5565b6020815260006118b7602083018461347d565b600080604083850312156138f957600080fd5b823567ffffffffffffffff8082111561391157600080fd5b61391d86838701613688565b935060209150818501358181111561393457600080fd5b8501601f8101871361394557600080fd5b80356139536136a982613664565b81815260059190911b8201840190848101908983111561397257600080fd5b8584015b838110156139aa5780358681111561398e5760008081fd5b61399c8c8983890101613724565b845250918601918601613976565b508096505050505050509250929050565b602080825282518282018190526000919060409081850190868401855b82811015613a0657815180516001600160a01b031685528601518685015292840192908501906001016139d8565b5091979650505050505050565b801515811461138757600080fd5b600060208284031215613a3357600080fd5b81356118b781613a13565b6001600160a01b038b811682528a811660208301528916604082015260608101889052608081018790526101408101613a7a60a0830188613419565b8560c08301528460e083015283610100830152826101208301529b9a5050505050505050505050565b60008060408385031215613ab657600080fd5b82359150602083013561386081613559565b60006020808385031215613adb57600080fd5b823567ffffffffffffffff811115613af257600080fd5b8301601f81018513613b0357600080fd5b8035613b116136a982613664565b81815260069190911b82018301908381019087831115613b3057600080fd5b928401925b82841015613b735760408489031215613b4e5760008081fd5b613b566135a1565b843581528585013586820152825260409093019290840190613b35565b979650505050505050565b6020810160078310613b9257613b92613403565b91905290565b60008060408385031215613bab57600080fd5b82359150602083013567ffffffffffffffff811115613bc957600080fd5b613bd585828601613724565b9150509250929050565b600181811c90821680613bf357607f821691505b602082108103611f1857634e487b7160e01b600052602260045260246000fd5b600060208284031215613c2557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610f1b57610f1b613c2c565b81810381811115610f1b57610f1b613c2c565b600082613c8557634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610f1b57610f1b613c2c565b805160048110611f2857600080fd5b600060808284031215613cc257600080fd5b6040516080810181811067ffffffffffffffff82111715613ce557613ce561358b565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006101408284031215613d2957600080fd5b613d316135ca565b8251613d3c81613559565b80825250602083015160208201526040830151604082015260608301516060820152608083015160038110613d7057600080fd5b6080820152613d8160a08401613ca1565b60a0820152613d938460c08501613cb0565b60c08201529392505050565b6000610160820190508382526001600160a01b0383511660208301526020830151604083015260408301516060830152606083015160808301526080830151613deb60a08401826138b5565b5060a0830151613dfe60c084018261386b565b5060c09290920151805160e0830152602081015161010083015260408101516101208301526060015161014090910152919050565b600060208284031215613e4557600080fd5b81516118b781613a13565b600060408284031215613e6257600080fd5b613e6a6135a1565b905081518152602082015167ffffffffffffffff811115613e8a57600080fd5b8201601f81018413613e9b57600080fd5b8051613ea96136a9826136fc565b818152856020838501011115613ebe57600080fd5b613ecf82602083016020860161342d565b602084015250909392505050565b600060208284031215613eef57600080fd5b815167ffffffffffffffff80821115613f0757600080fd5b9083019060c08286031215613f1b57600080fd5b613f236135ed565b825181526020830151613f3581613559565b60208201526040830151613f4881613559565b6040820152606083015182811115613f5f57600080fd5b613f6b87828601613e50565b6060830152506080830151608082015260a083015160a082015280935050505092915050565b604081526000613fa46040830185613451565b90508260208301529392505050565b600060208284031215613fc557600080fd5b815167ffffffffffffffff80821115613fdd57600080fd5b9083019060a08286031215613ff157600080fd5b613ff9613610565b82518152602083015161400b81613559565b602082015260408381015190820152606083015161402881613559565b606082015260808301518281111561403f57600080fd5b61404b87828601613e50565b60808301525095945050505050565b60006020828403121561406c57600080fd5b81516118b781613559565b60006001820161408957614089613c2c565b5060010190565b601f821115610c4257600081815260208120601f850160051c810160208610156140b75750805b601f850160051c820191505b818110156140d6578281556001016140c3565b505050505050565b815167ffffffffffffffff8111156140f8576140f861358b565b61410c816141068454613bdf565b84614090565b602080601f83116001811461414157600084156141295750858301515b600019600386901b1c1916600185901b1785556140d6565b600085815260208120601f198616915b8281101561417057888601518255948401946001909101908401614151565b508582101561418e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fd5b600060208083850312156141dd57600080fd5b825167ffffffffffffffff8111156141f457600080fd5b8301601f8101851361420557600080fd5b80516142136136a982613664565b81815260069190911b8201830190838101908783111561423257600080fd5b928401925b82841015613b7357604084890312156142505760008081fd5b6142586135a1565b845181528585015186820152825260409093019290840190614237565b808201828112600083128015821682158216171561258e5761258e613c2c56fea2646970667358221220f8dc19bc42008b4653ac7ab76f0d02267cf9934c7bf3a7ecaeb0897d8545944b64736f6c63430008130033",
    "sourceMap": "2905:36089:98:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5558:60;;;;;;;;;;-1:-1:-1;5558:60:98;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;829:155:35;;;;;;;;;;-1:-1:-1;829:155:35;;;;;:::i;:::-;937:40;;952:25;937:40;;829:155;;;;2891:14:109;;2884:22;2866:41;;2854:2;2839:18;829:155:35;2726:187:109;38823:169:98;;;;;;;;;;-1:-1:-1;38823:169:98;;;;;:::i;:::-;;:::i;6061:62::-;;;;;;;;;;;;;;;;;;;3475:25:109;;;3463:2;3448:18;6061:62:98;3329:177:109;10705:325:11;;;;;;;;;;-1:-1:-1;10705:325:11;;;;;:::i;:::-;;:::i;5947:34:98:-;;;;;;;;;;;;;;;;6293:36;;;;;;;;;;;;6321:8;6293:36;;38513:155;;;;;;;;;;-1:-1:-1;38513:155:98;;;;;:::i;:::-;;:::i;14448:755::-;;;;;;;;;;-1:-1:-1;14448:755:98;;;;;:::i;:::-;;:::i;6785:86:11:-;;;;;;;;;;-1:-1:-1;6860:4:11;6785:86;;;-1:-1:-1;;;;;7809:55:109;;;7791:74;;7779:2;7764:18;6785:86:11;7631:240:109;37714:520:98;;;;;;;;;;-1:-1:-1;37714:520:98;;;;;:::i;:::-;;:::i;9429:344:11:-;;;;;;:::i;:::-;;:::i;6129:45:98:-;;;;;;;;;;-1:-1:-1;6129:45:98;;;;;;;;;;;;;;;:::i;13013:648::-;;;;;;;;;;-1:-1:-1;13013:648:98;;;;;:::i;:::-;;:::i;31761:1145::-;;;;;;;;;;-1:-1:-1;31761:1145:98;;;;;:::i;:::-;;:::i;5893:47::-;;;;;;;;;;-1:-1:-1;5893:47:98;;;;;;;;;;;;;;;:::i;6953:92:11:-;;;;;;;;;;-1:-1:-1;7032:6:11;;6953:92;;6659:49:98;;;;;;;;;;;;6706:2;6659:49;;7135:100:11;;;;;;;;;;-1:-1:-1;7218:10:11;7135:100;;7326:108;;;;;;;;;;-1:-1:-1;7417:10:11;;7326:108;;12395:145;;;;;;;;;;-1:-1:-1;12395:145:11;;;;;:::i;:::-;;:::i;5811:20:98:-;;;;;;;;;;;;;;;;33487:1392;;;;;;;;;;-1:-1:-1;33487:1392:98;;;;;:::i;:::-;;:::i;5624:53::-;;;;;;;;;;-1:-1:-1;5624:53:98;;;;;:::i;:::-;;;;;;;;;;;;;;5509:42;;;;;;;;;;-1:-1:-1;5509:42:98;;;;-1:-1:-1;;;;;5509:42:98;;;11854:360;;;;;;;;;;-1:-1:-1;11854:360:98;;;;;:::i;:::-;;:::i;38370:137::-;;;;;;;;;;-1:-1:-1;38370:137:98;;;;;:::i;:::-;;:::i;5837:23::-;;;;;;;;;;;;;;;;12220:787;;;;;;;;;;-1:-1:-1;12220:787:98;;;;;:::i;:::-;;:::i;11595:253::-;;;;;;;;;;;;;:::i;5987:26::-;;;;;;;;;;;;;;;;19537:735;;;;;;;;;;-1:-1:-1;19537:735:98;;;;;:::i;:::-;;:::i;5715:57::-;;;;;;;;;;-1:-1:-1;5715:57:98;;;;;:::i;:::-;;:::i;38240:124::-;;;;;;;;;;-1:-1:-1;38240:124:98;;;;;:::i;:::-;;:::i;4412:75:9:-;;;;;;;;;;;;4445:42;4412:75;;5866:21:98;;;;;;;;;;;;;;;;6180:51;;;;;;;;;;-1:-1:-1;6180:51:98;;;;;;;;;;;;;;;;;;;10292:25:109;;;10348:2;10333:18;;10326:34;;;;10376:18;;;10369:34;10434:2;10419:18;;10412:34;10279:3;10264:19;6180:51:98;10061:391:109;24321:198:98;;;;;;;;;;-1:-1:-1;24321:198:98;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6019:35::-;;;;;;;;;;;;;;;;16633:123;;;;;;;;;;-1:-1:-1;16717:11:98;:32;16633:123;;20911:288;;;;;;;;;;-1:-1:-1;20911:288:98;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;21894:86::-;;;;;;;;;;-1:-1:-1;21894:86:98;;;;;:::i;:::-;;:::i;25116:127::-;;;;;;;;;;-1:-1:-1;25116:127:98;;;;;:::i;:::-;-1:-1:-1;;;;;25210:26:98;25184:7;25210:26;;;:18;:26;;;;;;;25116:127;23277:1038;;;;;;;;;;-1:-1:-1;23277:1038:98;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;16514:113::-;;;;;;;;;;-1:-1:-1;16593:27:98;;16514:113;;36084:313;;;;;;;;;;;;;:::i;6238:49::-;;;;;;;;;;;;6280:7;6238:49;;24902:145;;;;;;;;;;-1:-1:-1;24902:145:98;;;;;:::i;:::-;24979:7;25005:22;;;:9;:22;;;;;:35;;;;24902:145;7566:101:11;;;;;;;;;;-1:-1:-1;7622:4:11;14479:10;;;7566:101;36084:313:98;24720:176;;;;;;;;;;-1:-1:-1;24720:176:98;;;;;:::i;:::-;;:::i;16872:226::-;;;;;;;;;;-1:-1:-1;16872:226:98;;;;;:::i;:::-;;:::i;7823:146:11:-;;;;;;;;;;-1:-1:-1;7823:146:11;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7036:975:98:-;;;;;;;;;;-1:-1:-1;7036:975:98;;;;;:::i;:::-;;:::i;10092:220:11:-;;;;;;:::i;:::-;;:::i;8816:197::-;;;;;;;;;;-1:-1:-1;8816:197:11;;;;;:::i;:::-;;:::i;38674:143:98:-;;;;;;;;;;-1:-1:-1;38674:143:98;;;;;:::i;:::-;;:::i;5558:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5558:60:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;38823:169::-;38906:10;5954:30:11;5976:7;5954:21;:30::i;:::-;-1:-1:-1;38928:17:98::1;:57:::0;;-1:-1:-1;;38928:57:98::1;-1:-1:-1::0;;;;;38928:57:98;;;::::1;::::0;;;::::1;::::0;;38823:169::o;10705:325:11:-;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;10924:42:::2;10936:13;10951:5;10958:7;10924:11;:42::i;:::-;10705:325:::0;;;:::o;38513:155:98:-;38578:10;5954:30:11;5976:7;5954:21;:30::i;:::-;38600:8:98::1;:20:::0;;;38635:26:::1;::::0;3475:25:109;;;38635:26:98::1;::::0;3463:2:109;3448:18;38635:26:98::1;;;;;;;;38513:155:::0;;:::o;14448:755::-;14667:17;;;:39;;;-1:-1:-1;;;14667:39:98;;;;14542:7;;;;-1:-1:-1;;;;;14667:17:98;;:37;;:39;;;;;;;;;;;:17;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14599:17;;;:48;;-1:-1:-1;;;14599:48:98;;-1:-1:-1;;;;;7809:55:109;;;14599:48:98;;;7791:74:109;;;;14650:14:98;;14599:17;;;;:39;;7764:18:109;;14599:48:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;;:::i;:::-;:107;;;;:::i;:::-;14561:145;;14717:22;14804:3;14742:59;14766:11;:26;;;14748:15;:44;;;;:::i;:::-;14747:53;;14796:4;14747:53;:::i;:::-;14742:4;:59::i;:::-;:65;;;;:::i;:::-;14717:90;;14817:47;;;;;;;;;;;;;;;;;;14848:15;14817:11;:47::i;:::-;14874:69;;;;;;;;;;;;;;;;;;14916:11;:26;;;14874:11;:69::i;:::-;14953:45;;;;;;;;;;;;;;;;;;14983:14;14953:11;:45::i;:::-;15097:17;;;:66;;-1:-1:-1;;;15097:66:98;;-1:-1:-1;;;;;18221:15:109;;;15097:66:98;;;18203:34:109;;;;15157:4:98;18253:18:109;;;18246:43;15009:24:98;;15097:17;;;;:42;;18115:18:109;;15097:66:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15037:27;;:44;;15067:14;;15037:44;:::i;:::-;15036:127;;;;:::i;:::-;15009:154;-1:-1:-1;;;;14448:755:98;;;;;:::o;37714:520::-;37784:7;37846:21;;;:9;:21;;;;;37882:19;;:33;;37878:100;;37938:29;;-1:-1:-1;;;37938:29:98;;;;;3475:25:109;;;3448:18;;37938:29:98;;;;;;;;37878:100;38019:36;37992:23;;;;;;:63;;;;;;;;:::i;:::-;;37988:130;;38078:29;;-1:-1:-1;;;38078:29:98;;;;;3475:25:109;;;3448:18;;38078:29:98;3329:177:109;37988:130:98;38128:59;38155:8;38165;:21;;;38128:26;:59::i;:::-;38204:23;;;;37714:520;-1:-1:-1;;37714:520:98:o;9429:344:11:-;9584:19;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;9683:34:::2;9702:5;9709:7;9683:18;:34::i;:::-;9669:48;;9727:39;10092:220:::0;13013:648:98;13097:7;;13219:36;13204:11;;;;:51;;;;;;;;:::i;:::-;;:103;;;-1:-1:-1;13274:33:98;13259:11;;;;:48;;;;;;;;:::i;:::-;;13204:103;13200:298;;;13342:46;13371:16;13342:28;:46::i;:::-;13323:65;;13200:298;;;13438:49;13461:7;13470:16;13438:22;:49::i;:::-;13419:68;;13200:298;13531:16;13507:20;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;13562:59:98;;;-1:-1:-1;;;;;18520:55:109;;18502:74;;18607:2;18592:18;;18585:34;;;18635:18;;;18628:34;;;13562:59:98;;18490:2:109;18475:18;13562:59:98;;;;;;;;13638:16;13013:648;-1:-1:-1;;;13013:648:98:o;31761:1145::-;31895:7;31918:9;31930:11;31918:23;;32256:17;32276:27;6321:8;32291:3;32282:5;;:12;;32281:18;;;;:::i;:::-;32301:1;32276:4;:27::i;:::-;32256:47;;32896:3;6541:34;32873:5;;6321:8;32869:9;;;;:::i;:::-;32844:19;32854:9;-1:-1:-1;;;32844:19:98;:::i;:::-;32826:14;6321:8;32826:10;:14;:::i;:::-;:38;;;;:::i;:::-;32825:54;;;;:::i;:::-;32799:21;32811:9;32799;:21;:::i;:::-;32798:82;;;;:::i;:::-;32797:94;;;;:::i;:::-;32796:103;;;31761:1145;-1:-1:-1;;;;;;31761:1145:98:o;12395:145:11:-;12481:4;12504:29;12522:10;12504:17;:29::i;33487:1392:98:-;33562:18;33730:1;33716:10;;:15;33712:66;;33754:13;;;;;;;;;;;;;;33712:66;34218:33;34234:16;34218:15;:33::i;:::-;34214:91;;;34274:20;;-1:-1:-1;;;34274:20:98;;;;;;;;;;;34214:91;34527:10;;34453:13;;34497:26;:16;34516:7;34497:26;:::i;:::-;34496:41;;;;:::i;:::-;6321:8;34470;;34481:7;34470:18;;;;:::i;:::-;34469:24;;;;:::i;:::-;:68;;;;:::i;:::-;34453:84;;34690:2;34648:28;:26;:28::i;:::-;34638:5;;34634:9;;6321:8;34634:9;:::i;:::-;6321:8;34621:2;34603:13;34611:5;;34603:13;:::i;:::-;34602:21;;6321:8;34589:3;34579:6;;:13;;34578:19;;;;:::i;:::-;34577:47;;;;:::i;:::-;34576:53;;;;:::i;:::-;34575:69;;;;:::i;:::-;34574:102;;;;:::i;:::-;34560:132;;;33487:1392;-1:-1:-1;;;33487:1392:98:o;11854:360::-;11991:17;;;:66;;-1:-1:-1;;;11991:66:98;;-1:-1:-1;;;;;18221:15:109;;;11991:66:98;;;18203:34:109;;;;12051:4:98;18253:18:109;;;18246:43;11991:17:98;;;:42;;18115:18:109;;11991:66:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11967:20;;:90;;;;;;;:::i;:::-;;;;-1:-1:-1;;12067:17:98;;;:68;;;;;-1:-1:-1;;;;;18221:15:109;;;12067:68:98;;;18203:34:109;;;;12129:4:98;18253:18:109;;;18246:43;12067:17:98;;;:44;;18115:18:109;;12067:68:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12190:17;12199:7;12190:8;:17::i;:::-;11854:360;:::o;38370:137::-;38429:10;5954:30:11;5976:7;5954:21;:30::i;:::-;38451:5:98::1;:14:::0;;;38480:20:::1;::::0;3475:25:109;;;38480:20:98::1;::::0;3463:2:109;3448:18;38480:20:98::1;3329:177:109::0;12220:787:98;12302:7;;12424:36;12409:11;;;;:51;;;;;;;;:::i;:::-;;12405:441;;12495:38;12518:14;12495:22;:38::i;:::-;12476:57;;12405:441;;;12569:33;12554:11;;;;:48;;;;;;;;:::i;:::-;;12550:296;;12637:44;12657:7;12666:14;12637:19;:44::i;12550:296::-;12717:36;12702:11;;;;:51;;;;;;;;:::i;:::-;;12698:148;;12788:47;12811:7;12820:14;12788:22;:47::i;:::-;12769:66;;12698:148;12879:16;12855:20;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;12910:57:98;;;-1:-1:-1;;;;;18520:55:109;;18502:74;;18607:2;18592:18;;18585:34;;;18635:18;;;18628:34;;;12910:57:98;;18490:2:109;18475:18;12910:57:98;18300:368:109;11595:253:98;11677:17;;;:65;;;;;11657:10;11677:65;;;18203:34:109;;;11736:4:98;18253:18:109;;;18246:43;-1:-1:-1;;;;;11677:17:98;;;;:42;;18115:18:109;;11677:65:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11776:17:98;;;:65;;-1:-1:-1;;;11776:65:98;;-1:-1:-1;;;;;18221:15:109;;;11776:65:98;;;18203:34:109;;;;11835:4:98;18253:18:109;;;18246:43;11776:17:98;;;-1:-1:-1;11776:42:98;;-1:-1:-1;18115:18:109;;11776:65:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11752:20;;:89;;;;;;;:::i;:::-;;;;-1:-1:-1;;;11595:253:98:o;19537:735::-;19606:18;19679:21;;;:9;:21;;;;;19889;;;;19606:18;;;;19845:66;;19679:21;;19845:33;:66::i;:::-;19785:126;;;;19926:14;19944:1;19926:19;:39;;;;-1:-1:-1;19949:16:98;;19926:39;19922:110;;;19998:8;:23;;;19981:40;;19922:110;20041:17;20061:44;20080:8;:24;;;20061:18;:44::i;:::-;20238:27;;;;;19537:735;-1:-1:-1;;;;;19537:735:98:o;5715:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;38240:124::-;38303:7;38350:5;;6321:8;38346:9;;;;:::i;:::-;38331:10;6321:8;38331:6;:10;:::i;:::-;38330:26;;;;:::i;24321:198::-;-1:-1:-1;;;;;;;;;;;;;;;;;24413:40:98;24456:9;:22;24466:11;24456:22;;;;;;;;;;;24413:65;;24495:8;:17;;24488:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24321:198;;;:::o;20911:288::-;20997:22;21081:16;;-1:-1:-1;;;21081:16:98;;;;;;;;;;;21894:86;21950:23;21965:7;21950:14;:23::i;23277:1038::-;23379:17;23410:19;23443:22;23479:23;23516:20;23550:44;23608:17;23639:22;23675:17;23706:25;23756:40;23799:9;:22;23809:11;23799:22;;;;;;;;;;;23756:65;;23844:8;:24;;;23872:1;23844:29;:80;;23880:44;23899:8;:24;;;23880:18;:44::i;:::-;23844:80;;;23876:1;23844:80;23832:92;;23955:8;:18;;;;;;;;;;-1:-1:-1;;;;;23955:18:98;23987:8;:20;;;;;;;;;;-1:-1:-1;;;;;23987:20:98;24021:8;:23;;;;;;;;;;-1:-1:-1;;;;;24021:23:98;24058:8;:24;;;24096:8;:21;;;24131:8;:23;;;;;;;;;;;;24168:8;:18;;;24200:8;:23;;;24237:9;24260:8;:26;;:38;24287:10;-1:-1:-1;;;;;24260:38:98;-1:-1:-1;;;;;24260:38:98;;;;;;;;;;;;;23934:374;;;;;;;;;;;;;;;;;;;;;23277:1038;;;;;;;;;;;:::o;36084:313::-;36143:7;36328:18;;36305:20;;:41;:85;;-1:-1:-1;36372:18:98;;;36084:313::o;36305:85::-;-1:-1:-1;36349:20:98;;;36084:313::o;24720:176::-;24811:7;25376:22;;;:9;:22;;;;;;;;-1:-1:-1;;;;;25376:48:98;;;;:40;;:48;;;;;;24837:52;24830:59;24720:176;-1:-1:-1;;;24720:176:98:o;16872:226::-;17015:16;;-1:-1:-1;;;17015:16:98;;;;;;;;;;;7823:146:11;7904:6;7929:33;7949:12;7929:19;:33::i;7036:975:98:-;7112:28;7132:7;7112:19;:28::i;:::-;7150:41;7205:5;7194:52;;;;;;;;;;;;:::i;:::-;7601:20;;7150:96;;-1:-1:-1;;;;;;7601:34:98;7597:94;;7658:22;;-1:-1:-1;;;7658:22:98;;;;;;;;;;;7597:94;7739:20;;7701:17;:59;;-1:-1:-1;;7701:59:98;-1:-1:-1;;;;;7701:59:98;;;;;;;;;7778:8;;;;7770:5;:16;7807:11;;;;7796:8;:22;7837:9;;;;7828:6;:18;7871:15;;;;7856:12;:30;;-1:-1:-1;;7856:30:98;-1:-1:-1;7871:15:98;7856:30;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7910:14:98;;;;7896:11;:28;;-1:-1:-1;;7896:28:98;;7910:14;7896:28;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7948:14:98;;;;7934:28;;:11;:28;;;;;;;;;;;;;;;;;;;;;7978:26;;;;;7992:7;;7948:2;;7978:26;:::i;:::-;;;;;;;;7102:909;7036:975;;:::o;10092:220:11:-;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;10240:25:::2;10250:5;10257:7;10240:9;:25::i;:::-;10092:220:::0;;:::o;8816:197::-;5660:16;:14;:16::i;:::-;8956:7:::1;8942:10;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;8973:33:11::1;::::0;-1:-1:-1;8998:7:11;8973:24:::1;:33::i;38674:143:98:-:0;38735:10;5954:30:11;5976:7;5954:21;:30::i;:::-;38757:6:98::1;:16:::0;;;38788:22:::1;::::0;3475:25:109;;;38788:22:98::1;::::0;3463:2:109;3448:18;38788:22:98::1;3329:177:109::0;13122:142:11;13218:6;;13199:35;;;;;;;;21626:25:109;;;;-1:-1:-1;;;;;21687:55:109;;;21667:18;;;21660:83;13199:4:11;:18;;;;21599::109;;13199:35:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13194:63;;13243:14;;-1:-1:-1;;;13243:14:11;;;;;;;;;;;12814:111;12868:10;-1:-1:-1;;;;;12890:4:11;12868:27;;12864:54;;12904:14;;-1:-1:-1;;;12904:14:11;;;;;;;;;;;12864:54;12814:111::o;13771:105::-;13832:6;;13842:1;13832:11;13828:41;;13852:17;;;;;;;;;;;;;;18051:1480:98;18212:1;18196:5;:12;:17;18192:76;;18236:21;;;;;;;;;;;;;;18192:76;18278:18;18310:5;18299:28;;;;;;;;;;;;:::i;:::-;18278:49;;18342:10;18356:1;18342:15;18338:77;;18380:24;;;;;;;;;;;;;;18338:77;18424:40;18467:21;;;:9;:21;;;;;18519:35;18503:12;;;;:51;;;;;;;;:::i;:::-;;18499:966;;18574:19;;:33;;18570:108;;18634:29;;-1:-1:-1;;;18634:29:98;;;;;3475:25:109;;;3448:18;;18634:29:98;3329:177:109;18570:108:98;18723:36;18696:23;;;;;;:63;;;;;;;;:::i;:::-;;18692:138;;18786:29;;-1:-1:-1;;;18786:29:98;;;;;3475:25:109;;;3448:18;;18786:29:98;3329:177:109;18692:138:98;18844:22;18869:36;18894:10;18869:24;:36::i;:::-;18844:61;;18919:17;18939:44;18958:8;:24;;;18939:18;:44::i;:::-;18919:64;;19019:9;19002:14;:26;:58;;;;;19059:1;19032:8;:24;;;:28;19002:58;18998:137;;;19087:33;;;;;;;;;;;;;;18998:137;19187:6;;19174:20;;;;;19149:22;;-1:-1:-1;;;;;19174:4:98;:12;;;;:20;;;;3475:25:109;;;3463:2;3448:18;;3329:177;19174:20:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19174:20:98;;;;;;;;;;;;:::i;:::-;19225:10;;;;19237:20;;;;;19259:24;;;19149:45;;-1:-1:-1;19209:75:98;;-1:-1:-1;;;;;19237:20:98;;;;19209:15;:75::i;:::-;19299:23;;;:64;;-1:-1:-1;;19299:64:98;19325:38;19299:64;;;;;;19407:20;;;19299:64;19429:24;;;19383:71;;;23970:25:109;;;-1:-1:-1;;;;;19407:20:98;;;24026:2:109;24011:18;;24004:83;24103:18;;24096:34;19383:71:98;;23958:2:109;23943:18;19383:71:98;;;;;;;18556:909;;;18499:966;18137:1394;;18051:1480;;;:::o;16169:339::-;16217:9;16246:1;16242;:5;16238:226;;;-1:-1:-1;16267:1:98;16282:9;16294:5;16298:1;16267;16294:5;:::i;:::-;:9;;16302:1;16294:9;:::i;:::-;16282:21;;16317:89;16328:1;16324;:5;16317:89;;;16353:1;-1:-1:-1;16353:1:98;16390;16353;16377:5;16353:1;16377;:5;:::i;:::-;:9;;;;:::i;:::-;16376:15;;;;:::i;:::-;16372:19;;16317:89;;;16249:167;16169:339;;;:::o;16238:226::-;16426:6;;16422:42;;-1:-1:-1;16452:1:98;16422:42;16169:339;;;:::o;6548:139:63:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:63;;;;;;;;;;;;;;;;;;;;6612:15;:68::i;36587:396:98:-;36706:18;36726:19;36749:56;36783:9;36794:10;36749:33;:56::i;:::-;36705:100;;;;36819:10;36833:1;36819:15;:35;;;;-1:-1:-1;36838:16:98;;36819:35;36815:72;;;36870:7;;36587:396;;:::o;36815:72::-;36896:19;;;:33;36939:24;;;;:37;;;;-1:-1:-1;36587:396:98:o;9583:2006::-;9675:7;9754:45;9813:5;9802:50;;;;;;;;;;;;:::i;:::-;9967:15;;9754:98;;-1:-1:-1;9967:15:98;:20;9963:78;;10010:20;;;;;;;;;;;;;;9963:78;10133:35;10117:12;;;;:51;;;;;;;;:::i;:::-;;10113:782;;10188:20;;;;-1:-1:-1;;;;;10188:34:98;10184:101;;10249:21;;;;;;;;;;;;;;10184:101;10350:23;;;;-1:-1:-1;;;;;10350:37:98;10346:102;;10414:19;;;;;;;;;;;;;;10346:102;10461:17;10481:4;-1:-1:-1;;;;;10481:12:98;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10481:22:98;;10504:6;;10481:30;;;;;;;;;;;;;3475:25:109;;3463:2;3448:18;;3329:177;10481:30:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10481:30:98;;;;;;;;;;;;:::i;:::-;:36;;;10461:56;;10562:9;-1:-1:-1;;;;;10535:36:98;:8;:23;;;-1:-1:-1;;;;;10535:36:98;;10531:234;;10733:17;;;;;;;;;;;;;;10531:234;10782:41;10798:8;:24;;;10782:15;:41::i;:::-;10778:107;;;10850:20;;-1:-1:-1;;;10850:20:98;;;;;;;;;;;10778:107;10170:725;10113:782;10904:18;10927:15;;10925:17;;;;;:::i;:::-;;;;;-1:-1:-1;10952:33:98;10988:21;;;:9;:21;;;;;;;;11020:25;;;11055:11;;;:21;;-1:-1:-1;;;;;11055:21:98;;;-1:-1:-1;;11055:21:98;;;;;;;11102:20;;;;11086:13;;;:36;;;;;;;;;;;;;;11151:23;;;;11132:16;;;:42;;;;;;;;;;;11204:24;;;-1:-1:-1;11184:17:98;;;:44;;;;11289:16;;;:55;;-1:-1:-1;;11289:55:98;;;;;;11368:12;11354:11;;;:26;-1:-1:-1;11390:16:98;;:20;;;;11469:17;;;;11456:30;;:10;;;:30;;;;;;;10925:17;;-1:-1:-1;10988:21:98;;11469:17;;11456:10;:30;;;;;;;;:::i;:::-;-1:-1:-1;;11518:6:98;;11502:35;;;28216:25:109;;;28272:2;28257:18;;28250:34;;;11502:35:98;;-1:-1:-1;28189:18:109;11502:35:98;;;;;;;-1:-1:-1;11570:10:98;9583:2006;-1:-1:-1;;;;9583:2006:98:o;15209:173::-;15342:11;:32;15296:7;;15323:51;;:16;:51;:::i;15388:481::-;15682:26;;15630:17;;;:39;;;-1:-1:-1;;;15630:39:98;;;;15486:7;;;;15682:26;;-1:-1:-1;;;;;15630:17:98;;:37;;:39;;;;;;;;;;;:17;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15544:17;;;:48;;-1:-1:-1;;;15544:48:98;;-1:-1:-1;;;;;7809:55:109;;;15544:48:98;;;7791:74:109;;;;15595:16:98;;15544:17;;;;:39;;7764:18:109;;15544:48:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;;;:::i;:::-;:125;;;;:::i;:::-;15530:178;;;;:::i;:::-;15762:17;;;:66;;-1:-1:-1;;;15762:66:98;;-1:-1:-1;;;;;18221:15:109;;;15762:66:98;;;18203:34:109;;;;15822:4:98;18253:18:109;;;18246:43;15505:203:98;;-1:-1:-1;15718:24:98;;15762:17;;;:42;;18115:18:109;;15762:66:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15745:83;;:14;:83;:::i;:::-;15718:110;15388:481;-1:-1:-1;;;;;15388:481:98:o;35631:447::-;35692:15;-1:-1:-1;;;35727:2:98;:12;35719:53;;;;-1:-1:-1;;;35719:53:98;;28497:2:109;35719:53:98;;;28479:21:109;28536:2;28516:18;;;28509:30;28575;28555:18;;;28548:58;28623:18;;35719:53:98;28295:352:109;35719:53:98;-1:-1:-1;;;;35794:2:98;35818;35857:215;35864:5;;35857:215;;35889:1;35893;35889:5;35898:1;35889:10;35885:177;;35923:10;35928:1;35931;35923:4;:10::i;:::-;35919:14;-1:-1:-1;35957:1:98;35951:7;35857:215;;35885:177;36007:16;36012:7;36021:1;36007:4;:16::i;:::-;35997:26;-1:-1:-1;36041:6:98;36046:1;36041:6;;:::i;:::-;;;35857:215;;;35709:369;;35631:447;;;;:::o;21697:191::-;21776:4;-1:-1:-1;;;;;21842:24:98;;;:39;;21877:4;21842:39;;;21869:5;21835:46;21697:191;-1:-1:-1;;21697:191:98:o;25779:205::-;25853:4;25898:20;6321:8;25898:16;:20;:::i;:::-;25884:10;;25873:8;;:21;;;;:::i;:::-;:45;25869:87;;-1:-1:-1;25941:4:98;;25779:205;-1:-1:-1;25779:205:98:o;21986:729::-;-1:-1:-1;;;;;22120:29:98;;22088;22120;;;:20;:29;;;;;;;;22088:61;;;;;;;;;;;;;;;;;;;22120:29;;22088:61;;;22120:29;22088:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22164:9;22159:550;22183:12;:19;22179:1;:23;22159:550;;;22223:18;22244:12;22257:1;22244:15;;;;;;;;:::i;:::-;;;;;;;22223:36;;22273:40;22316:9;:21;22326:10;22316:21;;;;;;;;;;;22273:64;;22355:26;22370:10;22355:14;:26::i;:::-;22351:348;;;-1:-1:-1;;;;;22424:35:98;;22401:20;22424:35;;;:26;;;:35;;;;;;;22477:39;;;;22534:21;;;:37;;22424:35;;;;22534:37;;22424:35;;22534:37;:::i;:::-;;;;;;;;22604:12;22589:11;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;22634:50:98;;-1:-1:-1;22661:8:98;22671:12;22634:26;:50::i;:::-;22383:316;22351:348;22209:500;;22204:3;;;;;:::i;:::-;;;;22159:550;;13722:227;13864:11;:32;13801:7;;;;13847:49;;:14;:49;:::i;:::-;13820:76;-1:-1:-1;13913:29:98;13933:8;13820:76;13913:29;:::i;13955:487::-;14048:7;14067:24;14147:8;14111:11;:32;;;14094:14;:49;;;;:::i;:::-;:62;;;;:::i;:::-;14188:17;;;:66;;-1:-1:-1;;;14188:66:98;;-1:-1:-1;;;;;18221:15:109;;;14188:66:98;;;18203:34:109;;;;14248:4:98;18253:18:109;;;18246:43;14067:89:98;;-1:-1:-1;14166:19:98;;14188:17;;;:42;;18115:18:109;;14188:66:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14301:21;;14166:88;;-1:-1:-1;14268:30:98;14282:16;14166:88;14268:30;:::i;:::-;:54;14264:139;;;14357:21;;:35;;14381:11;;14357:35;:::i;:::-;14338:54;;14264:139;-1:-1:-1;14419:16:98;13955:487;-1:-1:-1;;;13955:487:98:o;36989:719::-;37142:18;37162:19;37211:12;37197:26;;37263:11;37240:9;:19;;;:34;;37233:42;;;;:::i;:::-;37312:11;37289:9;:19;;;:34;37285:173;;-1:-1:-1;37413:1:98;;-1:-1:-1;37413:1:98;37405:13;;37285:173;37524:177;37571:9;:19;;;37557:11;:33;;;;:::i;:::-;37643:9;:24;;;37681:10;37524:19;:177::i;:::-;37511:190;;36989:719;;;;;;:::o;14116:118:11:-;14173:10;:20;;-1:-1:-1;;14173:20:11;;;;;;;;;;14208:19;;2866:41:109;;;14208:19:11;;2854:2:109;2839:18;14208:19:11;;;;;;;;14116:118;:::o;20562:220:98:-;20645:6;-1:-1:-1;;;;;20713:26:98;;;:62;;20760:15;20713:62;;;20742:15;20706:69;20562:220;-1:-1:-1;;20562:220:98:o;8269:350:11:-;5660:16;:14;:16::i;:::-;8428:6:::1;::::0;:11;8424:45:::1;;8448:21;;;;;;;;;;;;;;8424:45;8556:7;8567:1;8556:12:::0;8552:34:::1;;8577:9;;;;;;;;;;;;;;8552:34;8596:6;:16:::0;8269:350::o;17244:551:98:-;17328:28;17348:7;17328:19;:28::i;:::-;17443:17;;;:69;;;;;-1:-1:-1;;;;;18221:15:109;;;17443:69:98;;;18203:34:109;;;;17506:4:98;18253:18:109;;;18246:43;17412:28:98;;17443:17;;;;:45;;18115:18:109;;17443:69:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17412:100;;17527:23;17522:78;;17573:16;;;;;;;;;;;;;;17522:78;17609:42;17665:5;17654:53;;;;;;;;;;;;:::i;:::-;17609:98;;17717:37;17742:7;17751:2;17717:24;:37::i;:::-;17764:24;17776:7;17785:2;17764:11;:24::i;:::-;17318:477;;17244:551;;:::o;21475:127::-;21567:28;;3475:25:109;;;21567:28:98;;3463:2:109;3448:18;21567:28:98;3329:177:109;6721:269:10;6815:16;-1:-1:-1;;;;;6815:16:10;;;6811:173;;6847:45;6879:3;6884:7;6847:31;:45::i;6811:173::-;6923:50;6952:6;6960:3;6965:7;6923:28;:50::i;181:376:63:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;35140:269:98:-;35201:15;-1:-1:-1;;;35236:2:98;:13;;35228:66;;;;-1:-1:-1;;;35228:66:98;;30422:2:109;35228:66:98;;;30404:21:109;30461:2;30441:18;;;30434:30;30500:34;30480:18;;;30473:62;30571:10;30551:18;;;30544:38;30599:19;;35228:66:98;30220:404:109;35228:66:98;-1:-1:-1;;;35312:2:98;:12;35304:53;;;;-1:-1:-1;;;35304:53:98;;30831:2:109;35304:53:98;;;30813:21:109;30870:2;30850:18;;;30843:30;30909;30889:18;;;30882:58;30957:18;;35304:53:98;30629:352:109;35304:53:98;35399:3;6541:34;35376:7;35381:2;35376;:7;:::i;:::-;35375:19;;;;:::i;25588:185::-;25656:4;25679:22;;;:9;:22;;;;;:33;:37;;;;:87;;-1:-1:-1;;25764:1:98;25720:22;;;:9;:22;;;;;;;;:32;;-1:-1:-1;;;;;25720:32:98;:46;;;25588:185::o;8577:512::-;-1:-1:-1;;;;;8785:21:98;;8781:77;;8829:18;;;;;;;;;;;;;;8781:77;8879:17;;-1:-1:-1;;;;;8879:17:98;8867:100;;8934:22;;-1:-1:-1;;;8934:22:98;;;;;;;;;;;8867:100;8981:17;;;:35;;;;;-1:-1:-1;;;;;7809:55:109;;;8981:35:98;;;7791:74:109;;;;8981:17:98;;;:26;;7764:18:109;;8981:35:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8976:93;;9039:19;;;;;;;;;;;;;;25990:1548;26130:22;26171:9;26166:630;26190:16;:23;26186:1;:27;26166:630;;;26293:16;26310:1;26293:19;;;;;;;;:::i;:::-;;;;;;;:30;;;26327:1;26293:35;26289:187;26453:8;26289:187;26489:18;26510:16;26527:1;26510:19;;;;;;;;:::i;:::-;;;;;;;:30;;;26489:51;;26559:26;26574:10;26559:14;:26::i;:::-;26554:167;;26612:29;;-1:-1:-1;;;26612:29:98;;;;;3475:25:109;;;3448:18;;26612:29:98;3329:177:109;26554:167:98;26753:16;26770:1;26753:19;;;;;;;;:::i;:::-;;;;;;;:32;;;26734:51;;;;;:::i;:::-;;;26220:576;26166:630;26215:3;;;;:::i;:::-;;;;26166:630;;;-1:-1:-1;;;;;;25210:26:98;;26892:29;25210:26;;;:18;:26;;;;;;26924:60;;26968:15;26924:11;:60::i;:::-;27095:17;;;:66;;-1:-1:-1;;;27095:66:98;;-1:-1:-1;;;;;18221:15:109;;;27095:66:98;;;18203:34:109;;;;27155:4:98;18253:18:109;;;18246:43;26892:92:98;;-1:-1:-1;27066:26:98;;27095:17;;;:42;;18115:18:109;;27095:66:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27066:95;;27351:18;27327:21;:42;27323:147;;;27392:67;;;;;;;;28216:25:109;;;28257:18;;;28250:34;;;28189:18;;27392:67:98;28042:248:109;27323:147:98;-1:-1:-1;;;;;;27480:27:98;;;;;;;:18;:27;;;;;:51;;;;-1:-1:-1;;25990:1548:98:o;27544:3518::-;27659:29;27703:9;27698:3358;27722:16;:23;27718:1;:27;27698:3358;;;27766:18;27787:16;27804:1;27787:19;;;;;;;;:::i;:::-;;;;;;;:30;;;27766:51;;27890:12;:19;27913:1;27890:24;27886:920;;27949:16;;;27963:1;27949:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27949:16:98;27934:31;;28001:10;27983:12;27996:1;27983:15;;;;;;;;:::i;:::-;;;;;;:28;;;;;27886:920;;;28060:10;28101:9;28096:318;28120:12;:19;28116:1;:23;28096:318;;;28216:10;28197:12;28210:1;28197:15;;;;;;;;:::i;:::-;;;;;;;:29;28193:203;;28299:40;;;;;;;;28216:25:109;;;28257:18;;;28250:34;;;28262:4:98;;-1:-1:-1;28189:18:109;;28299:40:98;28042:248:109;28193:203:98;28141:3;;;;:::i;:::-;;;;28096:318;;;;28436:5;28431:361;;28465:21;28503:12;:19;28525:1;28503:23;;;;:::i;:::-;28489:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28489:38:98;;28465:62;;28554:9;28549:124;28573:12;:19;28569:1;:23;28549:124;;;28635:12;28648:1;28635:15;;;;;;;;:::i;:::-;;;;;;;28625:4;28630:1;28625:7;;;;;;;;:::i;:::-;;;;;;;;;;:25;28594:3;;;;:::i;:::-;;;;28549:124;;;;28722:10;28694:4;28699:12;:19;28694:25;;;;;;;;:::i;:::-;;;;;;;;;;:38;28769:4;-1:-1:-1;28431:361:98;28042:764;27886:920;28819:12;28834:16;28851:1;28834:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:32;;;28881:40;28924:21;;;:9;:21;;;;;;-1:-1:-1;;;;;29078:35:98;;;;:26;;;:35;;;;;;28834:32;;-1:-1:-1;29301:40:98;29078:35;28834:32;29301:11;:40::i;:::-;-1:-1:-1;;;;;29476:35:98;;;;;;:26;;;:35;;;;;:50;;;29278:63;;-1:-1:-1;29476:35:98;29798:246;-1:-1:-1;;;;;29822:29:98;;;;;;:20;:29;;;;;:36;29818:40;;29798:246;;;29923:19;;-1:-1:-1;;;;;29887:29:98;;29923:19;29887:29;;;:20;:29;;;;;:32;;29917:1;;29887:32;;;;;;:::i;:::-;;;;;;;;;:55;29883:147;;29980:4;29966:18;;30006:5;;29883:147;29860:3;;;;:::i;:::-;;;;29798:246;;;;30062:11;30057:106;;-1:-1:-1;;;;;30093:29:98;;;;;;:20;:29;;;;;;;30128:19;;30093:55;;;;;;;;;;;;;;;;;;30057:106;30342:12;30318:20;:36;30314:370;;30389:35;30404:20;30389:12;:35;:::i;:::-;30374:11;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;30467:35:98;;-1:-1:-1;30482:20:98;30467:12;:35;:::i;:::-;30442:8;:21;;;:60;;;;;;;:::i;:::-;;;;-1:-1:-1;30314:370:98;;-1:-1:-1;30314:370:98;;30556:35;30579:12;30556:20;:35;:::i;:::-;30541:11;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;30634:35:98;;-1:-1:-1;30657:12:98;30634:20;:35;:::i;:::-;30609:8;:21;;;:60;;;;;;;:::i;:::-;;;;-1:-1:-1;;30314:370:98;30740:8;:18;;;30762:1;30740:23;30736:310;;30804:12;30783:18;;;:33;30736:310;;;30855:58;30882:8;30892:20;30855:26;:58::i;:::-;30984:21;;;;31007:23;;;;30936:95;;;-1:-1:-1;;;;;31484:55:109;;31466:74;;31571:2;31556:18;;31549:34;;;31599:18;;;31592:34;;;31657:2;31642:18;;31635:34;;;;31700:3;31685:19;;31678:35;30936:95:98;;31453:3:109;31438:19;30936:95:98;;;;;;;30736:310;27752:3304;;;;;;27747:3;;;;;:::i;:::-;;;;27698:3358;;2455:490:41;2711:4;2705;2699;2693;2685:6;2681:2;2674:5;2669:47;2659:270;;2822:10;2816:4;2809:24;2910:4;2904;2897:18;11454:1189;11617:2;11611:4;11604:16;11674:6;11668:4;11661:20;11814:34;11808:4;11801:48;12272:4;12266;12260;12254;12251:1;12244:5;12237;12232:45;12192:16;12185:24;12181:1;12174:4;12168:11;12165:18;12162:48;11890:405;11863:655;;12411:10;12405:4;12398:24;12499:4;12493;12486:18;11863:655;12625:1;12619:4;12612:15;11454:1189;;;:::o;31068:276:98:-;31145:7;;31180:25;31199:6;31187:8;31180:25;:::i;:::-;31164:41;;31229:1;31220:6;:10;31216:90;;;31253:42;;;;;;;;31922:25:109;;;31963:18;;;31956:34;;;32006:18;;;31999:34;;;31895:18;;31253:42:98;31724:315:109;14:180;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:109;;14:180;-1:-1:-1;14:180:109:o;199:184::-;-1:-1:-1;;;248:1:109;241:88;348:4;345:1;338:15;372:4;369:1;362:15;388:145;474:1;467:5;464:12;454:46;;480:18;;:::i;:::-;509;;388:145::o;538:250::-;623:1;633:113;647:6;644:1;641:13;633:113;;;723:11;;;717:18;704:11;;;697:39;669:2;662:10;633:113;;;-1:-1:-1;;780:1:109;762:16;;755:27;538:250::o;793:271::-;835:3;873:5;867:12;900:6;895:3;888:19;916:76;985:6;978:4;973:3;969:14;962:4;955:5;951:16;916:76;:::i;:::-;1046:2;1025:15;-1:-1:-1;;1021:29:109;1012:39;;;;1053:4;1008:50;;793:271;-1:-1:-1;;793:271:109:o;1069:252::-;1156:5;1150:12;1145:3;1138:25;1120:3;1209:4;1202:5;1198:16;1192:23;1247:4;1240;1235:3;1231:14;1224:28;1268:47;1309:4;1304:3;1300:14;1286:12;1268:47;:::i;:::-;1261:54;1069:252;-1:-1:-1;;;;1069:252:109:o;1326:1058::-;1740:4;1769:3;1799:6;1788:9;1781:25;1842:6;1837:2;1826:9;1822:18;1815:34;1885:6;1880:2;1869:9;1865:18;1858:34;1928:6;1923:2;1912:9;1908:18;1901:34;-1:-1:-1;;;;;2045:2:109;2037:6;2033:15;2027:3;2016:9;2012:19;2005:44;2098:2;2090:6;2086:15;2080:3;2069:9;2065:19;2058:44;2151:2;2143:6;2139:15;2133:3;2122:9;2118:19;2111:44;;2192:6;2186:3;2175:9;2171:19;2164:35;2208:59;2262:3;2251:9;2247:19;2239:6;2208:59;:::i;:::-;2304:2;2298:3;2287:9;2283:19;2276:31;2324:54;2374:2;2363:9;2359:18;2351:6;2324:54;:::i;:::-;2316:62;1326:1058;-1:-1:-1;;;;;;;;;;;;;1326:1058:109:o;2389:332::-;2447:6;2500:2;2488:9;2479:7;2475:23;2471:32;2468:52;;;2516:1;2513;2506:12;2468:52;2555:9;2542:23;2605:66;2598:5;2594:78;2587:5;2584:89;2574:117;;2687:1;2684;2677:12;2918:154;-1:-1:-1;;;;;2997:5:109;2993:54;2986:5;2983:65;2973:93;;3062:1;3059;3052:12;3077:247;3136:6;3189:2;3177:9;3168:7;3164:23;3160:32;3157:52;;;3205:1;3202;3195:12;3157:52;3244:9;3231:23;3263:31;3288:5;3263:31;:::i;3511:184::-;-1:-1:-1;;;3560:1:109;3553:88;3660:4;3657:1;3650:15;3684:4;3681:1;3674:15;3700:257;3772:4;3766:11;;;3804:17;;3851:18;3836:34;;3872:22;;;3833:62;3830:88;;;3898:18;;:::i;:::-;3934:4;3927:24;3700:257;:::o;3962:253::-;4034:2;4028:9;4076:4;4064:17;;4111:18;4096:34;;4132:22;;;4093:62;4090:88;;;4158:18;;:::i;4220:253::-;4292:2;4286:9;4334:4;4322:17;;4369:18;4354:34;;4390:22;;;4351:62;4348:88;;;4416:18;;:::i;4478:253::-;4550:2;4544:9;4592:4;4580:17;;4627:18;4612:34;;4648:22;;;4609:62;4606:88;;;4674:18;;:::i;4736:275::-;4807:2;4801:9;4872:2;4853:13;;-1:-1:-1;;4849:27:109;4837:40;;4907:18;4892:34;;4928:22;;;4889:62;4886:88;;;4954:18;;:::i;:::-;4990:2;4983:22;4736:275;;-1:-1:-1;4736:275:109:o;5016:183::-;5076:4;5109:18;5101:6;5098:30;5095:56;;;5131:18;;:::i;:::-;-1:-1:-1;5176:1:109;5172:14;5188:4;5168:25;;5016:183::o;5204:737::-;5258:5;5311:3;5304:4;5296:6;5292:17;5288:27;5278:55;;5329:1;5326;5319:12;5278:55;5365:6;5352:20;5391:4;5415:60;5431:43;5471:2;5431:43;:::i;:::-;5415:60;:::i;:::-;5509:15;;;5595:1;5591:10;;;;5579:23;;5575:32;;;5540:12;;;;5619:15;;;5616:35;;;5647:1;5644;5637:12;5616:35;5683:2;5675:6;5671:15;5695:217;5711:6;5706:3;5703:15;5695:217;;;5791:3;5778:17;5808:31;5833:5;5808:31;:::i;:::-;5852:18;;5890:12;;;;5728;;5695:217;;;-1:-1:-1;5930:5:109;5204:737;-1:-1:-1;;;;;;5204:737:109:o;5946:186::-;5994:4;6027:18;6019:6;6016:30;6013:56;;;6049:18;;:::i;:::-;-1:-1:-1;6115:2:109;6094:15;-1:-1:-1;;6090:29:109;6121:4;6086:40;;5946:186::o;6137:462::-;6179:5;6232:3;6225:4;6217:6;6213:17;6209:27;6199:55;;6250:1;6247;6240:12;6199:55;6286:6;6273:20;6317:48;6333:31;6361:2;6333:31;:::i;6317:48::-;6390:2;6381:7;6374:19;6436:3;6429:4;6424:2;6416:6;6412:15;6408:26;6405:35;6402:55;;;6453:1;6450;6443:12;6402:55;6518:2;6511:4;6503:6;6499:17;6492:4;6483:7;6479:18;6466:55;6566:1;6541:16;;;6559:4;6537:27;6530:38;;;;6545:7;6137:462;-1:-1:-1;;;6137:462:109:o;6604:702::-;6715:6;6723;6731;6784:2;6772:9;6763:7;6759:23;6755:32;6752:52;;;6800:1;6797;6790:12;6752:52;6840:9;6827:23;6869:18;6910:2;6902:6;6899:14;6896:34;;;6926:1;6923;6916:12;6896:34;6949:61;7002:7;6993:6;6982:9;6978:22;6949:61;:::i;:::-;6939:71;;7063:2;7052:9;7048:18;7035:32;7019:48;;7092:2;7082:8;7079:16;7076:36;;;7108:1;7105;7098:12;7076:36;;7131:51;7174:7;7163:8;7152:9;7148:24;7131:51;:::i;:::-;7121:61;;;7232:2;7221:9;7217:18;7204:32;7245:31;7270:5;7245:31;:::i;:::-;7295:5;7285:15;;;6604:702;;;;;:::o;7311:315::-;7379:6;7387;7440:2;7428:9;7419:7;7415:23;7411:32;7408:52;;;7456:1;7453;7446:12;7408:52;7495:9;7482:23;7514:31;7539:5;7514:31;:::i;:::-;7564:5;7616:2;7601:18;;;;7588:32;;-1:-1:-1;;;7311:315:109:o;7876:455::-;7953:6;7961;8014:2;8002:9;7993:7;7989:23;7985:32;7982:52;;;8030:1;8027;8020:12;7982:52;8070:9;8057:23;8103:18;8095:6;8092:30;8089:50;;;8135:1;8132;8125:12;8089:50;8158:49;8199:7;8190:6;8179:9;8175:22;8158:49;:::i;:::-;8148:59;;;8257:2;8246:9;8242:18;8229:32;8270:31;8295:5;8270:31;:::i;:::-;8320:5;8310:15;;;7876:455;;;;;:::o;8567:142::-;8650:1;8643:5;8640:12;8630:46;;8656:18;;:::i;8714:213::-;8863:2;8848:18;;8875:46;8852:9;8903:6;8875:46;:::i;8932:316::-;9009:6;9017;9025;9078:2;9066:9;9057:7;9053:23;9049:32;9046:52;;;9094:1;9091;9084:12;9046:52;-1:-1:-1;;9117:23:109;;;9187:2;9172:18;;9159:32;;-1:-1:-1;9238:2:109;9223:18;;;9210:32;;8932:316;-1:-1:-1;8932:316:109:o;9253:143::-;9337:1;9330:5;9327:12;9317:46;;9343:18;;:::i;9401:215::-;9551:2;9536:18;;9563:47;9540:9;9592:6;9563:47;:::i;10457:261::-;10638:2;10627:9;10620:21;10601:4;10658:54;10708:2;10697:9;10693:18;10685:6;10658:54;:::i;10723:1357::-;10850:6;10858;10911:2;10899:9;10890:7;10886:23;10882:32;10879:52;;;10927:1;10924;10917:12;10879:52;10967:9;10954:23;10996:18;11037:2;11029:6;11026:14;11023:34;;;11053:1;11050;11043:12;11023:34;11076:61;11129:7;11120:6;11109:9;11105:22;11076:61;:::i;:::-;11066:71;;11156:2;11146:12;;11211:2;11200:9;11196:18;11183:32;11240:2;11230:8;11227:16;11224:36;;;11256:1;11253;11246:12;11224:36;11279:24;;11334:4;11326:13;;11322:27;-1:-1:-1;11312:55:109;;11363:1;11360;11353:12;11312:55;11399:2;11386:16;11422:60;11438:43;11478:2;11438:43;:::i;11422:60::-;11516:15;;;11598:1;11594:10;;;;11586:19;;11582:28;;;11547:12;;;;11622:19;;;11619:39;;;11654:1;11651;11644:12;11619:39;11686:2;11682;11678:11;11698:352;11714:6;11709:3;11706:15;11698:352;;;11800:3;11787:17;11836:2;11823:11;11820:19;11817:109;;;11880:1;11909:2;11905;11898:14;11817:109;11951:56;11999:7;11994:2;11980:11;11976:2;11972:20;11968:29;11951:56;:::i;:::-;11939:69;;-1:-1:-1;12028:12:109;;;;11731;;11698:352;;;11702:3;12069:5;12059:15;;;;;;;;10723:1357;;;;;:::o;12085:849::-;12318:2;12370:21;;;12440:13;;12343:18;;;12462:22;;;12289:4;;12318:2;12503;;12521:18;;;;12562:15;;;12289:4;12605:303;12619:6;12616:1;12613:13;12605:303;;;12678:13;;12720:9;;-1:-1:-1;;;;;12716:58:109;12704:71;;12815:11;;12809:18;12795:12;;;12788:40;12848:12;;;;12883:15;;;;12641:1;12634:9;12605:303;;;-1:-1:-1;12925:3:109;;12085:849;-1:-1:-1;;;;;;;12085:849:109:o;12939:118::-;13025:5;13018:13;13011:21;13004:5;13001:32;12991:60;;13047:1;13044;13037:12;13062:241;13118:6;13171:2;13159:9;13150:7;13146:23;13142:32;13139:52;;;13187:1;13184;13177:12;13139:52;13226:9;13213:23;13245:28;13267:5;13245:28;:::i;13308:953::-;-1:-1:-1;;;;;13804:15:109;;;13786:34;;13856:15;;;13851:2;13836:18;;13829:43;13908:15;;13903:2;13888:18;;13881:43;13955:2;13940:18;;13933:34;;;13998:3;13983:19;;13976:35;;;13712:3;13697:19;;14020:59;14074:3;14059:19;;14051:6;14020:59;:::i;:::-;14116:6;14110:3;14099:9;14095:19;14088:35;14160:6;14154:3;14143:9;14139:19;14132:35;14204:6;14198:3;14187:9;14183:19;14176:35;14248:6;14242:3;14231:9;14227:19;14220:35;13308:953;;;;;;;;;;;;;:::o;14266:315::-;14334:6;14342;14395:2;14383:9;14374:7;14370:23;14366:32;14363:52;;;14411:1;14408;14401:12;14363:52;14447:9;14434:23;14424:33;;14507:2;14496:9;14492:18;14479:32;14520:31;14545:5;14520:31;:::i;14586:1202::-;14704:6;14735:2;14778;14766:9;14757:7;14753:23;14749:32;14746:52;;;14794:1;14791;14784:12;14746:52;14834:9;14821:23;14867:18;14859:6;14856:30;14853:50;;;14899:1;14896;14889:12;14853:50;14922:22;;14975:4;14967:13;;14963:27;-1:-1:-1;14953:55:109;;15004:1;15001;14994:12;14953:55;15040:2;15027:16;15063:60;15079:43;15119:2;15079:43;:::i;15063:60::-;15157:15;;;15239:1;15235:10;;;;15227:19;;15223:28;;;15188:12;;;;15263:19;;;15260:39;;;15295:1;15292;15285:12;15260:39;15319:11;;;;15339:419;15355:6;15350:3;15347:15;15339:419;;;15437:4;15431:3;15422:7;15418:17;15414:28;15411:118;;;15483:1;15512:2;15508;15501:14;15411:118;15555:22;;:::i;:::-;15604:17;;15590:32;;15671:12;;;15658:26;15642:14;;;15635:50;15698:18;;15381:4;15372:14;;;;15736:12;;;;15339:419;;;15777:5;14586:1202;-1:-1:-1;;;;;;;14586:1202:109:o;15793:242::-;15936:2;15921:18;;15969:1;15958:13;;15948:47;;15975:18;;:::i;:::-;16004:25;;;15793:242;:::o;16040:388::-;16117:6;16125;16178:2;16166:9;16157:7;16153:23;16149:32;16146:52;;;16194:1;16191;16184:12;16146:52;16230:9;16217:23;16207:33;;16291:2;16280:9;16276:18;16263:32;16318:18;16310:6;16307:30;16304:50;;;16350:1;16347;16340:12;16304:50;16373:49;16414:7;16405:6;16394:9;16390:22;16373:49;:::i;:::-;16363:59;;;16040:388;;;;;:::o;16433:437::-;16512:1;16508:12;;;;16555;;;16576:61;;16630:4;16622:6;16618:17;16608:27;;16576:61;16683:2;16675:6;16672:14;16652:18;16649:38;16646:218;;-1:-1:-1;;;16717:1:109;16710:88;16821:4;16818:1;16811:15;16849:4;16846:1;16839:15;16875:184;16945:6;16998:2;16986:9;16977:7;16973:23;16969:32;16966:52;;;17014:1;17011;17004:12;16966:52;-1:-1:-1;17037:16:109;;16875:184;-1:-1:-1;16875:184:109:o;17064:::-;-1:-1:-1;;;17113:1:109;17106:88;17213:4;17210:1;17203:15;17237:4;17234:1;17227:15;17253:125;17318:9;;;17339:10;;;17336:36;;;17352:18;;:::i;17383:128::-;17450:9;;;17471:11;;;17468:37;;;17485:18;;:::i;17516:274::-;17556:1;17582;17572:189;;-1:-1:-1;;;17614:1:109;17607:88;17718:4;17715:1;17708:15;17746:4;17743:1;17736:15;17572:189;-1:-1:-1;17775:9:109;;17516:274::o;17795:168::-;17868:9;;;17899;;17916:15;;;17910:22;;17896:37;17886:71;;17937:18;;:::i;18673:156::-;18761:13;;18803:1;18793:12;;18783:40;;18819:1;18816;18809:12;18834:597;18909:5;18957:4;18945:9;18940:3;18936:19;18932:30;18929:50;;;18975:1;18972;18965:12;18929:50;19008:2;19002:9;19050:4;19042:6;19038:17;19121:6;19109:10;19106:22;19085:18;19073:10;19070:34;19067:62;19064:88;;;19132:18;;:::i;:::-;19172:10;19168:2;19161:22;;19201:6;19192:15;;19237:9;19231:16;19223:6;19216:32;19302:2;19291:9;19287:18;19281:25;19276:2;19268:6;19264:15;19257:50;19361:2;19350:9;19346:18;19340:25;19335:2;19327:6;19323:15;19316:50;19420:2;19409:9;19405:18;19399:25;19394:2;19386:6;19382:15;19375:50;;18834:597;;;;:::o;19436:885::-;19541:6;19594:3;19582:9;19573:7;19569:23;19565:33;19562:53;;;19611:1;19608;19601:12;19562:53;19637:22;;:::i;:::-;19689:9;19683:16;19708:33;19733:7;19708:33;:::i;:::-;19764:7;19757:5;19750:22;;19825:2;19814:9;19810:18;19804:25;19799:2;19792:5;19788:14;19781:49;19883:2;19872:9;19868:18;19862:25;19857:2;19850:5;19846:14;19839:49;19941:2;19930:9;19926:18;19920:25;19915:2;19908:5;19904:14;19897:49;19991:3;19980:9;19976:19;19970:26;20027:1;20018:7;20015:14;20005:42;;20043:1;20040;20033:12;20005:42;20074:3;20063:15;;20056:32;20121:59;20175:3;20160:19;;20121:59;:::i;:::-;20115:3;20108:5;20104:15;20097:84;20214:76;20282:7;20276:3;20265:9;20261:19;20214:76;:::i;:::-;20208:3;20197:15;;20190:101;20201:5;19436:885;-1:-1:-1;;;19436:885:109:o;20326:1121::-;20516:4;20558:3;20547:9;20543:19;20535:27;;20589:6;20578:9;20571:25;-1:-1:-1;;;;;20642:6:109;20636:13;20632:62;20627:2;20616:9;20612:18;20605:90;20749:2;20741:6;20737:15;20731:22;20726:2;20715:9;20711:18;20704:50;20808:2;20800:6;20796:15;20790:22;20785:2;20774:9;20770:18;20763:50;20868:2;20860:6;20856:15;20850:22;20844:3;20833:9;20829:19;20822:51;20920:3;20912:6;20908:16;20902:23;20934:63;20992:3;20981:9;20977:19;20963:12;20934:63;:::i;:::-;;21046:3;21038:6;21034:16;21028:23;21060:64;21119:3;21108:9;21104:19;21088:14;21060:64;:::i;:::-;-1:-1:-1;21173:3:109;21161:16;;;;21155:23;21215:21;;21209:3;21194:19;;21187:50;21300:2;21280:23;;21274:30;21268:3;21253:19;;21246:59;21368:2;21348:23;;21342:30;21336:3;21321:19;;21314:59;21436:2;21416:23;21410:30;21404:3;21389:19;;;21382:59;20326:1121;;-1:-1:-1;20326:1121:109:o;21754:245::-;21821:6;21874:2;21862:9;21853:7;21849:23;21845:32;21842:52;;;21890:1;21887;21880:12;21842:52;21922:9;21916:16;21941:28;21963:5;21941:28;:::i;22004:726::-;22070:5;22118:4;22106:9;22101:3;22097:19;22093:30;22090:50;;;22136:1;22133;22126:12;22090:50;22158:22;;:::i;:::-;22149:31;;22209:9;22203:16;22196:5;22189:31;22264:2;22253:9;22249:18;22243:25;22291:18;22283:6;22280:30;22277:50;;;22323:1;22320;22313:12;22277:50;22346:22;;22399:4;22391:13;;22387:23;-1:-1:-1;22377:51:109;;22424:1;22421;22414:12;22377:51;22453:2;22447:9;22478:48;22494:31;22522:2;22494:31;:::i;22478:48::-;22549:2;22542:5;22535:17;22589:3;22584:2;22579;22575;22571:11;22567:20;22564:29;22561:49;;;22606:1;22603;22596:12;22561:49;22619:67;22683:2;22678;22671:5;22667:14;22662:2;22658;22654:11;22619:67;:::i;:::-;22713:2;22702:14;;22695:29;-1:-1:-1;22706:5:109;;22004:726;-1:-1:-1;;;22004:726:109:o;22735:1028::-;22827:6;22880:2;22868:9;22859:7;22855:23;22851:32;22848:52;;;22896:1;22893;22886:12;22848:52;22929:9;22923:16;22958:18;22999:2;22991:6;22988:14;22985:34;;;23015:1;23012;23005:12;22985:34;23038:22;;;;23094:4;23076:16;;;23072:27;23069:47;;;23112:1;23109;23102:12;23069:47;23138:22;;:::i;:::-;23189:2;23183:9;23176:5;23169:24;23231:2;23227;23223:11;23217:18;23244:33;23269:7;23244:33;:::i;:::-;23304:2;23293:14;;23286:31;23355:2;23347:11;;23341:18;23368:33;23341:18;23368:33;:::i;:::-;23428:2;23417:14;;23410:31;23480:2;23472:11;;23466:18;23496:16;;;23493:36;;;23525:1;23522;23515:12;23493:36;23561:65;23618:7;23607:8;23603:2;23599:17;23561:65;:::i;:::-;23556:2;23549:5;23545:14;23538:89;;23674:3;23670:2;23666:12;23660:19;23654:3;23647:5;23643:15;23636:44;23727:3;23723:2;23719:12;23713:19;23707:3;23700:5;23696:15;23689:44;23752:5;23742:15;;;;;22735:1028;;;;:::o;24141:291::-;24318:2;24307:9;24300:21;24281:4;24338:45;24379:2;24368:9;24364:18;24356:6;24338:45;:::i;:::-;24330:53;;24419:6;24414:2;24403:9;24399:18;24392:34;24141:291;;;;;:::o;24437:986::-;24540:6;24593:2;24581:9;24572:7;24568:23;24564:32;24561:52;;;24609:1;24606;24599:12;24561:52;24642:9;24636:16;24671:18;24712:2;24704:6;24701:14;24698:34;;;24728:1;24725;24718:12;24698:34;24751:22;;;;24807:4;24789:16;;;24785:27;24782:47;;;24825:1;24822;24815:12;24782:47;24851:22;;:::i;:::-;24902:2;24896:9;24889:5;24882:24;24944:2;24940;24936:11;24930:18;24957:33;24982:7;24957:33;:::i;:::-;25017:2;25006:14;;24999:31;25076:2;25068:11;;;25062:18;25046:14;;;25039:42;25119:2;25111:11;;25105:18;25132:33;25105:18;25132:33;:::i;:::-;25192:2;25181:14;;25174:31;25244:3;25236:12;;25230:19;25261:16;;;25258:36;;;25290:1;25287;25280:12;25258:36;25327:65;25384:7;25373:8;25369:2;25365:17;25327:65;:::i;:::-;25321:3;25310:15;;25303:90;-1:-1:-1;25314:5:109;24437:986;-1:-1:-1;;;;;24437:986:109:o;25428:265::-;25512:6;25565:2;25553:9;25544:7;25540:23;25536:32;25533:52;;;25581:1;25578;25571:12;25533:52;25613:9;25607:16;25632:31;25657:5;25632:31;:::i;25698:135::-;25737:3;25758:17;;;25755:43;;25778:18;;:::i;:::-;-1:-1:-1;25825:1:109;25814:13;;25698:135::o;25964:545::-;26066:2;26061:3;26058:11;26055:448;;;26102:1;26127:5;26123:2;26116:17;26172:4;26168:2;26158:19;26242:2;26230:10;26226:19;26223:1;26219:27;26213:4;26209:38;26278:4;26266:10;26263:20;26260:47;;;-1:-1:-1;26301:4:109;26260:47;26356:2;26351:3;26347:12;26344:1;26340:20;26334:4;26330:31;26320:41;;26411:82;26429:2;26422:5;26419:13;26411:82;;;26474:17;;;26455:1;26444:13;26411:82;;;26415:3;;;25964:545;;;:::o;26685:1352::-;26811:3;26805:10;26838:18;26830:6;26827:30;26824:56;;;26860:18;;:::i;:::-;26889:97;26979:6;26939:38;26971:4;26965:11;26939:38;:::i;:::-;26933:4;26889:97;:::i;:::-;27041:4;;27105:2;27094:14;;27122:1;27117:663;;;;27824:1;27841:6;27838:89;;;-1:-1:-1;27893:19:109;;;27887:26;27838:89;-1:-1:-1;;26642:1:109;26638:11;;;26634:24;26630:29;26620:40;26666:1;26662:11;;;26617:57;27940:81;;27087:944;;27117:663;25911:1;25904:14;;;25948:4;25935:18;;-1:-1:-1;;27153:20:109;;;27271:236;27285:7;27282:1;27279:14;27271:236;;;27374:19;;;27368:26;27353:42;;27466:27;;;;27434:1;27422:14;;;;27301:19;;27271:236;;;27275:3;27535:6;27526:7;27523:19;27520:201;;;27596:19;;;27590:26;-1:-1:-1;;27679:1:109;27675:14;;;27691:3;27671:24;27667:37;27663:42;27648:58;27633:74;;27520:201;-1:-1:-1;;;;;27767:1:109;27751:14;;;27747:22;27734:36;;-1:-1:-1;26685:1352:109:o;28652:184::-;-1:-1:-1;;;28701:1:109;28694:88;28801:4;28798:1;28791:15;28825:4;28822:1;28815:15;28841:184;-1:-1:-1;;;28890:1:109;28883:88;28990:4;28987:1;28980:15;29014:4;29011:1;29004:15;29030:1185;29159:6;29190:2;29233;29221:9;29212:7;29208:23;29204:32;29201:52;;;29249:1;29246;29239:12;29201:52;29282:9;29276:16;29315:18;29307:6;29304:30;29301:50;;;29347:1;29344;29337:12;29301:50;29370:22;;29423:4;29415:13;;29411:27;-1:-1:-1;29401:55:109;;29452:1;29449;29442:12;29401:55;29481:2;29475:9;29504:60;29520:43;29560:2;29520:43;:::i;29504:60::-;29598:15;;;29680:1;29676:10;;;;29668:19;;29664:28;;;29629:12;;;;29704:19;;;29701:39;;;29736:1;29733;29726:12;29701:39;29760:11;;;;29780:405;29796:6;29791:3;29788:15;29780:405;;;29878:4;29872:3;29863:7;29859:17;29855:28;29852:118;;;29924:1;29953:2;29949;29942:14;29852:118;29996:22;;:::i;:::-;30045:10;;30031:25;;30098:12;;;30092:19;30076:14;;;30069:43;30125:18;;29822:4;29813:14;;;;30163:12;;;;29780:405;;30986:216;31050:9;;;31078:11;;;31025:3;31108:9;;31136:10;;31132:19;;31161:10;;31153:19;;31129:44;31126:70;;;31176:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "3335": [
        {
          "start": 1241,
          "length": 32
        },
        {
          "start": 6888,
          "length": 32
        },
        {
          "start": 7035,
          "length": 32
        },
        {
          "start": 7598,
          "length": 32
        }
      ],
      "3337": [
        {
          "start": 1547,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "D()": "0f529ba2",
    "MAX_STAKED_PROPOSALS()": "406244d8",
    "NATIVE()": "a0cf0aea",
    "PRECISION_SCALE()": "d7050f07",
    "activatePoints()": "814516ad",
    "allocate(bytes,address)": "ef2920fc",
    "calculateConviction(uint256,uint256,uint256)": "346db8cb",
    "calculateThreshold(uint256)": "59a5db8b",
    "canExecuteProposal(uint256)": "824ea8ed",
    "deactivatePoints(address)": "6453d9c4",
    "decay()": "54fac919",
    "decreasePower(address,uint256)": "2ed04b2b",
    "distribute(address[],bytes,address)": "0a6f0ee9",
    "getAllo()": "15cc481e",
    "getMaxConviction(uint256)": "950559d7",
    "getMetadata(uint256)": "a574cea4",
    "getPayouts(address[],bytes[])": "b2b878d0",
    "getPointsPerMember()": "cbfc1daa",
    "getPointsPerTokenStaked()": "abdceae1",
    "getPoolAmount()": "4ab4ba42",
    "getPoolId()": "38fff2d0",
    "getProposal(uint256)": "c7f758a8",
    "getProposalStakedAmount(uint256)": "dc96ff2d",
    "getProposalVoterStake(uint256,address)": "e0dd2c38",
    "getRecipientStatus(address)": "eb11af93",
    "getStrategyId()": "42fda9c7",
    "getTotalVoterStakePct(address)": "bcc5b93b",
    "increasePoolAmount(uint256)": "f5b0dfb7",
    "increasePower(address,uint256)": "782aadff",
    "increasePowerQuadratic(address,uint256)": "13845d0e",
    "initialize(uint256,bytes)": "edd146cc",
    "isPoolActive()": "df868ed3",
    "isValidAllocator(address)": "4d31d087",
    "maxRatio()": "76365af7",
    "minPointsActivated()": "05d19175",
    "pointConfig()": "a47ff7e5",
    "pointSystem()": "2dbd6fdd",
    "proposalCounter()": "0c0512e9",
    "proposalType()": "351d9f96",
    "proposals(uint256)": "013cf08b",
    "registerRecipient(bytes,address)": "2bbe0cae",
    "registryCommunity()": "6003e414",
    "setDecay(uint256)": "69fa25c4",
    "setMaxRatio(uint256)": "11f22ae3",
    "setPoolActive(bool)": "b5f620ce",
    "setRegistryCommunity(address)": "058aca44",
    "setWeight(uint256)": "fc1711f2",
    "supportProposal((uint256,int256)[])": "e33add93",
    "supportsInterface(bytes4)": "01ffc9a7",
    "totalEffectiveActivePoints()": "d1e36232",
    "totalPointsActivated()": "aba9ffee",
    "totalStaked()": "817b1cd2",
    "totalVoterStakePct(address)": "5db64b99",
    "updateProposalConviction(uint256)": "1aa91a9e",
    "voterStakedProposals(address,uint256)": "868c57b8",
    "weight()": "a1aab33f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALLOCATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ENDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALREADY_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AMOUNT_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ANCHOR_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ARRAY_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AddressCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountOverMaxRatio\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantIncreaseFixedSystem\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ConvictionUnderMinimumThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_FEE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_METADATA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_REGISTRATION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxPointsReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NONCE_NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IMPLEMENTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PENDING_OWNER\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pointsSupport\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointsBalance\",\"type\":\"uint256\"}],\"name\":\"NotEnoughPointsToSupport\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCommunityAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_INACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolIdCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolIsEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposalDataIsEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposalIdCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalNotActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalNotInList\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ProposalSupportDuplicated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_ALREADY_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"name\":\"RECIPIENT_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_NOT_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RegistryCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_support\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"_result\",\"type\":\"int256\"}],\"name\":\"SupportUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserIsInactive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotInRegistry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decay\",\"type\":\"uint256\"}],\"name\":\"DecayUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"registryCommunity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"enum StrategyStruct.ProposalType\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"enum StrategyStruct.PointSystem\",\"name\":\"pointSystem\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pointsPerTokenStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointsPerMember\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensPerPoint\",\"type\":\"uint256\"}],\"internalType\":\"struct StrategyStruct.PointSystemConfig\",\"name\":\"pointConfig\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct StrategyStruct.InitializeParams\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"InitializedCV\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxRatio\",\"type\":\"uint256\"}],\"name\":\"MaxRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PoolAmountIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensUnStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsToDecrease\",\"type\":\"uint256\"}],\"name\":\"PowerDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsToIncrease\",\"type\":\"uint256\"}],\"name\":\"PowerIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStakedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"convictionLast\",\"type\":\"uint256\"}],\"name\":\"SupportAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"WeightUpdated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"D\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STAKED_PROPOSALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION_SCALE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activatePoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timePassed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lastConv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_oldAmount\",\"type\":\"uint256\"}],\"name\":\"calculateConviction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestedAmount\",\"type\":\"uint256\"}],\"name\":\"calculateThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"canExecuteProposal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canBeExecuted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"deactivatePoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountToUnstake\",\"type\":\"uint256\"}],\"name\":\"decreasePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getMaxConviction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPointsPerMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPointsPerTokenStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requestedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum StrategyStruct.ProposalStatus\",\"name\":\"proposalStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"blockLast\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"convictionLast\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voterStakedPoints\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getProposalVoterStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getTotalVoterStakePct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountToStake\",\"type\":\"uint256\"}],\"name\":\"increasePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountToStake\",\"type\":\"uint256\"}],\"name\":\"increasePowerQuadratic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPointsActivated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pointConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pointsPerTokenStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointsPerMember\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensPerPoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pointSystem\",\"outputs\":[{\"internalType\":\"enum StrategyStruct.PointSystem\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalType\",\"outputs\":[{\"internalType\":\"enum StrategyStruct.ProposalType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"convictionLast\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requestedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockLast\",\"type\":\"uint256\"},{\"internalType\":\"enum StrategyStruct.ProposalStatus\",\"name\":\"proposalStatus\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCommunity\",\"outputs\":[{\"internalType\":\"contract RegistryCommunity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_decay\",\"type\":\"uint256\"}],\"name\":\"setDecay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxRatio\",\"type\":\"uint256\"}],\"name\":\"setMaxRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"setPoolActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryCommunity\",\"type\":\"address\"}],\"name\":\"setRegistryCommunity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"setWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"deltaSupport\",\"type\":\"int256\"}],\"internalType\":\"struct StrategyStruct.ProposalSupport[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"name\":\"supportProposal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalEffectiveActivePoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPointsActivated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalVoterStakePct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"updateProposalConviction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voterStakedProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ANCHOR_ERROR()\":[{\"details\":\"Thrown if the anchor creation fails\"}],\"NONCE_NOT_AVAILABLE()\":[{\"details\":\"Thrown when the nonce passed has been used or not available\"}],\"NOT_PENDING_OWNER()\":[{\"details\":\"Thrown when the 'msg.sender' is not the pending owner on ownership transfer\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"calculateConviction(uint256,uint256,uint256)\":{\"details\":\"Conviction formula: a^t * y(0) + x * (1 - a^t) / (1 - a) Solidity implementation: y = (2^128 * a^t * y0 + x * D * (2^128 - 2^128 * a^t) / (D - aD) + 2^127) / 2^128\",\"params\":{\"_lastConv\":\"Last conviction record\",\"_oldAmount\":\"Amount of tokens staked until now\",\"_timePassed\":\"Number of blocks since last conviction record\"},\"returns\":{\"_0\":\"Current conviction\"}},\"calculateThreshold(uint256)\":{\"details\":\"Formula: \\u03c1 * totalStaked / (1 - a) / (\\u03b2 - requestedAmount / total)**2 For the Solidity implementation we amplify \\u03c1 and \\u03b2 and simplify the formula: weight = \\u03c1 * D maxRatio = \\u03b2 * D decay = a * D threshold = weight * totalStaked * D ** 2 * funds ** 2 / (D - decay) / (maxRatio * funds - requestedAmount * D) ** 2\",\"params\":{\"_requestedAmount\":\"Requested amount of tokens on certain proposal\"},\"returns\":{\"_threshold\":\"Threshold a proposal's conviction should surpass in order to be able to executed it.\"}},\"distribute(address[],bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to distribute to the recipients\",\"_recipientIds\":\"The IDs of the recipients\",\"_sender\":\"The address of the sender\"}},\"getAllo()\":{\"returns\":{\"_0\":\"The Allo contract\"}},\"getPayouts(address[],bytes[])\":{\"returns\":{\"_0\":\"Input the values you would send to distribute(), get the amounts each recipient in the array would receive\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getProposal(uint256)\":{\"details\":\"Get proposal details\",\"params\":{\"_proposalId\":\"Proposal id\"},\"returns\":{\"beneficiary\":\"Proposal beneficiary\",\"blockLast\":\"Last block when conviction was calculated\",\"convictionLast\":\"Last conviction calculated\",\"proposalStatus\":\"Proposal status\",\"requestedAmount\":\"Proposal requested amount\",\"requestedToken\":\"Proposal requested token\",\"stakedAmount\":\"Proposal staked points\",\"submitter\":\"Proposal submitter\",\"threshold\":\"Proposal threshold\"}},\"getProposalVoterStake(uint256,address)\":{\"params\":{\"_proposalId\":\"Proposal id\",\"_voter\":\"Voter address\"},\"returns\":{\"_0\":\"Proposal voter stake\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"details\":\"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\",\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"'true' if the pool is active, otherwise 'false'\"}},\"isValidAllocator(address)\":{\"details\":\"How the allocator is determined is up to the strategy implementation.\",\"params\":{\"_allocator\":\"The address to check if it is a valid allocator for the strategy.\"},\"returns\":{\"_0\":\"'true' if the address is a valid allocator, 'false' otherwise\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"recipientId\":\"The recipientId\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ALLOCATION_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is active.\"}],\"ALLOCATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is not active.\"}],\"ALLOCATION_NOT_ENDED()\":[{\"notice\":\"Thrown when the allocation is not ended.\"}],\"ALREADY_INITIALIZED()\":[{\"notice\":\"Thrown when data is already intialized\"}],\"AMOUNT_MISMATCH()\":[{\"notice\":\"Thrown when the amount of tokens sent does not match the amount of tokens expected\"}],\"ARRAY_MISMATCH()\":[{\"notice\":\"Thrown when two arrays length are not equal\"}],\"INVALID()\":[{\"notice\":\"Thrown as a general error when input / data is invalid\"}],\"INVALID_ADDRESS()\":[{\"notice\":\"Thrown when an invalid address is used\"}],\"INVALID_FEE()\":[{\"notice\":\"Thrown when the fee is below 1e18 which is the fee percentage denominator\"}],\"INVALID_METADATA()\":[{\"notice\":\"Thrown when the metadata is invalid.\"}],\"INVALID_REGISTRATION()\":[{\"notice\":\"Thrown when the registration is invalid.\"}],\"IS_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is approved and should be cloned\"}],\"MISMATCH()\":[{\"notice\":\"Thrown when mismatch in decoding data\"}],\"NOT_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is not approved\"}],\"NOT_ENOUGH_FUNDS()\":[{\"notice\":\"Thrown when not enough funds are available\"}],\"NOT_IMPLEMENTED()\":[{\"notice\":\"Thrown when the function is not implemented\"}],\"NOT_INITIALIZED()\":[{\"notice\":\"Thrown when data is yet to be initialized\"}],\"POOL_ACTIVE()\":[{\"notice\":\"Thrown when a pool is already active\"}],\"POOL_INACTIVE()\":[{\"notice\":\"Thrown when a pool is inactive\"}],\"RECIPIENT_ALREADY_ACCEPTED()\":[{\"notice\":\"Thrown when recipient is already accepted.\"}],\"RECIPIENT_ERROR(address)\":[{\"notice\":\"Thrown when there is an error in recipient.\"}],\"RECIPIENT_NOT_ACCEPTED()\":[{\"notice\":\"Thrown when the recipient is not accepted.\"}],\"REGISTRATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when registration is not active.\"}],\"UNAUTHORIZED()\":[{\"notice\":\"Thrown when user is not authorized\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when address is the zero address\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"},\"allocate(bytes,address)\":{\"notice\":\"Allocates to a recipient.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"Distributes funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the 'Allo' contract.\"},\"getPoolAmount()\":{\"notice\":\"Getter for the 'poolAmount'.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId'.\"},\"getProposalVoterStake(uint256,address)\":{\"notice\":\"Get stake of voter `_voter` on proposal #`_proposalId`\"},\"getRecipientStatus(address)\":{\"notice\":\"Getter for the status of a recipient.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'strategyId'.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the pool amount.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"Getter for whether or not the pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks if the '_allocator' is a valid allocator.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"Registers a recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"pkg/contracts/src/CVStrategy.sol\":\"CVStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/contracts/=lib/allo-v2/lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/allo-v2/lib/v2-core/lib/prb-math/\",\":@prb/test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/\",\":@sablier/v2-core/=lib/allo-v2/lib/v2-core/\",\":ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/\",\":allo-v2-contracts/=lib/allo-v2/contracts/\",\":allo-v2-test/=lib/allo-v2/test/\",\":allo-v2/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/allo-v2/lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/allo-v2/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hats-protocol/=lib/allo-v2/lib/hats-protocol/\",\":openzeppelin-contracts-upgradeable/=lib/allo-v2/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/allo-v2/lib/permit2/\",\":prb-math/=lib/allo-v2/lib/v2-core/lib/prb-math/src/\",\":prb-test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/\",\":solady/=lib/allo-v2/lib/solady/\",\":solarray/=lib/allo-v2/lib/v2-core/lib/solarray/src/\",\":solbase/=lib/allo-v2/lib/hats-protocol/lib/solbase/src/\",\":solmate/=lib/allo-v2/lib/permit2/lib/solmate/\",\":utils/=lib/allo-v2/lib/hats-protocol/lib/utils/\",\":v2-core/=lib/allo-v2/lib/v2-core/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0x752bbf7be2275b2d0e6323063775fc5afe3c360a2dae9b879452a42e8b2280ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a41b95501d44b11718ec5df990595335d44bd6bba883e4879bdce35261ee93a7\",\"dweb:/ipfs/QmcRbrYjcibhDqsKJZM3HLceB4Kdd4tKDXqDaaVzbTkza1\"]},\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"lib/allo-v2/contracts/core/libraries/Errors.sol\":{\"keccak256\":\"0x114aa83c98eff68576c06a073357e2ead6910e1a4195cf720eb579ef701afa15\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c92fd5843368c9d66f7d0321932c0a9dc0919b292f51bd3aefad066548c622cf\",\"dweb:/ipfs/QmZ8N4tToDEaNh9gSyR2J7JCAGPHQUSrs1iyrmzEDHkHEA\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c\",\"dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn\"]},\"lib/allo-v2/contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a\",\"dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv\"]},\"lib/allo-v2/contracts/core/libraries/Transfer.sol\":{\"keccak256\":\"0xb7b2bb9e47965ba74753f58544fe5f168a28970798720675ca7ba97fb0c79286\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://47968985fb2900f1a930fb53038971bd092a09b71c7247f9fb50253b41db1d11\",\"dweb:/ipfs/QmXYQmJ8jZpiCXKySGZqPmdkSUqvTFpi7Wfd23boTKEYQ5\"]},\"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":{\"keccak256\":\"0x3f1382dc6c35d50545e327e7ed6016f2bd752357d446bd698014073f0b812873\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://99500abcd617fa43f6dde49e2c7802821ceaf54a65a8055cbbf2695ecd107974\",\"dweb:/ipfs/QmUktZkWuu3GCMEijY1fqt7NMy7BzpTvEtcmpB1fuoa7zt\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"pkg/contracts/src/CVStrategy.sol\":{\"keccak256\":\"0xc7f17888039878d761b700f53b746410b21b5a44f43562c3fbeecd685f24cdd2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4a5e7616c064cac5c88ec80e14f8e98cfc50f19925c739afa5b7a9cfe5c4c6f4\",\"dweb:/ipfs/QmbBjzCGgC2XRnpEkrnriSYNvyQjRHvLogmA6z2f2JLec5\"]},\"pkg/contracts/src/ISafe.sol\":{\"keccak256\":\"0x878a210809bb684c42157a10f3f90350a67d0a4863f130499942b06f0f2c9143\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fa2d71bd427c3415e98a2ee15ff673f3cc61c17f14d7087c5eedc83b55f6b0ef\",\"dweb:/ipfs/QmesVSmJQQzi6ys1cvhQFCJyDXchb736mT5bXks4Yp6Cbj\"]},\"pkg/contracts/src/RegistryCommunity.sol\":{\"keccak256\":\"0xad607812599b893003f8fea50c9ce9344b2d4102d814218366dfe89ffa606988\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8c3d25e489b1a7a745fa82cf7138b2b8e046dc0511bcbc8557c5ccf219bd1a99\",\"dweb:/ipfs/QmURnAxdxVDuFyYRCjLS4mXcnfMSPkaofxacD7tYUQLnxB\"]},\"pkg/contracts/src/RegistryFactory.sol\":{\"keccak256\":\"0x24de9c87a391b6ccb8d28d8e5389b99749106b03873cdd474edce4a2f715b2ec\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b6c3b77a5a02c6ad889e1825d85f7495c8940a8aee5cb540e68319c9ccc9e2d5\",\"dweb:/ipfs/QmTiVmmHXQUJKMLVmHqhiLXALc9EBiTYEtY472stMsYaCw\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_allo",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALLOCATION_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALLOCATION_NOT_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALLOCATION_NOT_ENDED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALREADY_INITIALIZED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AMOUNT_MISMATCH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ANCHOR_ERROR"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ARRAY_MISMATCH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AddressCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AmountOverMaxRatio"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CantIncreaseFixedSystem"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ConvictionUnderMinimumThreshold"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_FEE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_METADATA"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_REGISTRATION"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IS_APPROVED_STRATEGY"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MISMATCH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxPointsReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NONCE_NOT_AVAILABLE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_APPROVED_STRATEGY"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_ENOUGH_FUNDS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_IMPLEMENTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_INITIALIZED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_PENDING_OWNER"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pointsSupport",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pointsBalance",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotEnoughPointsToSupport"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyCommunityAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "POOL_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "POOL_INACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolIdCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolIsEmpty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProposalDataIsEmpty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProposalIdCannotBeZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ProposalNotActive"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ProposalNotInList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ProposalSupportDuplicated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RECIPIENT_ALREADY_ACCEPTED"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "RECIPIENT_ERROR"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RECIPIENT_NOT_ACCEPTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "REGISTRATION_NOT_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RegistryCannotBeZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_support",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "_delta",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "_result",
              "type": "int256"
            }
          ],
          "type": "error",
          "name": "SupportUnderflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UNAUTHORIZED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UserCannotBeZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UserIsInactive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UserNotInRegistry"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZERO_ADDRESS"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Allocated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "decay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DecayUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Distributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipientAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Distributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct StrategyStruct.InitializeParams",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "registryCommunity",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "decay",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "internalType": "enum StrategyStruct.ProposalType",
                  "name": "proposalType",
                  "type": "uint8"
                },
                {
                  "internalType": "enum StrategyStruct.PointSystem",
                  "name": "pointSystem",
                  "type": "uint8"
                },
                {
                  "internalType": "struct StrategyStruct.PointSystemConfig",
                  "name": "pointConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "pointsPerTokenStaked",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pointsPerMember",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokensPerPoint",
                      "type": "uint256"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "InitializedCV",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxRatio",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxRatioUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolActive",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolAmountIncreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokensUnStaked",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "pointsToDecrease",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PowerDecreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "tokensStaked",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "pointsToIncrease",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PowerIncreased",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Registered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalStakedAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "convictionLast",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SupportAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WeightUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "D",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_STAKED_PROPOSALS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NATIVE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRECISION_SCALE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activatePoints"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "allocate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_timePassed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_lastConv",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_oldAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateConviction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestedAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateThreshold",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_threshold",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canExecuteProposal",
          "outputs": [
            {
              "internalType": "bool",
              "name": "canBeExecuted",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_member",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deactivatePoints"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_member",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amountToUnstake",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreasePower",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_recipientIds",
              "type": "address[]"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distribute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllo",
          "outputs": [
            {
              "internalType": "contract IAllo",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxConviction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMetadata",
          "outputs": [
            {
              "internalType": "struct Metadata",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocol",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "pointer",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getPayouts",
          "outputs": [
            {
              "internalType": "struct IStrategy.PayoutSummary[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipientAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPointsPerMember",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPointsPerTokenStaked",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "address",
              "name": "submitter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "requestedToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum StrategyStruct.ProposalStatus",
              "name": "proposalStatus",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "blockLast",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "convictionLast",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "voterStakedPoints",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalStakedAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_voter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposalVoterStake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_recipientId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecipientStatus",
          "outputs": [
            {
              "internalType": "enum IStrategy.Status",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategyId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_voter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalVoterStakePct",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increasePoolAmount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_member",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amountToStake",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increasePower",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_member",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amountToStake",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "increasePowerQuadratic",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isPoolActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_allocator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidAllocator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxRatio",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minPointsActivated",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pointConfig",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pointsPerTokenStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pointsPerMember",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensPerPoint",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pointSystem",
          "outputs": [
            {
              "internalType": "enum StrategyStruct.PointSystem",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalCounter",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalType",
          "outputs": [
            {
              "internalType": "enum StrategyStruct.ProposalType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "convictionLast",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "submitter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "requestedToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockLast",
              "type": "uint256"
            },
            {
              "internalType": "enum StrategyStruct.ProposalStatus",
              "name": "proposalStatus",
              "type": "uint8"
            },
            {
              "internalType": "struct Metadata",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocol",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "pointer",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "registerRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registryCommunity",
          "outputs": [
            {
              "internalType": "contract RegistryCommunity",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_decay",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDecay"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maxRatio",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxRatio"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_active",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoolActive"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_registryCommunity",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRegistryCommunity"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_weight",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWeight"
        },
        {
          "inputs": [
            {
              "internalType": "struct StrategyStruct.ProposalSupport[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "deltaSupport",
                  "type": "int256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportProposal"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalEffectiveActivePoints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalPointsActivated",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalStaked",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalVoterStakePct",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateProposalConviction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "voterStakedProposals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weight",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allocate(bytes,address)": {
            "details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
            "params": {
              "_data": "The data to use to allocate to the recipient",
              "_sender": "The address of the sender"
            }
          },
          "calculateConviction(uint256,uint256,uint256)": {
            "details": "Conviction formula: a^t * y(0) + x * (1 - a^t) / (1 - a) Solidity implementation: y = (2^128 * a^t * y0 + x * D * (2^128 - 2^128 * a^t) / (D - aD) + 2^127) / 2^128",
            "params": {
              "_lastConv": "Last conviction record",
              "_oldAmount": "Amount of tokens staked until now",
              "_timePassed": "Number of blocks since last conviction record"
            },
            "returns": {
              "_0": "Current conviction"
            }
          },
          "calculateThreshold(uint256)": {
            "details": "Formula: ρ * totalStaked / (1 - a) / (β - requestedAmount / total)**2 For the Solidity implementation we amplify ρ and β and simplify the formula: weight = ρ * D maxRatio = β * D decay = a * D threshold = weight * totalStaked * D ** 2 * funds ** 2 / (D - decay) / (maxRatio * funds - requestedAmount * D) ** 2",
            "params": {
              "_requestedAmount": "Requested amount of tokens on certain proposal"
            },
            "returns": {
              "_threshold": "Threshold a proposal's conviction should surpass in order to be able to executed it."
            }
          },
          "distribute(address[],bytes,address)": {
            "details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
            "params": {
              "_data": "The data to use to distribute to the recipients",
              "_recipientIds": "The IDs of the recipients",
              "_sender": "The address of the sender"
            }
          },
          "getAllo()": {
            "returns": {
              "_0": "The Allo contract"
            }
          },
          "getPayouts(address[],bytes[])": {
            "returns": {
              "_0": "Input the values you would send to distribute(), get the amounts each recipient in the array would receive"
            }
          },
          "getPoolAmount()": {
            "returns": {
              "_0": "The balance of the pool"
            }
          },
          "getPoolId()": {
            "returns": {
              "_0": "The ID of the pool"
            }
          },
          "getProposal(uint256)": {
            "details": "Get proposal details",
            "params": {
              "_proposalId": "Proposal id"
            },
            "returns": {
              "beneficiary": "Proposal beneficiary",
              "blockLast": "Last block when conviction was calculated",
              "convictionLast": "Last conviction calculated",
              "proposalStatus": "Proposal status",
              "requestedAmount": "Proposal requested amount",
              "requestedToken": "Proposal requested token",
              "stakedAmount": "Proposal staked points",
              "submitter": "Proposal submitter",
              "threshold": "Proposal threshold"
            }
          },
          "getProposalVoterStake(uint256,address)": {
            "params": {
              "_proposalId": "Proposal id",
              "_voter": "Voter address"
            },
            "returns": {
              "_0": "Proposal voter stake"
            }
          },
          "getRecipientStatus(address)": {
            "params": {
              "_recipientId": "The ID of the recipient"
            },
            "returns": {
              "_0": "The status of the recipient"
            }
          },
          "getStrategyId()": {
            "returns": {
              "_0": "The ID of the strategy"
            }
          },
          "increasePoolAmount(uint256)": {
            "details": "Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.",
            "params": {
              "_amount": "The amount to increase the pool by"
            }
          },
          "initialize(uint256,bytes)": {
            "params": {
              "_data": "The encoded data",
              "_poolId": "The ID of the pool"
            }
          },
          "isPoolActive()": {
            "returns": {
              "_0": "'true' if the pool is active, otherwise 'false'"
            }
          },
          "isValidAllocator(address)": {
            "details": "How the allocator is determined is up to the strategy implementation.",
            "params": {
              "_allocator": "The address to check if it is a valid allocator for the strategy."
            },
            "returns": {
              "_0": "'true' if the address is a valid allocator, 'false' otherwise"
            }
          },
          "registerRecipient(bytes,address)": {
            "details": "Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.",
            "params": {
              "_data": "The data to use to register the recipient",
              "_sender": "The address of the sender"
            },
            "returns": {
              "recipientId": "The recipientId"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "NATIVE()": {
            "notice": "Address of the native token"
          },
          "allocate(bytes,address)": {
            "notice": "Allocates to a recipient."
          },
          "distribute(address[],bytes,address)": {
            "notice": "Distributes funds (tokens) to recipients."
          },
          "getAllo()": {
            "notice": "Getter for the 'Allo' contract."
          },
          "getPoolAmount()": {
            "notice": "Getter for the 'poolAmount'."
          },
          "getPoolId()": {
            "notice": "Getter for the 'poolId'."
          },
          "getProposalVoterStake(uint256,address)": {
            "notice": "Get stake of voter `_voter` on proposal #`_proposalId`"
          },
          "getRecipientStatus(address)": {
            "notice": "Getter for the status of a recipient."
          },
          "getStrategyId()": {
            "notice": "Getter for the 'strategyId'."
          },
          "increasePoolAmount(uint256)": {
            "notice": "Increases the pool amount."
          },
          "initialize(uint256,bytes)": {
            "notice": "@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."
          },
          "isPoolActive()": {
            "notice": "Getter for whether or not the pool is active."
          },
          "isValidAllocator(address)": {
            "notice": "Checks if the '_allocator' is a valid allocator."
          },
          "registerRecipient(bytes,address)": {
            "notice": "Registers a recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/allo-v2/lib/openzeppelin-contracts/contracts/",
        "@prb/math/=lib/allo-v2/lib/v2-core/lib/prb-math/",
        "@prb/test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/",
        "@sablier/v2-core/=lib/allo-v2/lib/v2-core/",
        "ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/",
        "allo-v2-contracts/=lib/allo-v2/contracts/",
        "allo-v2-test/=lib/allo-v2/test/",
        "allo-v2/=lib/allo-v2/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eas-contracts/=lib/allo-v2/lib/eas-contracts/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/allo-v2/lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hats-protocol/=lib/allo-v2/lib/hats-protocol/",
        "openzeppelin-contracts-upgradeable/=lib/allo-v2/lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/allo-v2/lib/permit2/",
        "prb-math/=lib/allo-v2/lib/v2-core/lib/prb-math/src/",
        "prb-test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/",
        "safe-contracts/=lib/safe-contracts/",
        "solady/=lib/allo-v2/lib/solady/",
        "solarray/=lib/allo-v2/lib/v2-core/lib/solarray/src/",
        "solbase/=lib/allo-v2/lib/hats-protocol/lib/solbase/src/",
        "solmate/=lib/allo-v2/lib/permit2/lib/solmate/",
        "utils/=lib/allo-v2/lib/hats-protocol/lib/utils/",
        "v2-core/=lib/allo-v2/lib/v2-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "pkg/contracts/src/CVStrategy.sol": "CVStrategy"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/allo-v2/contracts/core/interfaces/IAllo.sol": {
        "keccak256": "0x752bbf7be2275b2d0e6323063775fc5afe3c360a2dae9b879452a42e8b2280ce",
        "urls": [
          "bzz-raw://a41b95501d44b11718ec5df990595335d44bd6bba883e4879bdce35261ee93a7",
          "dweb:/ipfs/QmcRbrYjcibhDqsKJZM3HLceB4Kdd4tKDXqDaaVzbTkza1"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/interfaces/IRegistry.sol": {
        "keccak256": "0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f",
        "urls": [
          "bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e",
          "dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/contracts/core/interfaces/IStrategy.sol": {
        "keccak256": "0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23",
        "urls": [
          "bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487",
          "dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Errors.sol": {
        "keccak256": "0x114aa83c98eff68576c06a073357e2ead6910e1a4195cf720eb579ef701afa15",
        "urls": [
          "bzz-raw://c92fd5843368c9d66f7d0321932c0a9dc0919b292f51bd3aefad066548c622cf",
          "dweb:/ipfs/QmZ8N4tToDEaNh9gSyR2J7JCAGPHQUSrs1iyrmzEDHkHEA"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Metadata.sol": {
        "keccak256": "0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44",
        "urls": [
          "bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c",
          "dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Native.sol": {
        "keccak256": "0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5",
        "urls": [
          "bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a",
          "dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/core/libraries/Transfer.sol": {
        "keccak256": "0xb7b2bb9e47965ba74753f58544fe5f168a28970798720675ca7ba97fb0c79286",
        "urls": [
          "bzz-raw://47968985fb2900f1a930fb53038971bd092a09b71c7247f9fb50253b41db1d11",
          "dweb:/ipfs/QmXYQmJ8jZpiCXKySGZqPmdkSUqvTFpi7Wfd23boTKEYQ5"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/contracts/strategies/BaseStrategy.sol": {
        "keccak256": "0x3f1382dc6c35d50545e327e7ed6016f2bd752357d446bd698014073f0b812873",
        "urls": [
          "bzz-raw://99500abcd617fa43f6dde49e2c7802821ceaf54a65a8055cbbf2695ecd107974",
          "dweb:/ipfs/QmUktZkWuu3GCMEijY1fqt7NMy7BzpTvEtcmpB1fuoa7zt"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624",
        "urls": [
          "bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298",
          "dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "pkg/contracts/src/CVStrategy.sol": {
        "keccak256": "0xc7f17888039878d761b700f53b746410b21b5a44f43562c3fbeecd685f24cdd2",
        "urls": [
          "bzz-raw://4a5e7616c064cac5c88ec80e14f8e98cfc50f19925c739afa5b7a9cfe5c4c6f4",
          "dweb:/ipfs/QmbBjzCGgC2XRnpEkrnriSYNvyQjRHvLogmA6z2f2JLec5"
        ],
        "license": "AGPL-3.0-only"
      },
      "pkg/contracts/src/ISafe.sol": {
        "keccak256": "0x878a210809bb684c42157a10f3f90350a67d0a4863f130499942b06f0f2c9143",
        "urls": [
          "bzz-raw://fa2d71bd427c3415e98a2ee15ff673f3cc61c17f14d7087c5eedc83b55f6b0ef",
          "dweb:/ipfs/QmesVSmJQQzi6ys1cvhQFCJyDXchb736mT5bXks4Yp6Cbj"
        ],
        "license": "LGPL-3.0-only"
      },
      "pkg/contracts/src/RegistryCommunity.sol": {
        "keccak256": "0xad607812599b893003f8fea50c9ce9344b2d4102d814218366dfe89ffa606988",
        "urls": [
          "bzz-raw://8c3d25e489b1a7a745fa82cf7138b2b8e046dc0511bcbc8557c5ccf219bd1a99",
          "dweb:/ipfs/QmURnAxdxVDuFyYRCjLS4mXcnfMSPkaofxacD7tYUQLnxB"
        ],
        "license": "AGPL-3.0-only"
      },
      "pkg/contracts/src/RegistryFactory.sol": {
        "keccak256": "0x24de9c87a391b6ccb8d28d8e5389b99749106b03873cdd474edce4a2f715b2ec",
        "urls": [
          "bzz-raw://b6c3b77a5a02c6ad889e1825d85f7495c8940a8aee5cb540e68319c9ccc9e2d5",
          "dweb:/ipfs/QmTiVmmHXQUJKMLVmHqhiLXALc9EBiTYEtY472stMsYaCw"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "id": 98
}