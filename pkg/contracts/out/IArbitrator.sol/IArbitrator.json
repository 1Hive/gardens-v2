{"abi":[{"type":"function","name":"arbitrationCost","inputs":[{"name":"_extraData","type":"bytes","internalType":"bytes"},{"name":"_feeToken","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"cost","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"arbitrationCost","inputs":[{"name":"_extraData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"cost","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"createDispute","inputs":[{"name":"_numberOfChoices","type":"uint256","internalType":"uint256"},{"name":"_extraData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"disputeID","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"createDispute","inputs":[{"name":"_numberOfChoices","type":"uint256","internalType":"uint256"},{"name":"_extraData","type":"bytes","internalType":"bytes"},{"name":"_feeToken","type":"address","internalType":"contract IERC20"},{"name":"_feeAmount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"disputeID","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"currentRuling","inputs":[{"name":"_disputeID","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"ruling","type":"uint256","internalType":"uint256"},{"name":"tied","type":"bool","internalType":"bool"},{"name":"overridden","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"registerSafe","inputs":[{"name":"_safe","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AcceptedFeeToken","inputs":[{"name":"_token","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"_accepted","type":"bool","indexed":true,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"DisputeCreation","inputs":[{"name":"_disputeID","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"_arbitrable","type":"address","indexed":true,"internalType":"contract IArbitrable"}],"anonymous":false},{"type":"event","name":"NewCurrencyRate","inputs":[{"name":"_feeToken","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"_rateInEth","type":"uint64","indexed":false,"internalType":"uint64"},{"name":"_rateDecimals","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"Ruling","inputs":[{"name":"_arbitrable","type":"address","indexed":true,"internalType":"contract IArbitrable"},{"name":"_disputeID","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"_ruling","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"arbitrationCost(bytes)":"f7434ea9","arbitrationCost(bytes,address)":"d98493f6","createDispute(uint256,bytes)":"c13517e1","createDispute(uint256,bytes,address,uint256)":"f6506db4","currentRuling(uint256)":"1c3db16d","registerSafe(address)":"88d5b732"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"_accepted\",\"type\":\"bool\"}],\"name\":\"AcceptedFeeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"DisputeCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"_feeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_rateInEth\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_rateDecimals\",\"type\":\"uint8\"}],\"name\":\"NewCurrencyRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ruling\",\"type\":\"uint256\"}],\"name\":\"Ruling\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"contract IERC20\",\"name\":\"_feeToken\",\"type\":\"address\"}],\"name\":\"arbitrationCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"arbitrationCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numberOfChoices\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numberOfChoices\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"contract IERC20\",\"name\":\"_feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeAmount\",\"type\":\"uint256\"}],\"name\":\"createDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"currentRuling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"tied\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"overridden\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_safe\",\"type\":\"address\"}],\"name\":\"registerSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AcceptedFeeToken(address,bool)\":{\"details\":\"To be emitted when an ERC20 token is added or removed as a method to pay fees.\",\"params\":{\"_accepted\":\"Whether the token is accepted or not.\",\"_token\":\"The ERC20 token.\"}},\"DisputeCreation(uint256,address)\":{\"details\":\"To be emitted when a dispute is created.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"The identifier of the dispute in the Arbitrator contract.\"}},\"NewCurrencyRate(address,uint64,uint8)\":{\"details\":\"To be emitted when the fee for a particular ERC20 token is updated.\",\"params\":{\"_feeToken\":\"The ERC20 token.\",\"_rateDecimals\":\"The new decimals of the fee token rate.\",\"_rateInEth\":\"The new rate of the fee token in ETH.\"}},\"Ruling(address,uint256,uint256)\":{\"details\":\"To be raised when a ruling is given.\",\"params\":{\"_arbitrable\":\"The arbitrable receiving the ruling.\",\"_disputeID\":\"The identifier of the dispute in the Arbitrator contract.\",\"_ruling\":\"The ruling which was given.\"}}},\"kind\":\"dev\",\"methods\":{\"arbitrationCost(bytes)\":{\"details\":\"Compute the cost of arbitration denominated in the native currency, typically ETH.      It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_extraData\":\"Additional info about the dispute. We use it to pass the ID of the dispute's court (first 32 bytes), the minimum number of jurors required (next 32 bytes) and the ID of the specific dispute kit (last 32 bytes).\"},\"returns\":{\"cost\":\"The arbitration cost in ETH.\"}},\"arbitrationCost(bytes,address)\":{\"details\":\"Compute the cost of arbitration denominated in `_feeToken`.      It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_extraData\":\"Additional info about the dispute. We use it to pass the ID of the dispute's court (first 32 bytes), the minimum number of jurors required (next 32 bytes) and the ID of the specific dispute kit (last 32 bytes).\",\"_feeToken\":\"The ERC20 token used to pay fees.\"},\"returns\":{\"cost\":\"The arbitration cost in `_feeToken`.\"}},\"createDispute(uint256,bytes)\":{\"details\":\"Create a dispute and pay for the fees in the native currency, typically ETH.      Must be called by the arbitrable contract.      Must pay at least arbitrationCost(_extraData).\",\"params\":{\"_extraData\":\"Additional info about the dispute. We use it to pass the ID of the dispute's court (first 32 bytes), the minimum number of jurors required (next 32 bytes) and the ID of the specific dispute kit (last 32 bytes).\",\"_numberOfChoices\":\"The number of choices the arbitrator can choose from in this dispute.\"},\"returns\":{\"disputeID\":\"The identifier of the dispute created.\"}},\"createDispute(uint256,bytes,address,uint256)\":{\"details\":\"Create a dispute and pay for the fees in a supported ERC20 token.      Must be called by the arbitrable contract.      Must pay at least arbitrationCost(_extraData).\",\"params\":{\"_extraData\":\"Additional info about the dispute. We use it to pass the ID of the dispute's court (first 32 bytes), the minimum number of jurors required (next 32 bytes) and the ID of the specific dispute kit (last 32 bytes).\",\"_feeAmount\":\"Amount of the ERC20 token used to pay fees.\",\"_feeToken\":\"The ERC20 token used to pay fees.\",\"_numberOfChoices\":\"The number of choices the arbitrator can choose from in this dispute.\"},\"returns\":{\"disputeID\":\"The identifier of the dispute created.\"}},\"currentRuling(uint256)\":{\"details\":\"Gets the current ruling of a specified dispute.\",\"params\":{\"_disputeID\":\"The ID of the dispute.\"},\"returns\":{\"overridden\":\"Whether the ruling was overridden by appeal funding or not.\",\"ruling\":\"The current ruling.\",\"tied\":\"Whether it's a tie or not.\"}},\"registerSafe(address)\":{\"details\":\"Authorize the safe to execute a ruling on the source contract.<\",\"params\":{\"_safe\":\"that acts as the Tribunal safe that can rule disputes from the source Strategy.\"}}},\"title\":\"Arbitrator Arbitrator interface that implements the new arbitration standard. Unlike the ERC-792 this standard is not concerned with appeals, so each arbitrator can implement an appeal system that suits it the most. When developing arbitrator contracts we need to: - Define the functions for dispute creation (createDispute). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes). - Define the functions for cost display (arbitrationCost). - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"pkg/contracts/src/interfaces/IArbitrator.sol\":\"IArbitrator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/foundry/=lib/openzeppelin-foundry-upgrades/src/\",\":@prb/math/=lib/allo-v2/lib/v2-core/lib/prb-math/\",\":@prb/test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/\",\":@sablier/v2-core/=lib/allo-v2/lib/v2-core/\",\":@src/=pkg/contracts/src/\",\":@superfluid-finance/=lib/protocol-monorepo/packages/\",\":ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/\",\":__safe-smart-account/=lib/__safe-smart-account/\",\":allo-v2-contracts/=lib/allo-v2/contracts/\",\":allo-v2-test/=lib/allo-v2/test/\",\":allo-v2/=lib/allo-v2/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/allo-v2/lib/eas-contracts/contracts/\",\":eas-proxy/=lib/allo-v2/lib/eas-proxy/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/allo-v2/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hats-protocol/=lib/allo-v2/lib/hats-protocol/\",\":hedgey-vesting/=lib/allo-v2/lib/hedgey-vesting/contracts/\",\":lib/ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/allo-v2/lib/permit2/\",\":prb-math/=lib/allo-v2/lib/v2-core/lib/prb-math/src/\",\":prb-test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/\",\":protocol-monorepo/=lib/protocol-monorepo/packages/solidity-semantic-money/src/\",\":safe-smart-account/=lib/safe-smart-account/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solarray/=lib/allo-v2/lib/v2-core/lib/solarray/src/\",\":solbase/=lib/allo-v2/lib/hats-protocol/lib/solbase/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":solmate/=lib/allo-v2/lib/permit2/lib/solmate/\",\":superfluid-protocol-monorepo/=lib/allo-v2/lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\",\":utils/=lib/allo-v2/lib/hats-protocol/lib/utils/\",\":v2-core/=lib/allo-v2/lib/v2-core/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"pkg/contracts/src/interfaces/IArbitrable.sol\":{\"keccak256\":\"0x62f583c799ab885f04092c780ca25ca58383e34981427c82be73c70f8cc6ca52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7226cc99e84cb741d69b82d3cd25536d2f9ee5afc58b8c613d9f41e6e48b2508\",\"dweb:/ipfs/QmPwhRBYXx4EtqX3rPdD5ZRqYTWocFbSmkLtPRHWp7at6r\"]},\"pkg/contracts/src/interfaces/IArbitrator.sol\":{\"keccak256\":\"0x741edd3cc24c59d165594e94f9ddda46b1fbbc54a9e1f9274de3c2eac37d6e2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63c18e7bebae0b43502a0f78632d8e02845dc6b4d63c81ba54b4a4c164d2401d\",\"dweb:/ipfs/QmXjrXvxSBTv1muAM5JL7B2UhpwvGpMbtygfUmYTVNMv2R\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address","indexed":true},{"internalType":"bool","name":"_accepted","type":"bool","indexed":true}],"type":"event","name":"AcceptedFeeToken","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256","indexed":true},{"internalType":"contract IArbitrable","name":"_arbitrable","type":"address","indexed":true}],"type":"event","name":"DisputeCreation","anonymous":false},{"inputs":[{"internalType":"contract IERC20","name":"_feeToken","type":"address","indexed":true},{"internalType":"uint64","name":"_rateInEth","type":"uint64","indexed":false},{"internalType":"uint8","name":"_rateDecimals","type":"uint8","indexed":false}],"type":"event","name":"NewCurrencyRate","anonymous":false},{"inputs":[{"internalType":"contract IArbitrable","name":"_arbitrable","type":"address","indexed":true},{"internalType":"uint256","name":"_disputeID","type":"uint256","indexed":true},{"internalType":"uint256","name":"_ruling","type":"uint256","indexed":false}],"type":"event","name":"Ruling","anonymous":false},{"inputs":[{"internalType":"bytes","name":"_extraData","type":"bytes"},{"internalType":"contract IERC20","name":"_feeToken","type":"address"}],"stateMutability":"view","type":"function","name":"arbitrationCost","outputs":[{"internalType":"uint256","name":"cost","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"_extraData","type":"bytes"}],"stateMutability":"view","type":"function","name":"arbitrationCost","outputs":[{"internalType":"uint256","name":"cost","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_numberOfChoices","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"stateMutability":"payable","type":"function","name":"createDispute","outputs":[{"internalType":"uint256","name":"disputeID","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_numberOfChoices","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"},{"internalType":"contract IERC20","name":"_feeToken","type":"address"},{"internalType":"uint256","name":"_feeAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createDispute","outputs":[{"internalType":"uint256","name":"disputeID","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"}],"stateMutability":"view","type":"function","name":"currentRuling","outputs":[{"internalType":"uint256","name":"ruling","type":"uint256"},{"internalType":"bool","name":"tied","type":"bool"},{"internalType":"bool","name":"overridden","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_safe","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"registerSafe"}],"devdoc":{"kind":"dev","methods":{"arbitrationCost(bytes)":{"details":"Compute the cost of arbitration denominated in the native currency, typically ETH.      It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.","params":{"_extraData":"Additional info about the dispute. We use it to pass the ID of the dispute's court (first 32 bytes), the minimum number of jurors required (next 32 bytes) and the ID of the specific dispute kit (last 32 bytes)."},"returns":{"cost":"The arbitration cost in ETH."}},"arbitrationCost(bytes,address)":{"details":"Compute the cost of arbitration denominated in `_feeToken`.      It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.","params":{"_extraData":"Additional info about the dispute. We use it to pass the ID of the dispute's court (first 32 bytes), the minimum number of jurors required (next 32 bytes) and the ID of the specific dispute kit (last 32 bytes).","_feeToken":"The ERC20 token used to pay fees."},"returns":{"cost":"The arbitration cost in `_feeToken`."}},"createDispute(uint256,bytes)":{"details":"Create a dispute and pay for the fees in the native currency, typically ETH.      Must be called by the arbitrable contract.      Must pay at least arbitrationCost(_extraData).","params":{"_extraData":"Additional info about the dispute. We use it to pass the ID of the dispute's court (first 32 bytes), the minimum number of jurors required (next 32 bytes) and the ID of the specific dispute kit (last 32 bytes).","_numberOfChoices":"The number of choices the arbitrator can choose from in this dispute."},"returns":{"disputeID":"The identifier of the dispute created."}},"createDispute(uint256,bytes,address,uint256)":{"details":"Create a dispute and pay for the fees in a supported ERC20 token.      Must be called by the arbitrable contract.      Must pay at least arbitrationCost(_extraData).","params":{"_extraData":"Additional info about the dispute. We use it to pass the ID of the dispute's court (first 32 bytes), the minimum number of jurors required (next 32 bytes) and the ID of the specific dispute kit (last 32 bytes).","_feeAmount":"Amount of the ERC20 token used to pay fees.","_feeToken":"The ERC20 token used to pay fees.","_numberOfChoices":"The number of choices the arbitrator can choose from in this dispute."},"returns":{"disputeID":"The identifier of the dispute created."}},"currentRuling(uint256)":{"details":"Gets the current ruling of a specified dispute.","params":{"_disputeID":"The ID of the dispute."},"returns":{"overridden":"Whether the ruling was overridden by appeal funding or not.","ruling":"The current ruling.","tied":"Whether it's a tie or not."}},"registerSafe(address)":{"details":"Authorize the safe to execute a ruling on the source contract.<","params":{"_safe":"that acts as the Tribunal safe that can rule disputes from the source Strategy."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/foundry/=lib/openzeppelin-foundry-upgrades/src/","@prb/math/=lib/allo-v2/lib/v2-core/lib/prb-math/","@prb/test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/","@sablier/v2-core/=lib/allo-v2/lib/v2-core/","@src/=pkg/contracts/src/","@superfluid-finance/=lib/protocol-monorepo/packages/","ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/","__safe-smart-account/=lib/__safe-smart-account/","allo-v2-contracts/=lib/allo-v2/contracts/","allo-v2-test/=lib/allo-v2/test/","allo-v2/=lib/allo-v2/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","eas-contracts/=lib/allo-v2/lib/eas-contracts/contracts/","eas-proxy/=lib/allo-v2/lib/eas-proxy/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/allo-v2/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","hats-protocol/=lib/allo-v2/lib/hats-protocol/","hedgey-vesting/=lib/allo-v2/lib/hedgey-vesting/contracts/","lib/ERC1155/=lib/allo-v2/lib/hats-protocol/lib/ERC1155/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts/contracts/","permit2/=lib/allo-v2/lib/permit2/","prb-math/=lib/allo-v2/lib/v2-core/lib/prb-math/src/","prb-test/=lib/allo-v2/lib/v2-core/lib/prb-test/src/","protocol-monorepo/=lib/protocol-monorepo/packages/solidity-semantic-money/src/","safe-smart-account/=lib/safe-smart-account/","solady/=lib/allo-v2/lib/solady/src/","solarray/=lib/allo-v2/lib/v2-core/lib/solarray/src/","solbase/=lib/allo-v2/lib/hats-protocol/lib/solbase/src/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","solmate/=lib/allo-v2/lib/permit2/lib/solmate/","superfluid-protocol-monorepo/=lib/allo-v2/lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/","utils/=lib/allo-v2/lib/hats-protocol/lib/utils/","v2-core/=lib/allo-v2/lib/v2-core/"],"optimizer":{"enabled":true,"runs":0},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"pkg/contracts/src/interfaces/IArbitrator.sol":"IArbitrator"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305","urls":["bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5","dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"],"license":"MIT"},"pkg/contracts/src/interfaces/IArbitrable.sol":{"keccak256":"0x62f583c799ab885f04092c780ca25ca58383e34981427c82be73c70f8cc6ca52","urls":["bzz-raw://7226cc99e84cb741d69b82d3cd25536d2f9ee5afc58b8c613d9f41e6e48b2508","dweb:/ipfs/QmPwhRBYXx4EtqX3rPdD5ZRqYTWocFbSmkLtPRHWp7at6r"],"license":"MIT"},"pkg/contracts/src/interfaces/IArbitrator.sol":{"keccak256":"0x741edd3cc24c59d165594e94f9ddda46b1fbbc54a9e1f9274de3c2eac37d6e2c","urls":["bzz-raw://63c18e7bebae0b43502a0f78632d8e02845dc6b4d63c81ba54b4a4c164d2401d","dweb:/ipfs/QmXjrXvxSBTv1muAM5JL7B2UhpwvGpMbtygfUmYTVNMv2R"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"pkg/contracts/src/interfaces/IArbitrator.sol","id":46363,"exportedSymbols":{"IArbitrable":[46258],"IArbitrator":[46362],"IERC20":[17513]},"nodeType":"SourceUnit","src":"33:5673:118","nodes":[{"id":46260,"nodeType":"PragmaDirective","src":"33:24:118","nodes":[],"literals":["solidity","^","0.8",".19"]},{"id":46261,"nodeType":"ImportDirective","src":"59:56:118","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","nameLocation":"-1:-1:-1","scope":46363,"sourceUnit":17514,"symbolAliases":[],"unitAlias":""},{"id":46262,"nodeType":"ImportDirective","src":"116:27:118","nodes":[],"absolutePath":"pkg/contracts/src/interfaces/IArbitrable.sol","file":"./IArbitrable.sol","nameLocation":"-1:-1:-1","scope":46363,"sourceUnit":46259,"symbolAliases":[],"unitAlias":""},{"id":46362,"nodeType":"ContractDefinition","src":"761:4944:118","nodes":[{"id":46271,"nodeType":"EventDefinition","src":"994:83:118","nodes":[],"anonymous":false,"documentation":{"id":46264,"nodeType":"StructuredDocumentation","src":"789:200:118","text":"@dev To be emitted when a dispute is created.\n @param _disputeID The identifier of the dispute in the Arbitrator contract.\n @param _arbitrable The contract which created the dispute."},"eventSelector":"141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed995","name":"DisputeCreation","nameLocation":"1000:15:118","parameters":{"id":46270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46266,"indexed":true,"mutability":"mutable","name":"_disputeID","nameLocation":"1032:10:118","nodeType":"VariableDeclaration","scope":46271,"src":"1016:26:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1016:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":46269,"indexed":true,"mutability":"mutable","name":"_arbitrable","nameLocation":"1064:11:118","nodeType":"VariableDeclaration","scope":46271,"src":"1044:31:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$46258","typeString":"contract IArbitrable"},"typeName":{"id":46268,"nodeType":"UserDefinedTypeName","pathNode":{"id":46267,"name":"IArbitrable","nameLocations":["1044:11:118"],"nodeType":"IdentifierPath","referencedDeclaration":46258,"src":"1044:11:118"},"referencedDeclaration":46258,"src":"1044:11:118","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$46258","typeString":"contract IArbitrable"}},"visibility":"internal"}],"src":"1015:61:118"}},{"id":46281,"nodeType":"EventDefinition","src":"1332:91:118","nodes":[],"anonymous":false,"documentation":{"id":46272,"nodeType":"StructuredDocumentation","src":"1083:244:118","text":"@dev To be raised when a ruling is given.\n @param _arbitrable The arbitrable receiving the ruling.\n @param _disputeID The identifier of the dispute in the Arbitrator contract.\n @param _ruling The ruling which was given."},"eventSelector":"394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e75622276","name":"Ruling","nameLocation":"1338:6:118","parameters":{"id":46280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46275,"indexed":true,"mutability":"mutable","name":"_arbitrable","nameLocation":"1365:11:118","nodeType":"VariableDeclaration","scope":46281,"src":"1345:31:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$46258","typeString":"contract IArbitrable"},"typeName":{"id":46274,"nodeType":"UserDefinedTypeName","pathNode":{"id":46273,"name":"IArbitrable","nameLocations":["1345:11:118"],"nodeType":"IdentifierPath","referencedDeclaration":46258,"src":"1345:11:118"},"referencedDeclaration":46258,"src":"1345:11:118","typeDescriptions":{"typeIdentifier":"t_contract$_IArbitrable_$46258","typeString":"contract IArbitrable"}},"visibility":"internal"},{"constant":false,"id":46277,"indexed":true,"mutability":"mutable","name":"_disputeID","nameLocation":"1394:10:118","nodeType":"VariableDeclaration","scope":46281,"src":"1378:26:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1378:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":46279,"indexed":false,"mutability":"mutable","name":"_ruling","nameLocation":"1414:7:118","nodeType":"VariableDeclaration","scope":46281,"src":"1406:15:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1344:78:118"}},{"id":46289,"nodeType":"EventDefinition","src":"1623:70:118","nodes":[],"anonymous":false,"documentation":{"id":46282,"nodeType":"StructuredDocumentation","src":"1429:189:118","text":"@dev To be emitted when an ERC20 token is added or removed as a method to pay fees.\n @param _token The ERC20 token.\n @param _accepted Whether the token is accepted or not."},"eventSelector":"541615e167511d757a7067a700eb54431b256bb458dfdce0ac58bf2ed0aefd44","name":"AcceptedFeeToken","nameLocation":"1629:16:118","parameters":{"id":46288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46285,"indexed":true,"mutability":"mutable","name":"_token","nameLocation":"1661:6:118","nodeType":"VariableDeclaration","scope":46289,"src":"1646:21:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$17513","typeString":"contract IERC20"},"typeName":{"id":46284,"nodeType":"UserDefinedTypeName","pathNode":{"id":46283,"name":"IERC20","nameLocations":["1646:6:118"],"nodeType":"IdentifierPath","referencedDeclaration":17513,"src":"1646:6:118"},"referencedDeclaration":17513,"src":"1646:6:118","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$17513","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":46287,"indexed":true,"mutability":"mutable","name":"_accepted","nameLocation":"1682:9:118","nodeType":"VariableDeclaration","scope":46289,"src":"1669:22:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46286,"name":"bool","nodeType":"ElementaryTypeName","src":"1669:4:118","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1645:47:118"}},{"id":46299,"nodeType":"EventDefinition","src":"1955:88:118","nodes":[],"anonymous":false,"documentation":{"id":46290,"nodeType":"StructuredDocumentation","src":"1699:251:118","text":"@dev To be emitted when the fee for a particular ERC20 token is updated.\n @param _feeToken The ERC20 token.\n @param _rateInEth The new rate of the fee token in ETH.\n @param _rateDecimals The new decimals of the fee token rate."},"eventSelector":"e6996b7f03e9bd02228b99d3d946932e3197f505f60542c4cfbc919441d8a4e6","name":"NewCurrencyRate","nameLocation":"1961:15:118","parameters":{"id":46298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46293,"indexed":true,"mutability":"mutable","name":"_feeToken","nameLocation":"1992:9:118","nodeType":"VariableDeclaration","scope":46299,"src":"1977:24:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$17513","typeString":"contract IERC20"},"typeName":{"id":46292,"nodeType":"UserDefinedTypeName","pathNode":{"id":46291,"name":"IERC20","nameLocations":["1977:6:118"],"nodeType":"IdentifierPath","referencedDeclaration":17513,"src":"1977:6:118"},"referencedDeclaration":17513,"src":"1977:6:118","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$17513","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":46295,"indexed":false,"mutability":"mutable","name":"_rateInEth","nameLocation":"2010:10:118","nodeType":"VariableDeclaration","scope":46299,"src":"2003:17:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":46294,"name":"uint64","nodeType":"ElementaryTypeName","src":"2003:6:118","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":46297,"indexed":false,"mutability":"mutable","name":"_rateDecimals","nameLocation":"2028:13:118","nodeType":"VariableDeclaration","scope":46299,"src":"2022:19:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":46296,"name":"uint8","nodeType":"ElementaryTypeName","src":"2022:5:118","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1976:66:118"}},{"id":46309,"nodeType":"FunctionDefinition","src":"2659:145:118","nodes":[],"documentation":{"id":46300,"nodeType":"StructuredDocumentation","src":"2049:605:118","text":"@dev Create a dispute and pay for the fees in the native currency, typically ETH.\n      Must be called by the arbitrable contract.\n      Must pay at least arbitrationCost(_extraData).\n @param _numberOfChoices The number of choices the arbitrator can choose from in this dispute.\n @param _extraData Additional info about the dispute. We use it to pass the ID of the dispute's court (first 32 bytes), the minimum number of jurors required (next 32 bytes) and the ID of the specific dispute kit (last 32 bytes).\n @return disputeID The identifier of the dispute created."},"functionSelector":"c13517e1","implemented":false,"kind":"function","modifiers":[],"name":"createDispute","nameLocation":"2668:13:118","parameters":{"id":46305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46302,"mutability":"mutable","name":"_numberOfChoices","nameLocation":"2690:16:118","nodeType":"VariableDeclaration","scope":46309,"src":"2682:24:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2682:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":46304,"mutability":"mutable","name":"_extraData","nameLocation":"2723:10:118","nodeType":"VariableDeclaration","scope":46309,"src":"2708:25:118","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":46303,"name":"bytes","nodeType":"ElementaryTypeName","src":"2708:5:118","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2681:53:118"},"returnParameters":{"id":46308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46307,"mutability":"mutable","name":"disputeID","nameLocation":"2793:9:118","nodeType":"VariableDeclaration","scope":46309,"src":"2785:17:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46306,"name":"uint256","nodeType":"ElementaryTypeName","src":"2785:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2784:19:118"},"scope":46362,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":46324,"nodeType":"FunctionDefinition","src":"3538:167:118","nodes":[],"documentation":{"id":46310,"nodeType":"StructuredDocumentation","src":"2810:723:118","text":"@dev Create a dispute and pay for the fees in a supported ERC20 token.\n      Must be called by the arbitrable contract.\n      Must pay at least arbitrationCost(_extraData).\n @param _numberOfChoices The number of choices the arbitrator can choose from in this dispute.\n @param _extraData Additional info about the dispute. We use it to pass the ID of the dispute's court (first 32 bytes), the minimum number of jurors required (next 32 bytes) and the ID of the specific dispute kit (last 32 bytes).\n @param _feeToken The ERC20 token used to pay fees.\n @param _feeAmount Amount of the ERC20 token used to pay fees.\n @return disputeID The identifier of the dispute created."},"functionSelector":"f6506db4","implemented":false,"kind":"function","modifiers":[],"name":"createDispute","nameLocation":"3547:13:118","parameters":{"id":46320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46312,"mutability":"mutable","name":"_numberOfChoices","nameLocation":"3569:16:118","nodeType":"VariableDeclaration","scope":46324,"src":"3561:24:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46311,"name":"uint256","nodeType":"ElementaryTypeName","src":"3561:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":46314,"mutability":"mutable","name":"_extraData","nameLocation":"3602:10:118","nodeType":"VariableDeclaration","scope":46324,"src":"3587:25:118","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":46313,"name":"bytes","nodeType":"ElementaryTypeName","src":"3587:5:118","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":46317,"mutability":"mutable","name":"_feeToken","nameLocation":"3621:9:118","nodeType":"VariableDeclaration","scope":46324,"src":"3614:16:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$17513","typeString":"contract IERC20"},"typeName":{"id":46316,"nodeType":"UserDefinedTypeName","pathNode":{"id":46315,"name":"IERC20","nameLocations":["3614:6:118"],"nodeType":"IdentifierPath","referencedDeclaration":17513,"src":"3614:6:118"},"referencedDeclaration":17513,"src":"3614:6:118","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$17513","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":46319,"mutability":"mutable","name":"_feeAmount","nameLocation":"3640:10:118","nodeType":"VariableDeclaration","scope":46324,"src":"3632:18:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46318,"name":"uint256","nodeType":"ElementaryTypeName","src":"3632:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3560:91:118"},"returnParameters":{"id":46323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46322,"mutability":"mutable","name":"disputeID","nameLocation":"3694:9:118","nodeType":"VariableDeclaration","scope":46324,"src":"3686:17:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3686:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3685:19:118"},"scope":46362,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":46332,"nodeType":"FunctionDefinition","src":"4254:89:118","nodes":[],"documentation":{"id":46325,"nodeType":"StructuredDocumentation","src":"3711:538:118","text":"@dev Compute the cost of arbitration denominated in the native currency, typically ETH.\n      It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _extraData Additional info about the dispute. We use it to pass the ID of the dispute's court (first 32 bytes), the minimum number of jurors required (next 32 bytes) and the ID of the specific dispute kit (last 32 bytes).\n @return cost The arbitration cost in ETH."},"functionSelector":"f7434ea9","implemented":false,"kind":"function","modifiers":[],"name":"arbitrationCost","nameLocation":"4263:15:118","parameters":{"id":46328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46327,"mutability":"mutable","name":"_extraData","nameLocation":"4294:10:118","nodeType":"VariableDeclaration","scope":46332,"src":"4279:25:118","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":46326,"name":"bytes","nodeType":"ElementaryTypeName","src":"4279:5:118","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4278:27:118"},"returnParameters":{"id":46331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46330,"mutability":"mutable","name":"cost","nameLocation":"4337:4:118","nodeType":"VariableDeclaration","scope":46332,"src":"4329:12:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46329,"name":"uint256","nodeType":"ElementaryTypeName","src":"4329:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4328:14:118"},"scope":46362,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":46343,"nodeType":"FunctionDefinition","src":"4936:107:118","nodes":[],"documentation":{"id":46333,"nodeType":"StructuredDocumentation","src":"4349:582:118","text":"@dev Compute the cost of arbitration denominated in `_feeToken`.\n      It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n @param _extraData Additional info about the dispute. We use it to pass the ID of the dispute's court (first 32 bytes), the minimum number of jurors required (next 32 bytes) and the ID of the specific dispute kit (last 32 bytes).\n @param _feeToken The ERC20 token used to pay fees.\n @return cost The arbitration cost in `_feeToken`."},"functionSelector":"d98493f6","implemented":false,"kind":"function","modifiers":[],"name":"arbitrationCost","nameLocation":"4945:15:118","parameters":{"id":46339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46335,"mutability":"mutable","name":"_extraData","nameLocation":"4976:10:118","nodeType":"VariableDeclaration","scope":46343,"src":"4961:25:118","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":46334,"name":"bytes","nodeType":"ElementaryTypeName","src":"4961:5:118","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":46338,"mutability":"mutable","name":"_feeToken","nameLocation":"4995:9:118","nodeType":"VariableDeclaration","scope":46343,"src":"4988:16:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$17513","typeString":"contract IERC20"},"typeName":{"id":46337,"nodeType":"UserDefinedTypeName","pathNode":{"id":46336,"name":"IERC20","nameLocations":["4988:6:118"],"nodeType":"IdentifierPath","referencedDeclaration":17513,"src":"4988:6:118"},"referencedDeclaration":17513,"src":"4988:6:118","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$17513","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"4960:45:118"},"returnParameters":{"id":46342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46341,"mutability":"mutable","name":"cost","nameLocation":"5037:4:118","nodeType":"VariableDeclaration","scope":46343,"src":"5029:12:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:14:118"},"scope":46362,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":46355,"nodeType":"FunctionDefinition","src":"5337:110:118","nodes":[],"documentation":{"id":46344,"nodeType":"StructuredDocumentation","src":"5049:283:118","text":"@dev Gets the current ruling of a specified dispute.\n @param _disputeID The ID of the dispute.\n @return ruling The current ruling.\n @return tied Whether it's a tie or not.\n @return overridden Whether the ruling was overridden by appeal funding or not."},"functionSelector":"1c3db16d","implemented":false,"kind":"function","modifiers":[],"name":"currentRuling","nameLocation":"5346:13:118","parameters":{"id":46347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46346,"mutability":"mutable","name":"_disputeID","nameLocation":"5368:10:118","nodeType":"VariableDeclaration","scope":46355,"src":"5360:18:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46345,"name":"uint256","nodeType":"ElementaryTypeName","src":"5360:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5359:20:118"},"returnParameters":{"id":46354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46349,"mutability":"mutable","name":"ruling","nameLocation":"5411:6:118","nodeType":"VariableDeclaration","scope":46355,"src":"5403:14:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46348,"name":"uint256","nodeType":"ElementaryTypeName","src":"5403:7:118","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":46351,"mutability":"mutable","name":"tied","nameLocation":"5424:4:118","nodeType":"VariableDeclaration","scope":46355,"src":"5419:9:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46350,"name":"bool","nodeType":"ElementaryTypeName","src":"5419:4:118","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":46353,"mutability":"mutable","name":"overridden","nameLocation":"5435:10:118","nodeType":"VariableDeclaration","scope":46355,"src":"5430:15:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46352,"name":"bool","nodeType":"ElementaryTypeName","src":"5430:4:118","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5402:44:118"},"scope":46362,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":46361,"nodeType":"FunctionDefinition","src":"5657:46:118","nodes":[],"documentation":{"id":46356,"nodeType":"StructuredDocumentation","src":"5479:173:118","text":"@dev Authorize the safe to execute a ruling on the source contract.<\n @param _safe that acts as the Tribunal safe that can rule disputes from the source Strategy."},"functionSelector":"88d5b732","implemented":false,"kind":"function","modifiers":[],"name":"registerSafe","nameLocation":"5666:12:118","parameters":{"id":46359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46358,"mutability":"mutable","name":"_safe","nameLocation":"5687:5:118","nodeType":"VariableDeclaration","scope":46361,"src":"5679:13:118","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46357,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:118","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:15:118"},"returnParameters":{"id":46360,"nodeType":"ParameterList","parameters":[],"src":"5702:0:118"},"scope":46362,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IArbitrator","contractDependencies":[],"contractKind":"interface","documentation":{"id":46263,"nodeType":"StructuredDocumentation","src":"145:616:118","text":"@title Arbitrator\n Arbitrator interface that implements the new arbitration standard.\n Unlike the ERC-792 this standard is not concerned with appeals, so each arbitrator can implement an appeal system that suits it the most.\n When developing arbitrator contracts we need to:\n - Define the functions for dispute creation (createDispute). Don't forget to store the arbitrated contract and the disputeID (which should be unique, may nbDisputes).\n - Define the functions for cost display (arbitrationCost).\n - Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling)."},"fullyImplemented":false,"linearizedBaseContracts":[46362],"name":"IArbitrator","nameLocation":"771:11:118","scope":46363,"usedErrors":[]}],"license":"MIT"},"id":118}